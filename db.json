{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/bamboo/source/favicon.jpg","path":"favicon.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/css/animate.min.css","path":"css/animate.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/activate-power-mode.js","path":"js/activate-power-mode.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/goTop.js","path":"js/goTop.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/jquery3.5.1.js","path":"js/jquery3.5.1.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/local_search.js","path":"js/local_search.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/ribbon.min.js","path":"js/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/vue2.6.11.js","path":"js/vue2.6.11.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/wrapImage.js","path":"js/wrapImage.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/1.jpg","path":"medias/1.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/10.jpg","path":"medias/10.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/11.jpg","path":"medias/11.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/12.jpg","path":"medias/12.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/13.jpg","path":"medias/13.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/14.jpg","path":"medias/14.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/15.jpg","path":"medias/15.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/2.jpg","path":"medias/2.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/3.jpg","path":"medias/3.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/4.jpg","path":"medias/4.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/6.jpg","path":"medias/6.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/7.jpg","path":"medias/7.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/8.jpg","path":"medias/8.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/9.jpg","path":"medias/9.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/5.jpg","path":"medias/5.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/about.jpg","path":"medias/about.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/archive.jpg","path":"medias/archive.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/categories.jpg","path":"medias/categories.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/categoryDetail.jpg","path":"medias/categoryDetail.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/comment-bg.gif","path":"medias/comment-bg.gif","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/comment.jpg","path":"medias/comment.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/comment2.jpg","path":"medias/comment2.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/coverBg1.jpg","path":"medias/coverBg1.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/friend.jpg","path":"medias/friend.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/logo.jpg","path":"medias/logo.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/notice_bg.png","path":"medias/notice_bg.png","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/ocean.mp4","path":"medias/ocean.mp4","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/pageBg1.jpg","path":"medias/pageBg1.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/pageBg2.jpg","path":"medias/pageBg2.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/tag.jpg","path":"medias/tag.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/tagDetail.jpg","path":"medias/tagDetail.jpg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/aplayer/APlayer@1.10.1.min.css","path":"js/aplayer/APlayer@1.10.1.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/bubble/bubble.js","path":"js/bubble/bubble.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/bubble/homeBubble.js","path":"js/bubble/homeBubble.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/clipboard/clipboard.min.js","path":"js/clipboard/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/cursor/explosion.min.js","path":"js/cursor/explosion.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/cursor/clicklove.js","path":"js/cursor/clicklove.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/cursor/fireworks.js","path":"js/cursor/fireworks.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/cursor/text.js","path":"js/cursor/text.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/danmu/barrager.css","path":"js/danmu/barrager.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/danmu/close.png","path":"js/danmu/close.png","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/danmu/jquery.barrager.js","path":"js/danmu/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/falling/sakura.js","path":"js/falling/sakura.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/falling/snow.js","path":"js/falling/snow.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/fancybox/jquery.fancybox.min.css","path":"js/fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/fancybox/jquery.fancybox.min.js","path":"js/fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/issues/index.js","path":"js/issues/index.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/loaded/index.css","path":"js/loaded/index.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/pjax@0.2.8/index.js","path":"js/pjax@0.2.8/index.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism-dark.min.css","path":"js/prism/prism-dark.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism-coy.min.css","path":"js/prism/prism-coy.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism-funky.min.css","path":"js/prism/prism-funky.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism-okaidia.min.css","path":"js/prism/prism-okaidia.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism-line-numbers.css","path":"js/prism/prism-line-numbers.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism-solarizedlight.min.css","path":"js/prism/prism-solarizedlight.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism-tomorrow.min.css","path":"js/prism/prism-tomorrow.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism-twilight.min.css","path":"js/prism/prism-twilight.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/prism/prism.min.css","path":"js/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/shareJs/font.css","path":"js/shareJs/font.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/shareJs/share.min.css","path":"js/shareJs/share.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/shareJs/social-share.min.js","path":"js/shareJs/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/swiper/swiper.animate1.0.3.min.js","path":"js/swiper/swiper.animate1.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/swiper/swiper.min.js","path":"js/swiper/swiper.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/swiper/swiper@5.4.1.min.css","path":"js/swiper/swiper@5.4.1.min.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/swiper/vue-awesome-swiper.js","path":"js/swiper/vue-awesome-swiper.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/tocbot/tocbot.css","path":"js/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/tocbot/tocbot.min.js","path":"js/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/twikoo/twikoo.all.min.js","path":"js/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/twikoo/twikoo.all.min.js.LICENSE.txt","path":"js/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/utils/index.js","path":"js/utils/index.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/valine/index.js","path":"js/valine/index.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/vue-seamless-scroll/index.js","path":"js/vue-seamless-scroll/index.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/vue-typed-js/index.css","path":"js/vue-typed-js/index.css","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/vue-typed-js/index.js","path":"js/vue-typed-js/index.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/waline/waline.min.js","path":"js/waline/waline.min.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/cursor/Horizontal.cur","path":"medias/cursor/Horizontal.cur","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/shareJs/fonts/iconfont.eot","path":"js/shareJs/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/shareJs/fonts/iconfont.svg","path":"js/shareJs/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/shareJs/fonts/iconfont.ttf","path":"js/shareJs/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/shareJs/fonts/iconfont.woff","path":"js/shareJs/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"source/images/202401091514088.png","path":"images/202401091514088.png","modified":0,"renderable":0},{"_id":"source/images/202401091514124.png","path":"images/202401091514124.png","modified":0,"renderable":0},{"_id":"source/images/202401091514334.png","path":"images/202401091514334.png","modified":0,"renderable":0},{"_id":"source/images/202401091514353.png","path":"images/202401091514353.png","modified":0,"renderable":0},{"_id":"source/images/202401091514818.png","path":"images/202401091514818.png","modified":0,"renderable":0},{"_id":"source/images/202401091515023.png","path":"images/202401091515023.png","modified":0,"renderable":0},{"_id":"source/images/202401091515486.png","path":"images/202401091515486.png","modified":0,"renderable":0},{"_id":"source/images/202401091515516.png","path":"images/202401091515516.png","modified":0,"renderable":0},{"_id":"source/images/cover_20230207.jpg","path":"images/cover_20230207.jpg","modified":0,"renderable":0},{"_id":"source/images/cover_20230207.mp4","path":"images/cover_20230207.mp4","modified":0,"renderable":0},{"_id":"source/images/cover_rebbitbg.jpg","path":"images/cover_rebbitbg.jpg","modified":0,"renderable":0},{"_id":"source/images/coverres_20230207_01.mp4","path":"images/coverres_20230207_01.mp4","modified":0,"renderable":0},{"_id":"source/images/coverres_20230207_02.mp4","path":"images/coverres_20230207_02.mp4","modified":0,"renderable":0},{"_id":"source/images/coverres_20230207_03.mp4","path":"images/coverres_20230207_03.mp4","modified":0,"renderable":0},{"_id":"source/images/coverres_20230207_04.mp4","path":"images/coverres_20230207_04.mp4","modified":0,"renderable":0},{"_id":"source/images/coverres_20230207_05.jpg","path":"images/coverres_20230207_05.jpg","modified":0,"renderable":0},{"_id":"source/images/giteeforbiddenjpgbed.png","path":"images/giteeforbiddenjpgbed.png","modified":0,"renderable":0},{"_id":"source/images/girhubhoutaisettings.png","path":"images/girhubhoutaisettings.png","modified":0,"renderable":0},{"_id":"source/images/githubsetselfurl.png","path":"images/githubsetselfurl.png","modified":0,"renderable":0},{"_id":"source/images/githubsettingpage.png","path":"images/githubsettingpage.png","modified":0,"renderable":0},{"_id":"source/images/histcover1_rabbit01.mp4","path":"images/histcover1_rabbit01.mp4","modified":0,"renderable":0},{"_id":"source/images/histcover1_rabbit03.mp4","path":"images/histcover1_rabbit03.mp4","modified":0,"renderable":0},{"_id":"source/images/histcover1_rabbit04.mp4","path":"images/histcover1_rabbit04.mp4","modified":0,"renderable":0},{"_id":"source/images/histcover1_rabbit05.mp4","path":"images/histcover1_rabbit05.mp4","modified":0,"renderable":0},{"_id":"source/images/histcover1_rabbit06.mp4","path":"images/histcover1_rabbit06.mp4","modified":0,"renderable":0},{"_id":"source/images/histcover1_rabbit02.mp4","path":"images/histcover1_rabbit02.mp4","modified":0,"renderable":0},{"_id":"source/images/invalid_referer_tip.png","path":"images/invalid_referer_tip.png","modified":0,"renderable":0},{"_id":"source/images/mottoBg.webp","path":"images/mottoBg.webp","modified":0,"renderable":0},{"_id":"source/images/nginxconfopensf.png","path":"images/nginxconfopensf.png","modified":0,"renderable":0},{"_id":"source/images/otherwebsitelocaitionnginx.png","path":"images/otherwebsitelocaitionnginx.png","modified":0,"renderable":0},{"_id":"source/images/nginxsetlocation.png","path":"images/nginxsetlocation.png","modified":0,"renderable":0},{"_id":"source/images/scptransferdemo.png","path":"images/scptransferdemo.png","modified":0,"renderable":0},{"_id":"source/images/scpwindowsfirstlink.png","path":"images/scpwindowsfirstlink.png","modified":0,"renderable":0},{"_id":"source/images/scpwindowslinkok.png","path":"images/scpwindowslinkok.png","modified":0,"renderable":0},{"_id":"source/images/selectoceanstyle.png","path":"images/selectoceanstyle.png","modified":0,"renderable":0},{"_id":"source/images/setbamboostyle.png","path":"images/setbamboostyle.png","modified":0,"renderable":0},{"_id":"source/images/themeandconfigs.png","path":"images/themeandconfigs.png","modified":0,"renderable":0},{"_id":"source/images/themesIntro.png","path":"images/themesIntro.png","modified":0,"renderable":0},{"_id":"source/images/vlog_hangzhouxh.mp4","path":"images/vlog_hangzhouxh.mp4","modified":0,"renderable":0},{"_id":"source/images/vlog_wuxi.mp4","path":"images/vlog_wuxi.mp4","modified":0,"renderable":0},{"_id":"source/images/vlogcover_vol1.jpg","path":"images/vlogcover_vol1.jpg","modified":0,"renderable":0},{"_id":"source/images/vlogcover_vol2.jpg","path":"images/vlogcover_vol2.jpg","modified":0,"renderable":0},{"_id":"source/images/wanwanggoumaiyuming.png","path":"images/wanwanggoumaiyuming.png","modified":0,"renderable":0},{"_id":"source/gallery/misc/10001.jpg","path":"gallery/misc/10001.jpg","modified":0,"renderable":0},{"_id":"source/gallery/misc/10002.jpg","path":"gallery/misc/10002.jpg","modified":0,"renderable":0},{"_id":"source/gallery/misc/10003.jpg","path":"gallery/misc/10003.jpg","modified":0,"renderable":0},{"_id":"themes/bamboo/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/bamboo/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/getPhotoOnline/index.js","path":"js/getPhotoOnline/index.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/getSiteOnline/index.js","path":"js/getSiteOnline/index.js","modified":0,"renderable":1},{"_id":"themes/bamboo/source/js/getTalkOnline/index.js","path":"js/getTalkOnline/index.js","modified":0,"renderable":1},{"_id":"source/images/202402011754207.png","path":"images/202402011754207.png","modified":0,"renderable":0},{"_id":"source/images/bg/5910391f5ba57.jpg","path":"images/bg/5910391f5ba57.jpg","modified":0,"renderable":0},{"_id":"source/images/202402021405279.jpg","path":"images/202402021405279.jpg","modified":0,"renderable":0},{"_id":"source/images/bg/591039263be09.jpg","path":"images/bg/591039263be09.jpg","modified":0,"renderable":0},{"_id":"source/images/bg/591039294a193.jpg","path":"images/bg/591039294a193.jpg","modified":0,"renderable":0},{"_id":"source/images/bg/5910392d25805.jpg","path":"images/bg/5910392d25805.jpg","modified":0,"renderable":0},{"_id":"source/images/202402041655968.png","path":"images/202402041655968.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_discarded/Hexo博客搭建教程.md","hash":"39ee3d8b03ecf13f651ad6929c7eaaa6c4f66dee","modified":1705050873970},{"_id":"source/_discarded/My-New-Post.md","hash":"b6205cc3e4b13b391167541d45ccb559831a6130","modified":1705050873998},{"_id":"source/_drafts/vlog 旅拍系列 vol.1 无锡.md","hash":"2b3d00fd2ff74cf0a2bd65f4cd8dbcd33a8dd8cd","modified":1705050873188},{"_id":"source/_drafts/贡献一批无版权视频（1）.md","hash":"6d16a73204b8179e73386342d120d2e0b79f371d","modified":1705050873174},{"_id":"source/_discarded/hello-world.md","hash":"fe1b742ec3e0a4f01a3925df95eeddc84673e2f4","modified":1705050873985},{"_id":"source/_drafts/vlog 旅拍系列 vol.2 杭州西湖.md","hash":"2c66fd7168b132e9baa90615ae24518384d56f03","modified":1705050873160},{"_id":"source/_posts/Android与Unity交互之AndroidJavaProxy回调的使用.md","hash":"fa50f2380211477ab32a7f711baf996b20692033","modified":1705050873017},{"_id":"source/_posts/Unity 与 iOS 工程桥接介绍.md","hash":"ccb64692fa4c1f72a3079a0396b29b27e939e116","modified":1706854750509},{"_id":"source/_posts/博客搭建教程1 - 准备阶段.md","hash":"6454f5a89ef3bca727aacb3a962016805869f515","modified":1705051576057},{"_id":"source/_posts/博客搭建教程10 - 将托管在Github的Hexo博客迁移到个人云服务器.md","hash":"f1c2a0ded20f7ed96ff8291dd9e9cfde776fc233","modified":1705050872927},{"_id":"source/_posts/博客搭建教程11 - 使用linux+nginx建站每次云服务器重启后的例行检查操作.md","hash":"454d7e903c9982d32378ad6ffa7577570f1279b9","modified":1705050873006},{"_id":"source/_posts/博客搭建教程12 - 更换云服务器完成数据迁移.md","hash":"4a219caaa63ff1936043370e0912b499857d1b40","modified":1705050873107},{"_id":"source/_posts/博客搭建教程13 - 写博客实用网站大合集.md","hash":"407b58cf2bd472efb92eb1a699cee8cf069ee84a","modified":1705050872950},{"_id":"source/_posts/博客搭建教程14 - Linux云服务器安装宝塔运维工具.md","hash":"0e5be65122823e2ab37f4e3b427f8c326518ac33","modified":1705050873045},{"_id":"source/_posts/博客搭建教程15 - Markdown常用语法.md","hash":"b6460cc191c99527f7a9f3d5d750345570c6db05","modified":1706854641872},{"_id":"source/_posts/博客搭建教程16 - linux云服务器在nginx.conf配置防盗链.md","hash":"f7caf08bbea21f337a00e0fc45664f8e4f159832","modified":1705050872842},{"_id":"source/_posts/博客搭建教程2 - 创建Git仓库.md","hash":"35b602b595e9abf1c038f17769ffe16a62c6cd1e","modified":1705050872972},{"_id":"source/_posts/博客搭建教程3 - 初识Node.js和Hexo.md","hash":"0feb573bbd3bc5064ed99814617fa2d724dd0054","modified":1705050872829},{"_id":"source/_posts/博客搭建教程4 - 更换Hexo博客主题.md","hash":"76b60054972b12b4e6f3d929ab7f9ff5397c5545","modified":1705050873089},{"_id":"source/_posts/博客搭建教程5 - 为Hexo博客安装插件.md","hash":"6a45c11157e624300f246059f447c4249b6245cc","modified":1705050872994},{"_id":"source/_posts/博客搭建教程6 - 为Github部署的Hexo博客更换新域名.md","hash":"45fc0208ac4140c29f5e131d90312cf022c0f4cd","modified":1705050872892},{"_id":"source/_posts/博客搭建教程7 - 为博客网站选择合适的云服务器.md","hash":"490a0bc8c606879126fc52c2f0ec8c4bfe5aa22d","modified":1705050872860},{"_id":"source/_posts/博客搭建教程8-接触Linux.md","hash":"9b820a5518e9c7d6ffe6ff75693d5e9422be2634","modified":1705050872962},{"_id":"source/_posts/博客搭建教程9 - 使用scp命令从Windows向linux传输文件.md","hash":"7c9b2cda6d8c2977acd840cc70af7a239a133152","modified":1705050872914},{"_id":"source/_posts/测试文档.md","hash":"3a0653be443b94fe5b43bd8860d791a1c24fec9f","modified":1707038111823},{"_id":"source/_posts/往期封面2023_02_07 沙特猫.md","hash":"3eded851012e1bbacc85b89eb8303440361e7a8a","modified":1705050872873},{"_id":"source/_posts/往期封面2023-01-18 熊猫兔珍贵影像资料.md","hash":"bdbb2663a8c97703361b42dbaf603c384983f327","modified":1706853196385},{"_id":"source/categories/index.md","hash":"d8250ecb78eeb995e62dc4149d79241aabac6075","modified":1705050874076},{"_id":"source/_posts/对超过2G的apk重新进行4字节对齐并做v1-v2签名.md","hash":"42da5c0a2dae04b26ebe42eba741fbf19587ca03","modified":1706854816246},{"_id":"source/creation/index.md","hash":"ce8ef07081c0c888b68e97c2a845769ceb4b50ca","modified":1705050874102},{"_id":"source/gallery/index.md","hash":"fd4d2ef4af605692e5d68c9591f653c367a46def","modified":1705050874013},{"_id":"source/images/202401091514088.png","hash":"d6919311f133cc33cdffbc78d9865a0e0b4b533c","modified":1705048849764},{"_id":"source/images/202401091514334.png","hash":"2b68306b0244b9b75542b655648612991edf5836","modified":1705048849764},{"_id":"source/images/202401091514818.png","hash":"9e588e98e64ab5323dcbb7ab00807bd4e13ef2b8","modified":1705048849765},{"_id":"source/images/202401091514353.png","hash":"ed7b515bb14595ef88f0687b5a09b42823281a88","modified":1705048849764},{"_id":"source/images/202401091515023.png","hash":"13fdc017bebcac0dfabf45c6d5d2041c6e86a26e","modified":1705048849784},{"_id":"source/images/202401091515486.png","hash":"d6aab1d329314ff40ea3ecf5f60254075e54f6fa","modified":1705048849784},{"_id":"source/images/invalid_referer_tip.png","hash":"9dae1905927e14bc7e7c7f028624bcc9da76e921","modified":1705050873210},{"_id":"source/images/mottoBg.webp","hash":"0cdf9db90d1e86804f35ec4dd2f97305c995fac5","modified":1705050873733},{"_id":"source/images/scptransferdemo.png","hash":"6e8fb79a6369a77a1fd3aa9de9454764baed3758","modified":1705050873814},{"_id":"source/images/scpwindowsfirstlink.png","hash":"8d5ca7a41a3a610ad7f532ddfb42409b881dae06","modified":1705050873806},{"_id":"source/images/scpwindowslinkok.png","hash":"f5e81662b869ca8f670b5f38a6ec5146d5013b3e","modified":1705050873271},{"_id":"source/images/setbamboostyle.png","hash":"5e5e28a9a0c29dc7f0f71d7789407bf24aad70e8","modified":1705050873933},{"_id":"source/tags/index.md","hash":"41300b4dbe2d1cb9b19cb432cceb479e3916e0b8","modified":1705050874086},{"_id":"source/vlog/index.md","hash":"beebe9486af24e1c889275b5435b9dae041c5a5e","modified":1705050874134},{"_id":"source/images/themesIntro.png","hash":"32385106011f2aa5881ee5181f50e8f5659fcbd9","modified":1705050873657},{"_id":"source/about/index.md","hash":"c46fc24258e862700e8036ebcabfc2d46337d37b","modified":1705050874117},{"_id":"source/gallery/misc/index.md","hash":"2b4b55d06e7a24db6c0a9775c100af6732424d31","modified":1705050874030},{"_id":"source/images/202401091514124.png","hash":"3acab2178ff667f6d80d620759b5e1424c4dc837","modified":1705048849764},{"_id":"source/images/202401091515516.png","hash":"ce80f8ee269f0c7ac13094d85d6b7ebd05299011","modified":1705048849784},{"_id":"source/images/cover_rebbitbg.jpg","hash":"edf13e1b75b50b48a3b344f195a101b407747ce9","modified":1705050873667},{"_id":"source/images/coverres_20230207_05.jpg","hash":"f966a93801479aa5818817b310e1a532c236f846","modified":1705050873281},{"_id":"source/images/giteeforbiddenjpgbed.png","hash":"25db503df7d1a8b3f54130ac79342db44c7be6ec","modified":1705050873314},{"_id":"source/images/nginxconfopensf.png","hash":"17fe3e85952e237fb2b244ba76a131ba7d1b80d8","modified":1705050873254},{"_id":"source/images/vlogcover_vol2.jpg","hash":"43f09f6cec0f6994c77986dd86e6a6c4905a48e6","modified":1705050873245},{"_id":"source/images/vlogcover_vol1.jpg","hash":"66773fd76d81ec090e2ef0880baf28e9a91b96b8","modified":1705050873764},{"_id":"source/images/girhubhoutaisettings.png","hash":"8236d55f1eaf363e32172c534bd0b39113642bbe","modified":1705050873942},{"_id":"source/images/nginxsetlocation.png","hash":"ac5e235896a224dc5447774822075dc326402d63","modified":1705050873264},{"_id":"source/images/githubsetselfurl.png","hash":"a5c783939994939a98e160ad4d1817bbf27d96ae","modified":1705050873925},{"_id":"source/images/githubsettingpage.png","hash":"87bfc66bf8985cc5c5917bb5a288f960fbcefc0f","modified":1705050873202},{"_id":"source/images/themeandconfigs.png","hash":"d9f5b2ecdf165737aadd62a3f331e1cbf21eec38","modified":1705050873290},{"_id":"source/images/wanwanggoumaiyuming.png","hash":"146d1917d846534e2e46fb64514bf141ba19bc21","modified":1705050873689},{"_id":"source/gallery/misc/10001.jpg","hash":"077e245948b97e7f988301eaa26d8056f2023120","modified":1705050874050},{"_id":"source/images/cover_20230207.jpg","hash":"9361e284d7dd0a384804d0e5f13318cae8604a9b","modified":1705050873498},{"_id":"source/images/otherwebsitelocaitionnginx.png","hash":"b41a12134f3207251bc69f976b350a501dafde57","modified":1705050873798},{"_id":"source/gallery/misc/10002.jpg","hash":"11da03af3f9b6e7b6b62a1b1e5c184e22034f270","modified":1705050874039},{"_id":"themes/bamboo/source/css/_tag/ghcard.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1705050884813},{"_id":"themes/bamboo/LICENSE","hash":"2f9d4d3c41f055757f8c86567cfe838846446e7b","modified":1705053011508},{"_id":"themes/bamboo/README.md","hash":"6dadb9e9ec0e81d9f498ebefb852fcd1b92fad49","modified":1705050884031},{"_id":"themes/bamboo/package.json","hash":"f9a1313104800e57ac4f2414a68b6693cac08dd4","modified":1706778479500},{"_id":"themes/bamboo/_config.yml","hash":"5c3d0930e3f9ec1661444d3cb21270be139cea0c","modified":1707037843046},{"_id":"themes/bamboo/languages/default.yml","hash":"4c604dc1344630ae5ab50edc282a3e46982884c1","modified":1705050886840},{"_id":"themes/bamboo/languages/zh-CN.yml","hash":"2bf66fefa219ee8152d35bb5f823ca5096fedcf2","modified":1705050886821},{"_id":"themes/bamboo/layout/about.ejs","hash":"8127becb12c60a857f1e448cb02e1b8996c65537","modified":1705050891532},{"_id":"themes/bamboo/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1705050891586},{"_id":"themes/bamboo/layout/categories.ejs","hash":"b0f71816ca4c0899eb82b6fa100abf91b56508ab","modified":1705050891539},{"_id":"themes/bamboo/languages/zh-TW.yml","hash":"bd3ef201b7dcbeeee54107301550d60e71d72ba7","modified":1705050886831},{"_id":"themes/bamboo/layout/category.ejs","hash":"d0d19ac565414123c24b312f7158dbe1c9e275f8","modified":1705050891573},{"_id":"themes/bamboo/layout/layout.ejs","hash":"87250bb0d5181cef78d8413ac585f4f5d2b230c3","modified":1706778479500},{"_id":"themes/bamboo/layout/post.ejs","hash":"3e77ec60c2b7453df3baeb0f0fa586e4a48bd2d0","modified":1705050891623},{"_id":"themes/bamboo/layout/tags.ejs","hash":"0c6a171fa56cf8bfa180db32f10f75c6760fd983","modified":1705050891674},{"_id":"themes/bamboo/layout/tag.ejs","hash":"1061f8a9b51d983590a3efc536142a9b10acebf5","modified":1705050891644},{"_id":"themes/bamboo/layout/friends.ejs","hash":"906db16fd36cb54dd3100c08c0f206a84ddf096d","modified":1705050891547},{"_id":"themes/bamboo/layout/index.ejs","hash":"fea918c473fe66846b7a7f94da4617610cff3d07","modified":1705050891694},{"_id":"themes/bamboo/source/favicon.jpg","hash":"1653595f4de3ab1ad5558cbb3b8a67438e8950f4","modified":1705050884041},{"_id":"themes/bamboo/layout/_partial/archive.ejs","hash":"246967d57c31bd873f98603536df79c1f67c96e2","modified":1705050891794},{"_id":"themes/bamboo/layout/_partial/dark.ejs","hash":"cb74dcf56c40986eb8ab97bb6becf1b1202c3cd3","modified":1705050891814},{"_id":"themes/bamboo/layout/_partial/home_widget.ejs","hash":"0882e6992cfc2fbf1e0b05acbc1463de68f77aa4","modified":1705050891830},{"_id":"themes/bamboo/layout/_partial/goTop.ejs","hash":"d7841037d77470a314d0c4265e6380a120262c3f","modified":1705050891867},{"_id":"themes/bamboo/layout/_partial/lantern.ejs","hash":"225044aa82bf305e27a00adf1a8368146e860394","modified":1705050891884},{"_id":"themes/bamboo/layout/_partial/notice.ejs","hash":"f3363a88d830ce258921a6a8785e670a986d5829","modified":1705050891838},{"_id":"themes/bamboo/layout/_partial/loaded.ejs","hash":"80084d3222c6776671201046d99a746ae9fd375f","modified":1705053011512},{"_id":"themes/bamboo/layout/_partial/paginator.ejs","hash":"26655627ce5b1eb7050b5e24cc262cf3fc46c400","modified":1705050891892},{"_id":"themes/bamboo/layout/_partial/motto.ejs","hash":"535af08125435651591be103f8e6d98c7222907d","modified":1705050891759},{"_id":"themes/bamboo/layout/_partial/side.ejs","hash":"ce8974204c76e4a0c099141fa754841f6c8ad890","modified":1705050891751},{"_id":"themes/bamboo/layout/_partial/swiper.ejs","hash":"8aa83ce6526094bf47ee28b6cce39f89ba392756","modified":1705050892054},{"_id":"themes/bamboo/scripts/events/index.js","hash":"9046faaf379c1e7ff6f80d2985d70792cd15de3d","modified":1705050886733},{"_id":"themes/bamboo/scripts/tag/btn.js","hash":"0e628fa28e03f60e28f257af895b2e72a0cb8449","modified":1705050886505},{"_id":"themes/bamboo/scripts/tag/btns.js","hash":"618e2f77ec244d8814f2b38c9820d1356580bbcd","modified":1705050886716},{"_id":"themes/bamboo/scripts/tag/checkbox.js","hash":"49da9041bd41c57a547d42fb7a6741757b848f1c","modified":1705050886698},{"_id":"themes/bamboo/scripts/tag/gallery.js","hash":"694a6a81dd3b3aa4a37e39b35402e99322941ec1","modified":1705050886466},{"_id":"themes/bamboo/scripts/helpers/side_archives.js","hash":"a292f0a9e9242556b83219f519e3e92a4d85e904","modified":1705050886762},{"_id":"themes/bamboo/scripts/tag/image.js","hash":"faa1d83114bc255cffc18bd0ab037f08b430f515","modified":1705050886607},{"_id":"themes/bamboo/scripts/tag/folding.js","hash":"832c55a45cfeeabcd2d317d42faaee09ee54d2a4","modified":1705050886426},{"_id":"themes/bamboo/scripts/tag/inline-labels.js","hash":"eaaedc3d65384e0beb4306534ef4ed202b46da18","modified":1705050886649},{"_id":"themes/bamboo/scripts/tag/file.js","hash":"260333b277073ba8f41472cdddb35ee3e8212267","modified":1705050886689},{"_id":"themes/bamboo/scripts/tag/link.js","hash":"a11fe06f20669f4b64a1a0dcc9f005a9f32e29dc","modified":1705050886459},{"_id":"themes/bamboo/scripts/tag/mermaid.js","hash":"1e69a5e4a4a5f88fdb76d0fe55ea651c14301816","modified":1705050886482},{"_id":"themes/bamboo/scripts/tag/issues.js","hash":"7dcb40af462e4131f6a52d354ed3b147b4e874af","modified":1705050886498},{"_id":"themes/bamboo/layout/_partial/topArticle.ejs","hash":"9b321c75dbcbc424b2392e90426127182539a86d","modified":1705050891846},{"_id":"themes/bamboo/scripts/tag/ghcard.js","hash":"4e893d79abc1e8e1e5b3bfe08249ff32b250314d","modified":1705050886590},{"_id":"themes/bamboo/scripts/tag/note.js","hash":"9e990caa1fd815a760e31f1eaa02015d357fcef8","modified":1705050886562},{"_id":"themes/bamboo/scripts/tag/progress.js","hash":"99a10305e3924aaab05135ef25afd10d04574bfe","modified":1705050886582},{"_id":"themes/bamboo/scripts/tag/span.js","hash":"d617b5a0056c4a0c983225513c89eed6f5b56833","modified":1705050886543},{"_id":"themes/bamboo/scripts/tag/swiper.js","hash":"26a587371f7d2f6715cdb0e5f4f7b63a7f7921cd","modified":1705050886418},{"_id":"themes/bamboo/scripts/tag/tabs.js","hash":"133310460bdf70a7932b44c3ccca509b3f221e1c","modified":1705050886670},{"_id":"themes/bamboo/scripts/tag/timeline.js","hash":"da2b0d7760dea698429f370aba5cded5bb24501e","modified":1705050886519},{"_id":"themes/bamboo/scripts/tag/title.js","hash":"8cfce58425366f805a5f2c88f01b76dca44f91ce","modified":1705050886624},{"_id":"themes/bamboo/scripts/tag/site.js","hash":"1cb487b1435925a55eaf957d761bc08254092c36","modified":1705050886442},{"_id":"themes/bamboo/scripts/z-lazyload/index.js","hash":"58b935fb699a98f0a9ceb741d2105a977e24cf59","modified":1705050886780},{"_id":"themes/bamboo/scripts/tag/titleB.js","hash":"3dde507bf20477cd89e71549be8ddfc4964a76ed","modified":1705050886489},{"_id":"themes/bamboo/source/css/style.styl","hash":"5d30954d92926b3ebe07bde429e45394ac06f6d5","modified":1706778479503},{"_id":"themes/bamboo/source/css/animate.min.css","hash":"dc47ce9b8438909921b14e766febdabf3018e3c2","modified":1705050884065},{"_id":"themes/bamboo/scripts/tag/media.js","hash":"1d163ee349818baeb95504f82d3497da6f6556e2","modified":1705050886642},{"_id":"themes/bamboo/source/js/activate-power-mode.js","hash":"2e14b0f48c55eaec543d96ec0eb2f16e80c20c01","modified":1705050885340},{"_id":"themes/bamboo/source/js/app.js","hash":"57f824da5f893a0c83c80522114797f09868ccf1","modified":1705050885417},{"_id":"themes/bamboo/source/js/goTop.js","hash":"2fc5be4f18b0963fca600a77cb12348fec3aa10c","modified":1705050885466},{"_id":"themes/bamboo/source/js/local_search.js","hash":"131d74198aa41bdb74dc27ef3ed856bc3d752f8d","modified":1705050885355},{"_id":"themes/bamboo/source/js/ribbon.min.js","hash":"e6136a6243e04faca95844f47c21b070ade3661a","modified":1705050885319},{"_id":"themes/bamboo/source/js/wrapImage.js","hash":"fd9072a35d48f120ac4c35e51882b83dc97b3101","modified":1705050885399},{"_id":"themes/bamboo/source/medias/1.jpg","hash":"8be56e3deb39033e1e3e1bfcdd2053931b0d7bb5","modified":1705050885015},{"_id":"themes/bamboo/source/medias/2.jpg","hash":"bc25752d286c7638b2c82eae897c3bbfd1281f51","modified":1705050885188},{"_id":"themes/bamboo/source/medias/4.jpg","hash":"b48ad74a85834f7cc354de6f0e29885d8406a0bf","modified":1705050885057},{"_id":"themes/bamboo/source/medias/5.jpg","hash":"b40c58fa6ceaa48ea139b0ef96ba1d7a9ab2b618","modified":1705050885040},{"_id":"themes/bamboo/source/medias/comment.jpg","hash":"d0e27cf8623d6bf743b5d099dfc2916bcab4e4d7","modified":1705050885084},{"_id":"themes/bamboo/source/medias/logo.jpg","hash":"499c7d9213ba617837f0f527036ad70f0c664227","modified":1705050885023},{"_id":"themes/bamboo/layout/_partial/analytics/baidu-analytics.ejs","hash":"9e1a9d6a678e4e86951630a17f95085942e0b7e3","modified":1705050892495},{"_id":"themes/bamboo/layout/_partial/analytics/baidu-push.ejs","hash":"2841870e0c625787de348221e5ddb7bbe99ec5a2","modified":1705050892473},{"_id":"themes/bamboo/layout/_partial/card/post.ejs","hash":"37fd6f4443620ff3b2963c19fc42bd21891428b0","modified":1705050893062},{"_id":"themes/bamboo/layout/_partial/footer/busuanzi.ejs","hash":"bc3d2f6abc95b329dfe0186fa0364c48aab3772e","modified":1705050893125},{"_id":"themes/bamboo/layout/_partial/analytics/google-analytics.ejs","hash":"cb7d5c76508fe8db43dbd4af9a691398fffccadb","modified":1705050892503},{"_id":"themes/bamboo/layout/_partial/footer/footer.ejs","hash":"3ed9b13b849c5a54dc667b9137beaa769d382980","modified":1705050893113},{"_id":"themes/bamboo/layout/_partial/footer/fish.ejs","hash":"cc9fd78d1cb9a8e4202be880a95b2e2341b585f0","modified":1705050893148},{"_id":"themes/bamboo/layout/_partial/head/drawer.ejs","hash":"d6c573976836666539a99515d14551b8d6a63fca","modified":1705050892370},{"_id":"themes/bamboo/layout/_partial/head/head.ejs","hash":"57d8f04200aecf4fb5059f63bacbd7075bc6d306","modified":1705050892461},{"_id":"themes/bamboo/layout/_partial/head/header.ejs","hash":"e6d87db732bccbe03f0502fb8decfd81b5f309e1","modified":1705050892378},{"_id":"themes/bamboo/layout/_partial/head/search.ejs","hash":"7cbf73c577874de0b6cc89180680b1e19c5e8348","modified":1705050892401},{"_id":"themes/bamboo/layout/_partial/math/mathjax.ejs","hash":"dc9a1270d34448606e87e52a3b003a89f4f5b3aa","modified":1705050893257},{"_id":"themes/bamboo/layout/_partial/math/mermaid.ejs","hash":"2c6894abc259167170e274728467c7c7aa1ef8e5","modified":1705050893264},{"_id":"themes/bamboo/layout/_partial/meta/aplayer.ejs","hash":"8175c8dc578a1f57d365e5997ea3cfd619289e37","modified":1705050892790},{"_id":"themes/bamboo/layout/_partial/pjax/animate.ejs","hash":"72b0af79d0e00ea78675141972a24fe4dbae907b","modified":1705050893536},{"_id":"themes/bamboo/layout/_partial/pjax/index.ejs","hash":"6ac774c816f9dcb7099612e2ef13bb0e7893476c","modified":1705050893561},{"_id":"themes/bamboo/layout/_partial/post/bgSwiper.ejs","hash":"77ade59920c57fda25c2be421b77adf7b0c943d9","modified":1705050893491},{"_id":"themes/bamboo/layout/_partial/post/categories.ejs","hash":"15f33099ef5f653b9ceb3e27f089b36bff50cc4f","modified":1705050893287},{"_id":"themes/bamboo/layout/_partial/post/comment.ejs","hash":"29e2fb7e343ce945a60030ce3ecd2a1b4018cd09","modified":1705050893468},{"_id":"themes/bamboo/layout/_partial/post/copyright.ejs","hash":"fd3af5c33895f907b1e5daa56d8d7266549dd019","modified":1705050893507},{"_id":"themes/bamboo/layout/_partial/post/donate.ejs","hash":"b54c1be4bf9a4b28a8c39d2835e8b4d9ee1e56ff","modified":1705050893435},{"_id":"themes/bamboo/layout/_partial/post/post-detail-header.ejs","hash":"5a3c6260749d798b77611577736a833d271e54fc","modified":1705050893383},{"_id":"themes/bamboo/layout/_partial/post/post-nav.ejs","hash":"1e92a0ca46977f94ce27540ceb09ce05bc75accd","modified":1705050893427},{"_id":"themes/bamboo/layout/_partial/post/prismjs.ejs","hash":"62eb641fb1f9381166aa6c2752b4022e1a2ea52e","modified":1705050893346},{"_id":"themes/bamboo/layout/_partial/post/share.ejs","hash":"d6e134f460383d8e0d44a74a9177385a713cf9f8","modified":1705050893279},{"_id":"themes/bamboo/layout/_partial/post/tags.ejs","hash":"f92692427de2caa48033f975f193f9a8e4b02613","modified":1705050893483},{"_id":"themes/bamboo/layout/_partial/post/toc.ejs","hash":"ab8a551ca8c18e4115d2708fb578d68b1c29c2b4","modified":1705050893354},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_3.ejs","hash":"1ef0876d3a2f3ae43eccdf3c88dbd9c642d22d62","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_1.ejs","hash":"e82a5a888ba376080b21d4e39ac9b4fff2623d24","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_2.ejs","hash":"d1df3a9050bae7cb7cf17d44359292999a1d0664","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_4.ejs","hash":"458f5c179670b029178c037f1feb99f566b9408e","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_5.ejs","hash":"7db609c64eeabb8b68771097663d1ff427667e14","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_6.ejs","hash":"7ce6bd6bf765d23acb30f1a054e56f265099a4dd","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_7.ejs","hash":"3b6d1da24786682b5d248f5e59f8f48510a55d4d","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_8.ejs","hash":"2ab0a97498e0f35516c1db65949afd831a2800da","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/preLoader/loader_9.ejs","hash":"dc847b16f4fe38cf41d88c1575a2f531ed9aeaf1","modified":1705053011514},{"_id":"themes/bamboo/layout/_partial/scripts/copy.ejs","hash":"fda84bf47a5e7c5692f682a45f8fdcfab90900b0","modified":1705050892605},{"_id":"themes/bamboo/layout/_partial/scripts/cursor_effect.ejs","hash":"4c2a505655fb8c8d23d70584d8ea1968d1be4dcc","modified":1705050892514},{"_id":"themes/bamboo/layout/_partial/scripts/danmu.ejs","hash":"ca20ae64fbd2527f8b54fc8618a3a0502728420c","modified":1705050892555},{"_id":"themes/bamboo/layout/_partial/scripts/dark.ejs","hash":"340343fda6fb9bff2b853d44d3268a7fff1f4ac9","modified":1705050892630},{"_id":"themes/bamboo/layout/_partial/scripts/falling.ejs","hash":"a8de433fc45883415a2d92c904fe7be111f6b8f0","modified":1705050892660},{"_id":"themes/bamboo/layout/_partial/scripts/global.ejs","hash":"16851de5516d2908787ed902b778c8f03f9ae63b","modified":1705050892538},{"_id":"themes/bamboo/layout/_partial/scripts/head.ejs","hash":"4536885880315fb90efd75935c133051a729d45c","modified":1705050892725},{"_id":"themes/bamboo/layout/_partial/scripts/index.ejs","hash":"fbd74a8d1af22aaa50641902283e709edbc27aa1","modified":1705050892779},{"_id":"themes/bamboo/layout/_partial/scripts/inputEffects.ejs","hash":"765c69436e021412dd8bbb852ea2403c97fc6adf","modified":1705050892621},{"_id":"themes/bamboo/layout/_partial/scripts/lazyload.ejs","hash":"b7e8071598a8dc70406aba8da949c5d6f5403e47","modified":1705050892705},{"_id":"themes/bamboo/layout/_partial/scripts/issues.ejs","hash":"cf5436f10fb9a2fb7238a1c528a5ed64a2345840","modified":1705050892531},{"_id":"themes/bamboo/layout/_partial/scripts/scrollreveal.ejs","hash":"4aba6d5b506b3a8fc7d84abe0d42875e0107d64e","modified":1705050892674},{"_id":"themes/bamboo/layout/_partial/scripts/setHeader.ejs","hash":"a76903748b33d745ec76ae3e8e8622d2c6b9ffbb","modified":1705050892563},{"_id":"themes/bamboo/layout/_partial/scripts/swiperTag.ejs","hash":"020d6cd78cd9ace5477a79e57e958a2f5a6d43f3","modified":1705050892695},{"_id":"themes/bamboo/layout/_partial/scripts/toc.ejs","hash":"9c6966c2edbe0474bf6c77b5948281f6e731311c","modified":1706778479499},{"_id":"themes/bamboo/layout/_partial/scripts/typed.ejs","hash":"262725f946bb3ae8957b8e3d50c1a7cd564f8866","modified":1705050892667},{"_id":"themes/bamboo/layout/_partial/side/sideHeader.ejs","hash":"87a5eb0f31b1c6581652162861970563a5f035c5","modified":1705050892914},{"_id":"themes/bamboo/layout/_partial/side/side_archives.ejs","hash":"c82b7c669aaaa2b9575cf6daf6d0a133b64acfd0","modified":1705050893008},{"_id":"themes/bamboo/layout/_partial/side/side_blogger.ejs","hash":"a2c637abf7943b273edfb69d0d8e0dc812c84127","modified":1705050892905},{"_id":"themes/bamboo/layout/_partial/side/side_category.ejs","hash":"dccd4537a94cf6e210803d6ab2789e6cd57d755e","modified":1705050892835},{"_id":"themes/bamboo/layout/_partial/side/side_recent_post.ejs","hash":"7fe61d14865e97988ff5d42047abb4a4ee8af7f0","modified":1705050892881},{"_id":"themes/bamboo/layout/_partial/side/side_tagcloud.ejs","hash":"7e716ce939cb8dd4004896adf41559d57bcfff0e","modified":1705050892896},{"_id":"themes/bamboo/layout/_partial/side/side_toc.ejs","hash":"670c9c8bbc0f8cadfaa1e5caca73fd641d2fe831","modified":1705050892811},{"_id":"themes/bamboo/layout/_partial/side/side_webinfo.ejs","hash":"1efe51b2685b7c4ad2ab42849c5ebe59e2d20def","modified":1705050892999},{"_id":"themes/bamboo/layout/_partial/side/widget_library_sticky.ejs","hash":"e3929f7edf85900e7becc71e0cbe14da2333f621","modified":1705050892931},{"_id":"themes/bamboo/scripts/events/lib/stellar-tag-utils.js","hash":"315d9e8a8261e760e1001970e09c32a660c969e0","modified":1705050886742},{"_id":"themes/bamboo/scripts/z-lazyload/lib/process.js","hash":"48a29bdb7026c4a9c8a58190d044140a8a05a64c","modified":1705050886809},{"_id":"themes/bamboo/source/css/_defines/variable.styl","hash":"5a92423d626110fba9cdef69676a9c028aab7dbf","modified":1705050884599},{"_id":"themes/bamboo/source/css/_partial/about.styl","hash":"96dd179c1f3e4f90f1ffa4fdc7d2b2890b88e0db","modified":1705050884330},{"_id":"themes/bamboo/source/css/_partial/archive.styl","hash":"64838c4f6928a4d50f1f7371a02e2ff20345bf18","modified":1705050884210},{"_id":"themes/bamboo/source/css/_partial/base.styl","hash":"27997d4fe331826816337ce0be5a474ac2eaf50d","modified":1705050884309},{"_id":"themes/bamboo/source/css/_partial/categories.styl","hash":"c7aaf48f72d5ada71a556df76eb3828aa37d0978","modified":1705050884169},{"_id":"themes/bamboo/source/css/_partial/category.styl","hash":"58d3759e56faaf123929381672199a59e58e5060","modified":1705050884322},{"_id":"themes/bamboo/source/css/_partial/comment.styl","hash":"a023684d767291b9fac121892c14268d3d199c9e","modified":1705050884114},{"_id":"themes/bamboo/source/css/_partial/custom.styl","hash":"9e5c1049faa95def7f16dc5f51348ad20a6cd3d4","modified":1705050884392},{"_id":"themes/bamboo/source/css/_partial/danmu.styl","hash":"8aaa764bb2b1c6a49c2f6c9ee868da24a0359669","modified":1705050884088},{"_id":"themes/bamboo/source/css/_partial/dark.styl","hash":"28d5269fae1cbaec4f40c21daa0378c098c7d801","modified":1705050884409},{"_id":"themes/bamboo/source/css/_partial/donate.styl","hash":"a880996ca61f96ba1280d581a132deb924c4ff62","modified":1705050884245},{"_id":"themes/bamboo/source/css/_partial/drawer.styl","hash":"0498b0cf2819b681eeeec35193e491d1d039302d","modified":1705050884122},{"_id":"themes/bamboo/source/css/_partial/friends.styl","hash":"5a5b3a1b8689df7b948c22a8b41ba10a528d412c","modified":1705050884183},{"_id":"themes/bamboo/source/css/_partial/copyRyght.styl","hash":"ed1377ceb86204fa6b6c7430d14a1366d9ca568e","modified":1705050884133},{"_id":"themes/bamboo/source/css/_partial/footer.styl","hash":"598d193754645b22a0f1406303c1df66d95ffd9d","modified":1705050884366},{"_id":"themes/bamboo/source/css/_partial/goTop.styl","hash":"08c3dc03570ca3738f18b99ebe95c79ec3d0ce0a","modified":1705050884285},{"_id":"themes/bamboo/source/css/_partial/header.styl","hash":"c2ed8f30dea3922a0c77f2d7216c186212de8a2b","modified":1705050884293},{"_id":"themes/bamboo/source/css/_partial/highlight.styl","hash":"7ae2103f3d12e7f5d8a9c1209265a7d6cded6f6c","modified":1705050884075},{"_id":"themes/bamboo/source/css/_partial/lantern.styl","hash":"04acde311d7b9f7a732340626dbe677814ab502f","modified":1705050884252},{"_id":"themes/bamboo/source/css/_partial/home.styl","hash":"0bd1214d90fcf7ae020ee0673da4a9fd7c225274","modified":1705050884176},{"_id":"themes/bamboo/source/css/_partial/notice.styl","hash":"eadfde19fbe7c0c2cfafd1f73e7b81e2481425f7","modified":1705050884342},{"_id":"themes/bamboo/source/css/_partial/motto.styl","hash":"cb484d25bc6f0bcda4cadffb5f1cdbe5df93919e","modified":1705050884436},{"_id":"themes/bamboo/source/css/_partial/pace.styl","hash":"f3073154a4e4a5a2143ed82b2a8adff2cc5b32fe","modified":1705050884231},{"_id":"themes/bamboo/source/css/_partial/paginator.styl","hash":"df1fd26976fd5be8418cd49a5c65ec651a680496","modified":1705050884259},{"_id":"themes/bamboo/source/css/_partial/post-detail-header.styl","hash":"8225927f64fae704e8064a5c0240779fece33e9f","modified":1705050884223},{"_id":"themes/bamboo/source/css/_partial/post-nav.styl","hash":"a7c7b33ad813885af485815d8c787c0fb3b6c8c8","modified":1705050884359},{"_id":"themes/bamboo/source/css/_partial/post.styl","hash":"da5e94a59c9d633c88faa84423118fe815d99628","modified":1706778479502},{"_id":"themes/bamboo/source/css/_partial/posts.styl","hash":"9464726d962229149d38841c087f6207cd8c2adc","modified":1705050884203},{"_id":"themes/bamboo/source/css/_partial/search.styl","hash":"2f67103cd8cb9b92d1ca4f334e41c195e01c3ce3","modified":1705050884147},{"_id":"themes/bamboo/source/css/_partial/side.styl","hash":"b660cbce05fd120c82e7ea065e87022684a9533c","modified":1706778479502},{"_id":"themes/bamboo/source/css/_partial/tag.styl","hash":"1867acdc716115483fff242d89e3086c197691ca","modified":1705050884155},{"_id":"themes/bamboo/source/css/_partial/tags.styl","hash":"7f5ab4b991d9ac43dcf336e666ec2ff02cd77549","modified":1706778479503},{"_id":"themes/bamboo/source/css/_partial/topArticle.styl","hash":"910e24383b1009e27c0ebf26a5958051451da47c","modified":1705050884375},{"_id":"themes/bamboo/source/css/_partial/transition.styl","hash":"809b40b7214cda6691b2f22ae827cbdbfaf8c303","modified":1705050884422},{"_id":"themes/bamboo/source/css/_plugins/pjaxanimate.styl","hash":"f8c2d14c041bb87bc7f37d82ac939320e3d110bf","modified":1705050884568},{"_id":"themes/bamboo/source/css/_tag/btn.styl","hash":"dbba1c1f7d374bd7c69c5b9758a61371db334d87","modified":1705053011525},{"_id":"themes/bamboo/source/css/_tag/checkbox.styl","hash":"dbc18a5685879493b06016c85993d4522fe48564","modified":1705050884750},{"_id":"themes/bamboo/source/css/_tag/circle.styl","hash":"c2adc73eab52952140420c2b5fc8bf134432b695","modified":1705050884791},{"_id":"themes/bamboo/source/css/_plugins/mathjax.styl","hash":"499f59db53e9c57d99bebe4722156aeca7adb8b7","modified":1705050884582},{"_id":"themes/bamboo/source/css/_tag/gallery.styl","hash":"d97e1caee6862df812a172679d76db2c7ac8de62","modified":1705050884735},{"_id":"themes/bamboo/source/css/_tag/galleryGroup.styl","hash":"ea9f387bc1bc00b4d6d4bd34e2df9046bda3610a","modified":1705053011527},{"_id":"themes/bamboo/source/css/_tag/image.styl","hash":"ce0c9f758f0f0be385c38d65e9bf4fb708cbaf5c","modified":1705050884825},{"_id":"themes/bamboo/source/css/_tag/inline-label.styl","hash":"1903a258c5829c8370c4eb53fcb60df7f7921f08","modified":1705050884702},{"_id":"themes/bamboo/source/css/_tag/link.styl","hash":"7181435bed445840bb61d655451494f83ac4d7e9","modified":1705050884668},{"_id":"themes/bamboo/source/css/_tag/media.styl","hash":"6727008f95ad9b3146c609a2e890af009472f9e4","modified":1705050884682},{"_id":"themes/bamboo/source/css/_tag/progress.styl","hash":"de1e1b08d23f95493ffda2a5375888e9e678891b","modified":1705050884653},{"_id":"themes/bamboo/source/css/_tag/folding.styl","hash":"7a88c350d302c6a89ab008b6ce2a98ed6f19c007","modified":1705050884640},{"_id":"themes/bamboo/source/css/_tag/site-card.styl","hash":"ee95cbf6072dbe3ae11e6f73a3b38a9c09e31994","modified":1705050884769},{"_id":"themes/bamboo/source/css/_tag/span.styl","hash":"bede49e1edf1049d4ea2f3dd0a17787fe084b2d2","modified":1705050884694},{"_id":"themes/bamboo/source/css/_tag/swiper.styl","hash":"ff02b78ba54cb71eafad141c3e4ef4a9cd9085cd","modified":1705050884784},{"_id":"themes/bamboo/source/css/_tag/note.styl","hash":"4487702c5348bf691e329fa8a9bbb6f42808436f","modified":1705050884804},{"_id":"themes/bamboo/source/css/_tag/tabs.styl","hash":"ca2dac222da40e13aa3b117d55b2da74d7ce9a35","modified":1705050884633},{"_id":"themes/bamboo/source/css/_tag/timeline.styl","hash":"ae8e4487a32606127d26dc27c74df592b2175f82","modified":1705050884742},{"_id":"themes/bamboo/source/css/_tag/title.styl","hash":"a9effa8299f80275bc4ea2fbcc403a8ba233be79","modified":1705050884660},{"_id":"themes/bamboo/source/js/aplayer/APlayer@1.10.1.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1705050885744},{"_id":"themes/bamboo/source/js/bubble/bubble.js","hash":"57f116efe2418a389913a46909e018fa4c9b9e84","modified":1705050885709},{"_id":"themes/bamboo/source/js/clipboard/clipboard.min.js","hash":"76fd19c15b1d0a2d7afc7b66ca5f80c9061aabe2","modified":1705050886223},{"_id":"themes/bamboo/source/js/bubble/homeBubble.js","hash":"8475e7ed2004b9791b3f7ad4162b7a2b89467874","modified":1705050885726},{"_id":"themes/bamboo/source/js/cursor/explosion.min.js","hash":"ed2d0a5ad306a2745b7c8180b69e36b78d4b0698","modified":1705050886085},{"_id":"themes/bamboo/source/js/cursor/fireworks.js","hash":"86ad9484e40268952b5e32c240fb04d0268f86dd","modified":1705050886064},{"_id":"themes/bamboo/source/js/cursor/clicklove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1705050886057},{"_id":"themes/bamboo/source/js/danmu/close.png","hash":"2c3ed4345f91dc1b74a57b6dcd1e1efa9e279dbb","modified":1705050885794},{"_id":"themes/bamboo/source/js/danmu/barrager.css","hash":"9de985f20d314f3f1182f30d1b0666e5eb9ca9b5","modified":1705050885784},{"_id":"themes/bamboo/source/js/cursor/text.js","hash":"7dd898cb00b46ceda065c92f2ac092c4ef41b4e4","modified":1705050886102},{"_id":"themes/bamboo/source/js/danmu/jquery.barrager.js","hash":"72ec0d8bbd0811973152fcbb316b0dd839ffb8f3","modified":1705050885801},{"_id":"themes/bamboo/source/js/falling/snow.js","hash":"99222d79ff36b05200b3ff7f54f8209d8f0a364b","modified":1705050886196},{"_id":"themes/bamboo/source/js/falling/sakura.js","hash":"b1566483a7d0deda2dd35db3d5a46f13aa5f1a86","modified":1705050886177},{"_id":"themes/bamboo/source/js/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1705050885988},{"_id":"themes/bamboo/source/js/issues/index.js","hash":"f02538ab609541489396a682879ce854519487ca","modified":1705050885766},{"_id":"themes/bamboo/source/js/loaded/index.css","hash":"67970197fec47832162ea29c3cf795d315cea891","modified":1705050885932},{"_id":"themes/bamboo/source/js/prism/prism-dark.min.css","hash":"a3f604a19e9a46f83a2fde49dfb45782748957ca","modified":1705050885624},{"_id":"themes/bamboo/source/js/pjax@0.2.8/index.js","hash":"efb9166635c18f09f2c7604a8b15d6ac8aae4870","modified":1705050886015},{"_id":"themes/bamboo/source/js/prism/prism-coy.min.css","hash":"fe1246de39c25eaa7ad1b0c997ee530dbdd39ad8","modified":1705050885657},{"_id":"themes/bamboo/source/js/prism/prism-funky.min.css","hash":"0220f68ccda78c2b5d1109e58f3879674c93b587","modified":1705050885643},{"_id":"themes/bamboo/source/js/prism/prism-okaidia.min.css","hash":"50be6cc15d883ff3fa5d0885fed47241695a986c","modified":1705050885616},{"_id":"themes/bamboo/source/js/prism/prism-solarizedlight.min.css","hash":"927b757cd8030d12953b5c0fa6eed5de15dda8ad","modified":1705050885683},{"_id":"themes/bamboo/source/js/prism/prism-line-numbers.css","hash":"c42732535ac61ac59a4356af3d89186a3071edf1","modified":1705050885603},{"_id":"themes/bamboo/source/js/prism/prism-tomorrow.min.css","hash":"7b4247bc4d3b719afe5957779d0e5c8fb716c8ea","modified":1705050885667},{"_id":"themes/bamboo/source/js/prism/prism-twilight.min.css","hash":"ff4a6e3c4f1cb9bb59ec061656eacb750d238c15","modified":1705050885587},{"_id":"themes/bamboo/source/js/prism/prism.min.css","hash":"aa405e2bcb571595c822a80f5482454c1536fa52","modified":1705050885595},{"_id":"themes/bamboo/source/js/shareJs/font.css","hash":"f6407017418989fb0ced993509543fb07c6b0b33","modified":1705050886233},{"_id":"themes/bamboo/source/js/shareJs/share.min.css","hash":"9bd0cd6c81b60e10085cdda6aa724f147ee76599","modified":1705050886276},{"_id":"themes/bamboo/source/js/shareJs/social-share.min.js","hash":"efdfa6b695ac6f0dd04cd8153d3e3a1a1edd90c2","modified":1705050886267},{"_id":"themes/bamboo/source/js/swiper/swiper.animate1.0.3.min.js","hash":"6a8d6aa926e552a563356c36d52d1e0e0c83521e","modified":1705050885531},{"_id":"themes/bamboo/source/js/swiper/swiper@5.4.1.min.css","hash":"fd618d2bdf929821d9fa70ae377b840ffc47d756","modified":1705050885524},{"_id":"themes/bamboo/source/js/swiper/vue-awesome-swiper.js","hash":"e6f36537ed091a6b69945b1acf49e426426f1cf0","modified":1705050885548},{"_id":"themes/bamboo/source/js/tocbot/tocbot.css","hash":"45e469dffa7b9ebc03f99fd09fb97274cdc5e9b4","modified":1705050885892},{"_id":"themes/bamboo/source/js/tocbot/tocbot.min.js","hash":"bc45d3586a21f7e364cd6efe58844932c00cf11c","modified":1705050885916},{"_id":"themes/bamboo/source/js/utils/index.js","hash":"fcea598ed253006d79f78d34cc36fdc6649639f3","modified":1705050886359},{"_id":"themes/bamboo/source/js/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1705050886406},{"_id":"themes/bamboo/source/js/vue-seamless-scroll/index.js","hash":"f2aaf3f9b1ab7362f7cc158e5360cb1d62a57172","modified":1705050885573},{"_id":"themes/bamboo/source/js/vue-typed-js/index.css","hash":"b9dac4cfc5f0dc8854393d670b525fb63092fd38","modified":1705050886113},{"_id":"themes/bamboo/source/js/vue-typed-js/index.js","hash":"c8e6f4510eb5fe55015401510ce03f5307556b1a","modified":1705050886140},{"_id":"themes/bamboo/source/medias/cursor/Horizontal.cur","hash":"c3c5e8485a67b7ab16079a96b53aff7ff52de756","modified":1705050885310},{"_id":"themes/bamboo/layout/_partial/comment/gitalk/layout.ejs","hash":"8a4c57646ee0d4a4e94d568708fb85a8f9ac97e7","modified":1705050892257},{"_id":"themes/bamboo/layout/_partial/comment/beaudar/layout.ejs","hash":"52b9a55b6e83bd9a10fc3f66a18be98e3965475b","modified":1705050892172},{"_id":"themes/bamboo/layout/_partial/comment/beaudar/script.ejs","hash":"58b914569fbc9d5bf706674c1ea4d7a83b5540d1","modified":1705050892159},{"_id":"themes/bamboo/layout/_partial/comment/changyan/layout.ejs","hash":"46192143a90303d8924b3d07d28df116bc833894","modified":1705050892088},{"_id":"themes/bamboo/layout/_partial/comment/changyan/script.ejs","hash":"c357b9052564e12754cf21a1cb1debd3bdfe1eac","modified":1705050892076},{"_id":"themes/bamboo/layout/_partial/comment/gitalk/script.ejs","hash":"733947cad238d89c5a5694ecf19a83b1d5648ab9","modified":1705050892246},{"_id":"themes/bamboo/layout/_partial/comment/gitment/layout.ejs","hash":"353820d6d6aade09cd21b31585afa20485008083","modified":1705050892115},{"_id":"themes/bamboo/layout/_partial/comment/livere/layout.ejs","hash":"f88b32604056721e658c25f775866a1519e714f2","modified":1705050892292},{"_id":"themes/bamboo/layout/_partial/comment/gitment/script.ejs","hash":"1e02cf43a347a612796aa188446605e213e0dd51","modified":1705050892100},{"_id":"themes/bamboo/layout/_partial/comment/twikoo/layout.ejs","hash":"c51eab2274374330820b29d3a9e69b3273433f9f","modified":1705050892324},{"_id":"themes/bamboo/layout/_partial/comment/livere/script.ejs","hash":"b33339cfa1429947cf44f9cb41a5996865467cc3","modified":1705050892279},{"_id":"themes/bamboo/layout/_partial/comment/twikoo/script.ejs","hash":"655e305e6a9c189a49f88b086c8694e50ecfb37d","modified":1705050892312},{"_id":"themes/bamboo/layout/_partial/comment/utterance/layout.ejs","hash":"eab867c580f6184d068d5fcc545a763a2919eb16","modified":1705050892148},{"_id":"themes/bamboo/layout/_partial/comment/waline/layout.ejs","hash":"a82f1c7819cadca142b7f3436957ddce5adf7fa0","modified":1705050892228},{"_id":"themes/bamboo/layout/_partial/comment/waline/script.ejs","hash":"ddfc35b05d22d2ad0f5b41444ed47793546f4b9d","modified":1705050892220},{"_id":"themes/bamboo/layout/_partial/comment/valine/layout.ejs","hash":"d8d7507d39f73fc3ce88a595194635da0e76d8d1","modified":1705050892198},{"_id":"themes/bamboo/layout/_partial/comment/valine/script.ejs","hash":"c39459b0fb46bb1eb49823cc62375f04d3b4a48e","modified":1705050892184},{"_id":"themes/bamboo/layout/_partial/comment/utterance/script.ejs","hash":"5d4aa3f60f0f648a5347b29eceef3c7244cb7b96","modified":1705050892139},{"_id":"themes/bamboo/source/css/_partial/preLoader/loader_2.styl","hash":"a747723c71f5f65ab4dd833c6c0a92ada41185aa","modified":1705053011523},{"_id":"themes/bamboo/source/css/_partial/preLoader/loader_1.styl","hash":"c22f3c767fcad7fea925f90499c8be78150f5e0f","modified":1705053011523},{"_id":"themes/bamboo/source/css/_partial/preLoader/loader_3.styl","hash":"4bc816888b7463faac4c12978ee7166bc7864b14","modified":1705053011523},{"_id":"themes/bamboo/source/css/_partial/preLoader/loader_4.styl","hash":"1fd703fcd31ed6fc5cf5c26517d1da653c440d8d","modified":1705053011523},{"_id":"themes/bamboo/source/css/_partial/preLoader/loader_5.styl","hash":"93898247ac7a6eb696c59708b6bfaaeda49f5d23","modified":1705053011523},{"_id":"themes/bamboo/source/css/_partial/preLoader/loader_6.styl","hash":"64cee8bc81acaaa9c5b9c1efa5de290ff33fd1fc","modified":1705053011523},{"_id":"themes/bamboo/source/css/_partial/preLoader/loader_8.styl","hash":"7e0cd7dbdf2a3e67e3e6932cd9047357397189ee","modified":1705053011523},{"_id":"themes/bamboo/source/css/_partial/preLoader/loader_7.styl","hash":"52938897509f3b7268eebf45f97be0e4cb8fa268","modified":1705053011523},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_10.styl","hash":"01bcf630c126f7fa273892245e6e6c59b654bf56","modified":1705053011525},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_11.styl","hash":"f7b6a4ab283029f649a0ae2732fa6e7079ecc435","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_13.styl","hash":"a5015270d9d79fa2f4ed246939d48bf4c9c7f7f6","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_14.styl","hash":"0ad1c7d9faaf46bc201d8c7c9b34e39ae7efec48","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_1.styl","hash":"f7fc1257c6b402b1ddec85d45ac8e665580dc14d","modified":1705053011525},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_12.styl","hash":"27792c767fa345b0dbe735a681c87cf790e19a8b","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_2.styl","hash":"dbf766a7086bfb35a7fabc635edeb67a32d1828f","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_15.styl","hash":"fd9b1e87dfaed5db7d9d7b9dc272a5669056c278","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_3.styl","hash":"083991d97f004f1f657c7a7649bd7b319dee652e","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_6.styl","hash":"7f6b7d34933921dbabee0937053cb288fcad9647","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_4.styl","hash":"ea0a0fbfb605d7d0592a06bb94e38f386830aa24","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_5.styl","hash":"6fea986bd4c37188ce7da86b0839749ac188bd02","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_7.styl","hash":"d75280def0358da644945744da22f6a5f2abd745","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_8.styl","hash":"4ce4323bc8a183533bbb1ab9ea2bf946350e5713","modified":1705053011526},{"_id":"themes/bamboo/source/css/_tag/coolBtn/coolBtn_9.styl","hash":"6cdaa72cab01a2ca483eb7092372bcfcb2dc9b25","modified":1705053011526},{"_id":"themes/bamboo/source/js/shareJs/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1705050886321},{"_id":"themes/bamboo/source/js/shareJs/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1705050886292},{"_id":"themes/bamboo/source/js/shareJs/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1705050886305},{"_id":"themes/bamboo/source/js/shareJs/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1705050886337},{"_id":"source/images/selectoceanstyle.png","hash":"19033e19edfb696dce90ffca5cdc4e8add80a188","modified":1705050873677},{"_id":"themes/bamboo/source/js/jquery3.5.1.js","hash":"29fa5ad995e9ec866ece1d3d0b698fc556580eee","modified":1705050885385},{"_id":"themes/bamboo/source/medias/10.jpg","hash":"b31de74f3649118f60b02c7a5993f6b318351d93","modified":1705050885153},{"_id":"themes/bamboo/source/medias/11.jpg","hash":"08ced9cb84cd05bad13859ab3231983cd2fdd8d4","modified":1705050885295},{"_id":"themes/bamboo/source/medias/12.jpg","hash":"fe65ad1a71794c32196bb774c1a140754278dc58","modified":1705050885171},{"_id":"themes/bamboo/source/medias/13.jpg","hash":"302a8d12b56952cd67c225aaf6557af5d2a95d8c","modified":1705050885135},{"_id":"themes/bamboo/source/medias/14.jpg","hash":"cd2fa3e7a2e958818fbb90d947260ea192795920","modified":1705050885031},{"_id":"themes/bamboo/source/medias/15.jpg","hash":"ac0c174181f8baf5f9acb8d04d4dd99313eba24a","modified":1705050885287},{"_id":"themes/bamboo/source/medias/3.jpg","hash":"0bd5e5dad1296c3d9551c1a869eaa7db251f52af","modified":1705050885066},{"_id":"themes/bamboo/source/medias/6.jpg","hash":"a9701435f9d204bfece97e192f4603d615ec8ee4","modified":1705050885180},{"_id":"themes/bamboo/source/medias/7.jpg","hash":"0db93ed9af4a13108ea4f2156b7b0fab9df3b894","modified":1705050885049},{"_id":"themes/bamboo/source/medias/8.jpg","hash":"af5399f3b054d17ac0c41cccf7af80447a39e402","modified":1705050885075},{"_id":"themes/bamboo/source/medias/9.jpg","hash":"ce467516ff86f6bc9231aa10a9755329e6e82a57","modified":1705050885234},{"_id":"themes/bamboo/source/medias/archive.jpg","hash":"146e7c6cd85a1c5940c74945b1951f517884c59b","modified":1705050885251},{"_id":"themes/bamboo/source/medias/categoryDetail.jpg","hash":"0077d896369408ef41f26203e7c792ccd8d95840","modified":1705050885206},{"_id":"themes/bamboo/source/medias/comment2.jpg","hash":"0d1febd222dd098e070e6ccd732b56f93e2d3963","modified":1705050885260},{"_id":"themes/bamboo/source/medias/coverBg1.jpg","hash":"edf13e1b75b50b48a3b344f195a101b407747ce9","modified":1705050885163},{"_id":"themes/bamboo/source/medias/friend.jpg","hash":"33f48add3cc93b05b22d4bd933c69dd1dc4164c9","modified":1705050885242},{"_id":"themes/bamboo/source/medias/notice_bg.png","hash":"f30268aaff7ee626434aea6fd69adc545c64f93b","modified":1705050884996},{"_id":"themes/bamboo/source/medias/pageBg1.jpg","hash":"453ca6e7738e6872bcb1f6767f0bbbead7e2a89d","modified":1705050885269},{"_id":"themes/bamboo/source/js/fancybox/jquery.fancybox.min.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1705050885973},{"_id":"source/gallery/misc/10003.jpg","hash":"86605a0b27d76cdfbcdbaf112ec924c9f48364e7","modified":1705050874060},{"_id":"themes/bamboo/source/medias/categories.jpg","hash":"6fd5bd2172bbe414d4853399d7f8538e41b9573f","modified":1705050885005},{"_id":"themes/bamboo/source/medias/comment-bg.gif","hash":"ca30cad50a1e3c723f12c24db62aa9d9fbac4da4","modified":1705050885197},{"_id":"themes/bamboo/source/medias/tagDetail.jpg","hash":"f6b3a4f16ac95ebdcfcc6ac107419c22ad12706f","modified":1705050885280},{"_id":"themes/bamboo/source/js/swiper/swiper.min.js","hash":"674fa0bd5973cc8124d6a711c725b119c025da0c","modified":1705050885512},{"_id":"themes/bamboo/source/js/valine/index.js","hash":"d520897b1bd3788aacb672b5cd9ff7ab0c81fc80","modified":1705050885876},{"_id":"themes/bamboo/source/js/waline/waline.min.js","hash":"3a17de5f24e0437c3c681b15f147ceef3980736f","modified":1705050886046},{"_id":"themes/bamboo/source/medias/about.jpg","hash":"24c7657d2a6830d5238daf2b917f71a9545e95ef","modified":1705050885145},{"_id":"themes/bamboo/source/medias/pageBg2.jpg","hash":"135c5f9a4e4d14f7e28c7ae084fe2216d21a47f3","modified":1705050885225},{"_id":"themes/bamboo/source/medias/tag.jpg","hash":"1d9ca36570c4c9545c06eac243c9513214a56d72","modified":1705050885216},{"_id":"source/images/histcover1_rabbit06.mp4","hash":"0cb19fcd0f956ce54564ead45b7c193736bf86da","modified":1705050873862},{"_id":"themes/bamboo/source/js/vue2.6.11.js","hash":"1159f02f3f7191a5cf4c109734d0268173fab96d","modified":1705050885458},{"_id":"themes/bamboo/source/js/twikoo/twikoo.all.min.js","hash":"d1ec95821873a81eddf4e5698698b39d54d2a8cc","modified":1705050886393},{"_id":"source/images/histcover1_rabbit03.mp4","hash":"a993ddb150a7df7ebe079600e61e43dad655de25","modified":1705050873955},{"_id":"source/images/coverres_20230207_02.mp4","hash":"40041be87a31443c08a60dc8b18845e1f47b7fba","modified":1705050873717},{"_id":"source/images/histcover1_rabbit05.mp4","hash":"a7ca48ad3ffcba0c4e4d4db74a7f91c82be6fda8","modified":1705050873306},{"_id":"source/images/histcover1_rabbit04.mp4","hash":"41897c27448247350feaacc5893ddca6d7cd046f","modified":1705050873787},{"_id":"source/images/coverres_20230207_01.mp4","hash":"a35793659823c3eba9493557cb33dde4f69a9db0","modified":1705050873882},{"_id":"source/images/histcover1_rabbit02.mp4","hash":"2666f988855896bc93e04631f94b7bf3a66c5445","modified":1705050873488},{"_id":"source/images/histcover1_rabbit01.mp4","hash":"2d7a347781474f551d3ca5db5b5801055745a647","modified":1705050873234},{"_id":"source/images/coverres_20230207_03.mp4","hash":"b5eb2ba9d7e49e69bd1add2541c5a2e9a5a6ec0e","modified":1705050873754},{"_id":"source/images/coverres_20230207_04.mp4","hash":"85a897627a183ebc4d5267a4907a07ae4fe045bf","modified":1705050873911},{"_id":"source/images/cover_20230207.mp4","hash":"ddd73baf2e4f6da0c3e6e6c850586e7138d73e9a","modified":1705050873850},{"_id":"themes/bamboo/source/medias/ocean.mp4","hash":"1e89cac2d652005d9dafd3ecb4dd460a8ff6d6af","modified":1705050885123},{"_id":"source/images/vlog_hangzhouxh.mp4","hash":"6d36f839c55ef3f442da8e4fd64d56cebe416678","modified":1705050873467},{"_id":"source/images/vlog_wuxi.mp4","hash":"ee6eec76fd3d5e0aa7d7a8913eb217f4f8b6fd03","modified":1705050873650},{"_id":"public/search.xml","hash":"888736c3a5a31fe393bc5215e9431bf6bc7cc675","modified":1706854899726},{"_id":"public/sitemap.txt","hash":"9029c27a76fd737b3dc1b562e6ec7e89bfb41e7c","modified":1706854899726},{"_id":"public/atom.xml","hash":"5b82e1a64336941551daa50be3414f0f6d317595","modified":1706854899726},{"_id":"public/sitemap.xml","hash":"9179f8e2930da3810a2bb7bbc8e914008ad7cf0a","modified":1707038044696},{"_id":"public/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/gallery/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/creation/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/vlog/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/gallery/misc/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/2024/01/09/unity-yu-ios-gong-cheng-qiao-jie-jie-shao/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/2023/04/20/android-yu-unity-jiao-hu-zhi-androidjavaproxy-hui-diao-de-shi-yong/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/2023/04/20/dui-chao-guo-2g-de-apk-chong-xin-jin-xing-4-zi-jie-dui-qi-bing-zuo-v1-v2-qian-ming/index.html","hash":"7bbcd835c38e95991832b14976043798e6b0d164","modified":1706854759767},{"_id":"public/2023/01/18/wang-qi-feng-mian-2023-01-18-xiong-mao-tu-zhen-gui-ying-xiang-zi-liao/index.html","hash":"9cb5754117b6e8165bad2540481726f6c1814b76","modified":1706854821755},{"_id":"public/2023/02/07/wang-qi-feng-mian-2023-02-07-sha-te-mao/index.html","hash":"181f6d75f46808101c27996752e2b1a961889234","modified":1706854821755},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-16-linux-yun-fu-wu-qi-zai-nginx.conf-pei-zhi-fang-dao-lian/index.html","hash":"a58845ac9ea463e6a6f6661bbeb1d234b90289b3","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-15-markdown-chang-yong-yu-fa/index.html","hash":"20ef876e13209ebc57b0a9f1c2d55d3f8f7d0086","modified":1706854821755},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-14-linux-yun-fu-wu-qi-an-zhuang-bao-ta-yun-wei-gong-ju/index.html","hash":"6f5dbfe6b88a3d5aeb89c644ce3b9a3ce3fe440b","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-13-xie-bo-ke-shi-yong-wang-zhan-da-he-ji/index.html","hash":"edc717cd2053147072bded4688feea4bf0193f9e","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-12-geng-huan-yun-fu-wu-qi-wan-cheng-shu-ju-qian-yi/index.html","hash":"086d94f06848fe693d200409f41be36707d76a72","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-11-shi-yong-linux-nginx-jian-zhan-mei-ci-yun-fu-wu-qi-chong-qi-hou-de-li-xing-jian-cha-cao-zuo/index.html","hash":"9220737f4a8a639d72430fbe6bae5573bf3e8775","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-8-jie-hong-linux/index.html","hash":"0c63d0fdc7201fdca1b324b82aebba339c5a813e","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-9-shi-yong-scp-ming-ling-cong-windows-xiang-linux-chuan-shu-wen-jian/index.html","hash":"c9fbd2061b57cf550efeacd8daa5713a2a2dd0de","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-10-jiang-tuo-guan-zai-github-de-hexo-bo-ke-qian-yi-dao-ge-ren-yun-fu-wu-qi/index.html","hash":"1049f47745bceccb10ad7981fcbf28bfa85d8a10","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-7-wei-bo-ke-wang-zhan-xuan-ze-he-gua-de-yun-fu-wu-qi/index.html","hash":"0b470806a215902b51344269245bed71e4b557fa","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-6-wei-github-bu-shu-de-hexo-bo-ke-geng-huan-xin-yu-ming/index.html","hash":"ea6e509301e4afe7dddb45314f587893a82a29ba","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-5-wei-hexo-bo-ke-an-zhuang-cha-jian/index.html","hash":"24db4edec93e08ffc7e3b5c582fb7f060070fa73","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-4-geng-huan-hexo-bo-ke-zhu-ti/index.html","hash":"56e125d93ed70706dfbe54507adae25af49dbc97","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-3-chu-shi-node.js-he-hexo/index.html","hash":"ecd074fa58704243dc3b481a44f6496fe109d45d","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-2-chuang-jian-git-cang-ku/index.html","hash":"f694724a4d4bf7a0de5e5f528eb824e813833fbf","modified":1706845953544},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-1-zhun-bei-jie-duan/index.html","hash":"fe7972b7a3f27585d71468900d24c6d8ad7633a5","modified":1706845953544},{"_id":"public/2023/01/09/ce-shi-wen-dang/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/archives/page/2/index.html","hash":"db3da14bfac0987015f8a9d4d15b02444c60b76e","modified":1706853263156},{"_id":"public/archives/2023/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/archives/2023/page/2/index.html","hash":"0f442bd1d26568aa94c9387765a59de54f1ea54a","modified":1706853263156},{"_id":"public/archives/2023/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/archives/2023/02/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/archives/2023/04/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/archives/2024/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/archives/2024/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/categories/Android/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/categories/博客搭建/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/categories/sdk/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/categories/Android/Unity/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/categories/往期封面/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/page/2/index.html","hash":"3b302d582a8ed1b8b1dcbbb3986d4f806bd32276","modified":1706853263156},{"_id":"public/tags/Unity/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/page/3/index.html","hash":"511de819fb67d70edadd5c9686baaa8e0c332aca","modified":1706853263156},{"_id":"public/tags/Android/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/tags/sdk/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/tags/博客/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/tags/生活/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/tags/打包/index.html","hash":"441d5a2ee72160fdad98fe7fe2d3d2ef51550291","modified":1705051832805},{"_id":"public/favicon.jpg","hash":"1653595f4de3ab1ad5558cbb3b8a67438e8950f4","modified":1705051832805},{"_id":"public/medias/1.jpg","hash":"8be56e3deb39033e1e3e1bfcdd2053931b0d7bb5","modified":1705051832805},{"_id":"public/medias/2.jpg","hash":"bc25752d286c7638b2c82eae897c3bbfd1281f51","modified":1705051832805},{"_id":"public/medias/4.jpg","hash":"b48ad74a85834f7cc354de6f0e29885d8406a0bf","modified":1705051832805},{"_id":"public/medias/5.jpg","hash":"b40c58fa6ceaa48ea139b0ef96ba1d7a9ab2b618","modified":1705051832805},{"_id":"public/medias/comment.jpg","hash":"d0e27cf8623d6bf743b5d099dfc2916bcab4e4d7","modified":1705051832805},{"_id":"public/medias/logo.jpg","hash":"499c7d9213ba617837f0f527036ad70f0c664227","modified":1705051832805},{"_id":"public/js/danmu/close.png","hash":"2c3ed4345f91dc1b74a57b6dcd1e1efa9e279dbb","modified":1705051832805},{"_id":"public/medias/cursor/Horizontal.cur","hash":"c3c5e8485a67b7ab16079a96b53aff7ff52de756","modified":1705051832805},{"_id":"public/js/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"6e1c8f7b23f06ca4c727c805fda053dc1d9193d0","modified":1705051832805},{"_id":"public/js/shareJs/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1705051832805},{"_id":"public/js/shareJs/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1705051832805},{"_id":"public/js/shareJs/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1705051832805},{"_id":"public/images/202401091514353.png","hash":"ed7b515bb14595ef88f0687b5a09b42823281a88","modified":1705051832805},{"_id":"public/images/202401091514334.png","hash":"2b68306b0244b9b75542b655648612991edf5836","modified":1705051832805},{"_id":"public/medias/12.jpg","hash":"fe65ad1a71794c32196bb774c1a140754278dc58","modified":1705051832805},{"_id":"public/medias/10.jpg","hash":"b31de74f3649118f60b02c7a5993f6b318351d93","modified":1705051832805},{"_id":"public/medias/11.jpg","hash":"08ced9cb84cd05bad13859ab3231983cd2fdd8d4","modified":1705051832805},{"_id":"public/medias/13.jpg","hash":"302a8d12b56952cd67c225aaf6557af5d2a95d8c","modified":1705051832805},{"_id":"public/medias/14.jpg","hash":"cd2fa3e7a2e958818fbb90d947260ea192795920","modified":1705051832805},{"_id":"public/medias/15.jpg","hash":"ac0c174181f8baf5f9acb8d04d4dd99313eba24a","modified":1705051832805},{"_id":"public/medias/6.jpg","hash":"a9701435f9d204bfece97e192f4603d615ec8ee4","modified":1705051832805},{"_id":"public/medias/3.jpg","hash":"0bd5e5dad1296c3d9551c1a869eaa7db251f52af","modified":1705051832805},{"_id":"public/medias/8.jpg","hash":"af5399f3b054d17ac0c41cccf7af80447a39e402","modified":1705051832805},{"_id":"public/medias/9.jpg","hash":"ce467516ff86f6bc9231aa10a9755329e6e82a57","modified":1705051832805},{"_id":"public/medias/archive.jpg","hash":"146e7c6cd85a1c5940c74945b1951f517884c59b","modified":1705051832805},{"_id":"public/medias/categoryDetail.jpg","hash":"0077d896369408ef41f26203e7c792ccd8d95840","modified":1705051832805},{"_id":"public/medias/friend.jpg","hash":"33f48add3cc93b05b22d4bd933c69dd1dc4164c9","modified":1705051832805},{"_id":"public/medias/coverBg1.jpg","hash":"edf13e1b75b50b48a3b344f195a101b407747ce9","modified":1705051832805},{"_id":"public/medias/comment2.jpg","hash":"0d1febd222dd098e070e6ccd732b56f93e2d3963","modified":1705051832805},{"_id":"public/medias/notice_bg.png","hash":"f30268aaff7ee626434aea6fd69adc545c64f93b","modified":1705051832805},{"_id":"public/medias/pageBg1.jpg","hash":"453ca6e7738e6872bcb1f6767f0bbbead7e2a89d","modified":1705051832805},{"_id":"public/js/shareJs/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1705051832805},{"_id":"public/images/202401091515023.png","hash":"13fdc017bebcac0dfabf45c6d5d2041c6e86a26e","modified":1705051832805},{"_id":"public/images/202401091514818.png","hash":"9e588e98e64ab5323dcbb7ab00807bd4e13ef2b8","modified":1705051832805},{"_id":"public/images/202401091514088.png","hash":"d6919311f133cc33cdffbc78d9865a0e0b4b533c","modified":1705051832805},{"_id":"public/images/202401091515486.png","hash":"d6aab1d329314ff40ea3ecf5f60254075e54f6fa","modified":1705051832805},{"_id":"public/images/invalid_referer_tip.png","hash":"9dae1905927e14bc7e7c7f028624bcc9da76e921","modified":1705051832805},{"_id":"public/images/mottoBg.webp","hash":"0cdf9db90d1e86804f35ec4dd2f97305c995fac5","modified":1705051832805},{"_id":"public/images/scptransferdemo.png","hash":"6e8fb79a6369a77a1fd3aa9de9454764baed3758","modified":1705051832805},{"_id":"public/images/scpwindowslinkok.png","hash":"f5e81662b869ca8f670b5f38a6ec5146d5013b3e","modified":1705051832805},{"_id":"public/images/scpwindowsfirstlink.png","hash":"8d5ca7a41a3a610ad7f532ddfb42409b881dae06","modified":1705051832805},{"_id":"public/images/setbamboostyle.png","hash":"5e5e28a9a0c29dc7f0f71d7789407bf24aad70e8","modified":1705051832805},{"_id":"public/images/themesIntro.png","hash":"32385106011f2aa5881ee5181f50e8f5659fcbd9","modified":1705051832805},{"_id":"public/css/animate.min.css","hash":"8411c1c0418521c96d07bcca0d9dbce7e832ccc9","modified":1705051832805},{"_id":"public/js/app.js","hash":"38e8d7ce69449ee7fc28db92f6be88ae26e708b2","modified":1705051832805},{"_id":"public/css/style.css","hash":"93e4d49012841ea6b5c32aa6fb94cf32c441d9cd","modified":1705051832805},{"_id":"public/js/activate-power-mode.js","hash":"3d02584da9dd820d1d9a454c5a93a2c37a8e4e42","modified":1705051832805},{"_id":"public/js/goTop.js","hash":"dfcbf8a70cfb4465d0afabf5153bd069771a6a1c","modified":1705051832805},{"_id":"public/js/local_search.js","hash":"475dc0727cb85c22f15f86701dd93c4bf449a438","modified":1705051832805},{"_id":"public/js/ribbon.min.js","hash":"3c8e4d717ca107f3723def1795c8ed62a5f1a8d0","modified":1705051832805},{"_id":"public/js/wrapImage.js","hash":"4b3cbceda7950c3fb2a17c4e169c4fdbc023ceab","modified":1705051832805},{"_id":"public/js/bubble/bubble.js","hash":"40cbc57f98407216ba6dc412e2b75e18c036240f","modified":1705051832805},{"_id":"public/js/aplayer/APlayer@1.10.1.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1705051832805},{"_id":"public/js/bubble/homeBubble.js","hash":"a8635136621c8c54c04462932192a94f314942cb","modified":1705051832805},{"_id":"public/js/cursor/explosion.min.js","hash":"ed2d0a5ad306a2745b7c8180b69e36b78d4b0698","modified":1705051832805},{"_id":"public/js/clipboard/clipboard.min.js","hash":"6371ec0a8e242395c7d4d008d2b98e472c9dcc52","modified":1705051832805},{"_id":"public/js/cursor/clicklove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1705051832805},{"_id":"public/js/cursor/fireworks.js","hash":"6e1e9206549a6a1a4f5a8672a2dc5044a8f691bd","modified":1705051832805},{"_id":"public/js/danmu/barrager.css","hash":"3691efec6dd3d554b4a3dd20ef04836459f151a8","modified":1705051832805},{"_id":"public/js/cursor/text.js","hash":"a015017310e601f1e544cbc4b08c35b8e547c939","modified":1705051832805},{"_id":"public/js/falling/snow.js","hash":"6f4ef88304f874ef8bb8ea54f79b5d97f5a8f2f6","modified":1705051832805},{"_id":"public/js/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1705051832805},{"_id":"public/js/danmu/jquery.barrager.js","hash":"305d6e93f3de102b5e1e9b1373821c849d8f54cb","modified":1705051832805},{"_id":"public/js/issues/index.js","hash":"e5f7b37f9dd8e966c7a63b8b6da27d53510eddeb","modified":1705051832805},{"_id":"public/js/loaded/index.css","hash":"6ffc29024687d49fda0d474dd4a94fc706b8d7fc","modified":1705051832805},{"_id":"public/js/jquery3.5.1.js","hash":"d2cc8d43ce1c854b1172e42b1209502ad563db83","modified":1705051832805},{"_id":"public/js/prism/prism-dark.min.css","hash":"a3f604a19e9a46f83a2fde49dfb45782748957ca","modified":1705051832805},{"_id":"public/js/falling/sakura.js","hash":"ab41921e8f6ea1bedfcc348924574dc0caa20858","modified":1705051832805},{"_id":"public/js/pjax@0.2.8/index.js","hash":"c9b1e349203e558dbe43665353e88c6eafc7dbcd","modified":1705051832805},{"_id":"public/js/prism/prism-okaidia.min.css","hash":"50be6cc15d883ff3fa5d0885fed47241695a986c","modified":1705051832805},{"_id":"public/js/prism/prism-coy.min.css","hash":"fe1246de39c25eaa7ad1b0c997ee530dbdd39ad8","modified":1705051832805},{"_id":"public/js/prism/prism-funky.min.css","hash":"0220f68ccda78c2b5d1109e58f3879674c93b587","modified":1705051832805},{"_id":"public/js/prism/prism-solarizedlight.min.css","hash":"927b757cd8030d12953b5c0fa6eed5de15dda8ad","modified":1705051832805},{"_id":"public/js/prism/prism-line-numbers.css","hash":"3b64b50b73729de943ec894c1d6f19115fa81624","modified":1705051832805},{"_id":"public/js/prism/prism-tomorrow.min.css","hash":"7b4247bc4d3b719afe5957779d0e5c8fb716c8ea","modified":1705051832805},{"_id":"public/js/shareJs/font.css","hash":"9d909397e4e94f696b7dd90a16481b50cf170362","modified":1705051832805},{"_id":"public/js/prism/prism.min.css","hash":"aa405e2bcb571595c822a80f5482454c1536fa52","modified":1705051832805},{"_id":"public/js/prism/prism-twilight.min.css","hash":"ff4a6e3c4f1cb9bb59ec061656eacb750d238c15","modified":1705051832805},{"_id":"public/js/shareJs/social-share.min.js","hash":"efdfa6b695ac6f0dd04cd8153d3e3a1a1edd90c2","modified":1705051832805},{"_id":"public/js/swiper/swiper.animate1.0.3.min.js","hash":"0e48f180ca2f18b787e4b7b6e55ee3b0c6067691","modified":1705051832805},{"_id":"public/js/shareJs/share.min.css","hash":"573c7dddb465efd5f5a9337bd50a1ed3f8e82cff","modified":1705051832805},{"_id":"public/js/swiper/swiper@5.4.1.min.css","hash":"de2263f82e7bf0778f31fd05c53000799f60701a","modified":1705051832805},{"_id":"public/js/swiper/vue-awesome-swiper.js","hash":"b7a1ab21dfc58272009bfb5cb7ab87b79f5df573","modified":1705051832805},{"_id":"public/js/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1705051832805},{"_id":"public/js/tocbot/tocbot.css","hash":"45e469dffa7b9ebc03f99fd09fb97274cdc5e9b4","modified":1705051832805},{"_id":"public/js/tocbot/tocbot.min.js","hash":"bc45d3586a21f7e364cd6efe58844932c00cf11c","modified":1705051832805},{"_id":"public/js/swiper/swiper.min.js","hash":"a2fe3c0df9196597c283b2f6ffecc1d4d8702245","modified":1705051832805},{"_id":"public/js/utils/index.js","hash":"54c66b0a396cc3743884cdb979e5c400218613ce","modified":1705051832805},{"_id":"public/js/vue-typed-js/index.css","hash":"36a1d2f61d11ab328e349d6a523dd9dea2ec7ee1","modified":1705051832805},{"_id":"public/js/vue-seamless-scroll/index.js","hash":"f2aaf3f9b1ab7362f7cc158e5360cb1d62a57172","modified":1705051832805},{"_id":"public/js/vue-typed-js/index.js","hash":"0d80f25135de943ccdfdebec23275bd82712fae1","modified":1705051832805},{"_id":"public/js/valine/index.js","hash":"8809117760e0a7ce8dcc3f14b6421a4d415284a6","modified":1705051832805},{"_id":"public/js/vue2.6.11.js","hash":"e793aa33ef33150eaba3bc02b07455a231f053ad","modified":1705051832805},{"_id":"public/js/waline/waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1705051832805},{"_id":"public/js/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1705051832805},{"_id":"public/images/202401091514124.png","hash":"3acab2178ff667f6d80d620759b5e1424c4dc837","modified":1705051832805},{"_id":"public/medias/7.jpg","hash":"0db93ed9af4a13108ea4f2156b7b0fab9df3b894","modified":1705051832805},{"_id":"public/medias/categories.jpg","hash":"6fd5bd2172bbe414d4853399d7f8538e41b9573f","modified":1705051832805},{"_id":"public/medias/comment-bg.gif","hash":"ca30cad50a1e3c723f12c24db62aa9d9fbac4da4","modified":1705051832805},{"_id":"public/medias/tagDetail.jpg","hash":"f6b3a4f16ac95ebdcfcc6ac107419c22ad12706f","modified":1705051832805},{"_id":"public/images/202401091515516.png","hash":"ce80f8ee269f0c7ac13094d85d6b7ebd05299011","modified":1705051832805},{"_id":"public/images/cover_rebbitbg.jpg","hash":"edf13e1b75b50b48a3b344f195a101b407747ce9","modified":1705051832805},{"_id":"public/images/giteeforbiddenjpgbed.png","hash":"25db503df7d1a8b3f54130ac79342db44c7be6ec","modified":1705051832805},{"_id":"public/images/coverres_20230207_05.jpg","hash":"f966a93801479aa5818817b310e1a532c236f846","modified":1705051832805},{"_id":"public/images/nginxconfopensf.png","hash":"17fe3e85952e237fb2b244ba76a131ba7d1b80d8","modified":1705051832805},{"_id":"public/images/vlogcover_vol1.jpg","hash":"66773fd76d81ec090e2ef0880baf28e9a91b96b8","modified":1705051832805},{"_id":"public/images/vlogcover_vol2.jpg","hash":"43f09f6cec0f6994c77986dd86e6a6c4905a48e6","modified":1705051832805},{"_id":"public/medias/about.jpg","hash":"24c7657d2a6830d5238daf2b917f71a9545e95ef","modified":1705051832805},{"_id":"public/medias/tag.jpg","hash":"1d9ca36570c4c9545c06eac243c9513214a56d72","modified":1705051832805},{"_id":"public/medias/pageBg2.jpg","hash":"135c5f9a4e4d14f7e28c7ae084fe2216d21a47f3","modified":1705051832805},{"_id":"public/images/girhubhoutaisettings.png","hash":"8236d55f1eaf363e32172c534bd0b39113642bbe","modified":1705051832805},{"_id":"public/images/nginxsetlocation.png","hash":"ac5e235896a224dc5447774822075dc326402d63","modified":1705051832805},{"_id":"public/images/githubsetselfurl.png","hash":"a5c783939994939a98e160ad4d1817bbf27d96ae","modified":1705051832805},{"_id":"public/images/githubsettingpage.png","hash":"87bfc66bf8985cc5c5917bb5a288f960fbcefc0f","modified":1705051832805},{"_id":"public/images/themeandconfigs.png","hash":"d9f5b2ecdf165737aadd62a3f331e1cbf21eec38","modified":1705051832805},{"_id":"public/images/wanwanggoumaiyuming.png","hash":"146d1917d846534e2e46fb64514bf141ba19bc21","modified":1705051832805},{"_id":"public/gallery/misc/10001.jpg","hash":"077e245948b97e7f988301eaa26d8056f2023120","modified":1705051832805},{"_id":"public/images/cover_20230207.jpg","hash":"9361e284d7dd0a384804d0e5f13318cae8604a9b","modified":1705051832805},{"_id":"public/images/otherwebsitelocaitionnginx.png","hash":"b41a12134f3207251bc69f976b350a501dafde57","modified":1705051832805},{"_id":"public/gallery/misc/10002.jpg","hash":"11da03af3f9b6e7b6b62a1b1e5c184e22034f270","modified":1705051832805},{"_id":"public/images/selectoceanstyle.png","hash":"19033e19edfb696dce90ffca5cdc4e8add80a188","modified":1705051832805},{"_id":"public/gallery/misc/10003.jpg","hash":"86605a0b27d76cdfbcdbaf112ec924c9f48364e7","modified":1705051832805},{"_id":"public/images/histcover1_rabbit06.mp4","hash":"0cb19fcd0f956ce54564ead45b7c193736bf86da","modified":1705051832805},{"_id":"public/images/histcover1_rabbit03.mp4","hash":"a993ddb150a7df7ebe079600e61e43dad655de25","modified":1705051832805},{"_id":"public/images/coverres_20230207_02.mp4","hash":"40041be87a31443c08a60dc8b18845e1f47b7fba","modified":1705051832805},{"_id":"public/images/histcover1_rabbit05.mp4","hash":"a7ca48ad3ffcba0c4e4d4db74a7f91c82be6fda8","modified":1705051832805},{"_id":"public/images/histcover1_rabbit04.mp4","hash":"41897c27448247350feaacc5893ddca6d7cd046f","modified":1705051832805},{"_id":"public/images/coverres_20230207_01.mp4","hash":"a35793659823c3eba9493557cb33dde4f69a9db0","modified":1705051832805},{"_id":"public/images/histcover1_rabbit02.mp4","hash":"2666f988855896bc93e04631f94b7bf3a66c5445","modified":1705051832805},{"_id":"public/images/histcover1_rabbit01.mp4","hash":"2d7a347781474f551d3ca5db5b5801055745a647","modified":1705051832805},{"_id":"public/images/coverres_20230207_03.mp4","hash":"b5eb2ba9d7e49e69bd1add2541c5a2e9a5a6ec0e","modified":1705051832805},{"_id":"public/images/coverres_20230207_04.mp4","hash":"85a897627a183ebc4d5267a4907a07ae4fe045bf","modified":1705051832805},{"_id":"public/medias/ocean.mp4","hash":"1e89cac2d652005d9dafd3ecb4dd460a8ff6d6af","modified":1705051832805},{"_id":"public/images/cover_20230207.mp4","hash":"ddd73baf2e4f6da0c3e6e6c850586e7138d73e9a","modified":1705051832805},{"_id":"public/images/vlog_wuxi.mp4","hash":"ee6eec76fd3d5e0aa7d7a8913eb217f4f8b6fd03","modified":1705051832805},{"_id":"public/images/vlog_hangzhouxh.mp4","hash":"6d36f839c55ef3f442da8e4fd64d56cebe416678","modified":1705051832805},{"_id":"themes/bamboo/scripts/tag/getPhoto.js","hash":"e78765e6156ff261e564d8a22c6307ea98990a0d","modified":1706779440126},{"_id":"themes/bamboo/scripts/tag/getPhotoOnline.js","hash":"16478a1a0d642b92cc4f86114d185bf79cbd0bf9","modified":1706779440126},{"_id":"themes/bamboo/scripts/tag/getSiteOnline.js","hash":"2dce91bf40a1e6f856e317eba777fc29399ec2fc","modified":1706779440126},{"_id":"themes/bamboo/source/favicon.ico","hash":"801ff7b3f358b77a813787a97ef59148eec93fd8","modified":1706779440150},{"_id":"themes/bamboo/scripts/tag/getTalkOnline.js","hash":"30f63677757c051835fec668ec928bcd47f6ba66","modified":1706779440126},{"_id":"themes/bamboo/source/medias/logo.png","hash":"d08165f945567a08bd74d36b1241a0b8f1618536","modified":1706779440150},{"_id":"themes/bamboo/layout/_partial/scripts/getSiteOnline.ejs","hash":"7735a6b702c32447e4667cbc7cab86cd28d5badf","modified":1706779440114},{"_id":"themes/bamboo/layout/_partial/scripts/getPhotoOnline.ejs","hash":"bd17b91d841055cef0fe7e4a70736f57a55e030b","modified":1706779440113},{"_id":"themes/bamboo/source/css/_tag/talkByJson.styl","hash":"2affd0fe4a640ab92c07198cd4df13bef1ea1575","modified":1706779440149},{"_id":"themes/bamboo/layout/_partial/scripts/getTalkOnline.ejs","hash":"5e5806d276dcfad3702d460d43c4ee826d9ce9ea","modified":1706779440114},{"_id":"themes/bamboo/source/js/getPhotoOnline/index.js","hash":"3b6354c11105aba544b08ded11295d83219d59ec","modified":1706779440150},{"_id":"themes/bamboo/source/js/getSiteOnline/index.js","hash":"733f75aff00e0a62013089cb3e869878d6fcc535","modified":1706779440150},{"_id":"themes/bamboo/source/js/getTalkOnline/index.js","hash":"ba714c7ffe4abde553d0c54ce5d528453f279c06","modified":1706779440150},{"_id":"public/favicon.ico","hash":"801ff7b3f358b77a813787a97ef59148eec93fd8","modified":1706779557505},{"_id":"public/medias/logo.png","hash":"d08165f945567a08bd74d36b1241a0b8f1618536","modified":1706779557505},{"_id":"public/js/getPhotoOnline/index.js","hash":"f513605485600561123ffae1a70a0eb35cd5c675","modified":1706779557505},{"_id":"public/js/getTalkOnline/index.js","hash":"58d9601cfd851c83c2eadd4803698171cd2d8b08","modified":1706779557505},{"_id":"public/js/getSiteOnline/index.js","hash":"8b93e96331bbdcbee0deb33c9aeca6b2dceacb4b","modified":1706779557505},{"_id":"source/_posts/云服务器搭建博客网站全套流程.md","hash":"5acc8a1a027659ed619f548d8c42726540006672","modified":1706780648479},{"_id":"source/_posts/博客搭建教程17 - 云服务器搭建博客网站全套流程.md","hash":"58d3934ad3d6a90b032229c8917ed419a7fbfd81","modified":1706853956070},{"_id":"public/2023/01/09/bo-ke-da-jian-jiao-cheng-17-yun-fu-wu-qi-da-jian-bo-ke-wang-zhan-quan-tao-liu-cheng/index.html","hash":"be20866cca83808482925632929c6fd80a0fe884","modified":1706781087856},{"_id":"public/2024/02/01/bo-ke-da-jian-jiao-cheng-17-yun-fu-wu-qi-da-jian-bo-ke-wang-zhan-quan-tao-liu-cheng/index.html","hash":"bbffc9156ed42510d771df2b1d794699734b8f26","modified":1706854821755},{"_id":"public/archives/2024/02/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"source/images/202402011754207.png","hash":"7e4ed522be2588d2727191638e907291144575de","modified":1706781278777},{"_id":"public/images/202402011754207.png","hash":"7e4ed522be2588d2727191638e907291144575de","modified":1706781318472},{"_id":"source/_posts/backup/博客搭建教程1 - 准备阶段.md","hash":"6454f5a89ef3bca727aacb3a962016805869f515","modified":1705051576057},{"_id":"source/_posts/backup/博客搭建教程10 - 将托管在Github的Hexo博客迁移到个人云服务器.md","hash":"f1c2a0ded20f7ed96ff8291dd9e9cfde776fc233","modified":1705050872927},{"_id":"source/_posts/backup/博客搭建教程11 - 使用linux+nginx建站每次云服务器重启后的例行检查操作.md","hash":"454d7e903c9982d32378ad6ffa7577570f1279b9","modified":1705050873006},{"_id":"source/_posts/backup/博客搭建教程12 - 更换云服务器完成数据迁移.md","hash":"4a219caaa63ff1936043370e0912b499857d1b40","modified":1705050873107},{"_id":"source/_posts/backup/博客搭建教程13 - 写博客实用网站大合集.md","hash":"407b58cf2bd472efb92eb1a699cee8cf069ee84a","modified":1705050872950},{"_id":"source/_posts/backup/博客搭建教程14 - Linux云服务器安装宝塔运维工具.md","hash":"0e5be65122823e2ab37f4e3b427f8c326518ac33","modified":1705050873045},{"_id":"source/_posts/backup/博客搭建教程16 - linux云服务器在nginx.conf配置防盗链.md","hash":"f7caf08bbea21f337a00e0fc45664f8e4f159832","modified":1705050872842},{"_id":"source/_posts/backup/博客搭建教程2 - 创建Git仓库.md","hash":"35b602b595e9abf1c038f17769ffe16a62c6cd1e","modified":1705050872972},{"_id":"source/_posts/backup/博客搭建教程3 - 初识Node.js和Hexo.md","hash":"0feb573bbd3bc5064ed99814617fa2d724dd0054","modified":1705050872829},{"_id":"source/_posts/backup/博客搭建教程4 - 更换Hexo博客主题.md","hash":"76b60054972b12b4e6f3d929ab7f9ff5397c5545","modified":1705050873089},{"_id":"source/_posts/backup/博客搭建教程5 - 为Hexo博客安装插件.md","hash":"6a45c11157e624300f246059f447c4249b6245cc","modified":1705050872994},{"_id":"source/_posts/backup/博客搭建教程6 - 为Github部署的Hexo博客更换新域名.md","hash":"45fc0208ac4140c29f5e131d90312cf022c0f4cd","modified":1705050872892},{"_id":"source/_posts/backup/博客搭建教程7 - 为博客网站选择合适的云服务器.md","hash":"490a0bc8c606879126fc52c2f0ec8c4bfe5aa22d","modified":1705050872860},{"_id":"source/_posts/backup/博客搭建教程8-接触Linux.md","hash":"9b820a5518e9c7d6ffe6ff75693d5e9422be2634","modified":1705050872962},{"_id":"source/_posts/backup/博客搭建教程9 - 使用scp命令从Windows向linux传输文件.md","hash":"7c9b2cda6d8c2977acd840cc70af7a239a133152","modified":1705050872914},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-16-linux-yun-fu-wu-qi-zai-nginx.conf-pei-zhi-fang-dao-lian/index.html","hash":"948aa6cade6b3e289acbb37f8834f49013bf99bb","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-14-linux-yun-fu-wu-qi-an-zhuang-bao-ta-yun-wei-gong-ju/index.html","hash":"09a9729fbf63359128082ab1056b7b0f7100961a","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-13-xie-bo-ke-shi-yong-wang-zhan-da-he-ji/index.html","hash":"b73bcb336c2d7b0e5a03505963ae191d0554028d","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-12-geng-huan-yun-fu-wu-qi-wan-cheng-shu-ju-qian-yi/index.html","hash":"c94c22f3d4141a5c8e525086109fffd51218a25c","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-11-shi-yong-linux-nginx-jian-zhan-mei-ci-yun-fu-wu-qi-chong-qi-hou-de-li-xing-jian-cha-cao-zuo/index.html","hash":"b7617ad6f039d49455893a67f74c095551aba7c4","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-10-jiang-tuo-guan-zai-github-de-hexo-bo-ke-qian-yi-dao-ge-ren-yun-fu-wu-qi/index.html","hash":"eab153846d7367b03cf3822802462487e336bd1c","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-9-shi-yong-scp-ming-ling-cong-windows-xiang-linux-chuan-shu-wen-jian/index.html","hash":"3a83c02bb57486954446e8cb29093fc4d50169c2","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-8-jie-hong-linux/index.html","hash":"eb1143af809eedbf9426a851a08517fb4875c491","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-7-wei-bo-ke-wang-zhan-xuan-ze-he-gua-de-yun-fu-wu-qi/index.html","hash":"1417377931863c3a67368bcde693131c6d04e25c","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-6-wei-github-bu-shu-de-hexo-bo-ke-geng-huan-xin-yu-ming/index.html","hash":"73532b748ab0babda70054930f0892d994885314","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-5-wei-hexo-bo-ke-an-zhuang-cha-jian/index.html","hash":"bf2bd35010bfdae38987404a71362eb70ec9e953","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-4-geng-huan-hexo-bo-ke-zhu-ti/index.html","hash":"20513a29cdc356d9fdc991345abb4a52241aff49","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-3-chu-shi-node.js-he-hexo/index.html","hash":"15ae0cb1476eda41319648ed956e95e45b7423ca","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-2-chuang-jian-git-cang-ku/index.html","hash":"66aac2562e2d78c4af0984b0c3f535026a76690f","modified":1706853263156},{"_id":"public/2023/01/09/backup/bo-ke-da-jian-jiao-cheng-1-zhun-bei-jie-duan/index.html","hash":"61e88c0f3ffbed45a22250da4f521bfeaf675db3","modified":1706853263156},{"_id":"source/posts_backup/博客搭建教程1 - 准备阶段.md","hash":"6454f5a89ef3bca727aacb3a962016805869f515","modified":1705051576057},{"_id":"source/posts_backup/博客搭建教程10 - 将托管在Github的Hexo博客迁移到个人云服务器.md","hash":"f1c2a0ded20f7ed96ff8291dd9e9cfde776fc233","modified":1705050872927},{"_id":"source/posts_backup/博客搭建教程11 - 使用linux+nginx建站每次云服务器重启后的例行检查操作.md","hash":"454d7e903c9982d32378ad6ffa7577570f1279b9","modified":1705050873006},{"_id":"source/posts_backup/博客搭建教程14 - Linux云服务器安装宝塔运维工具.md","hash":"0e5be65122823e2ab37f4e3b427f8c326518ac33","modified":1705050873045},{"_id":"source/posts_backup/博客搭建教程13 - 写博客实用网站大合集.md","hash":"407b58cf2bd472efb92eb1a699cee8cf069ee84a","modified":1705050872950},{"_id":"source/posts_backup/博客搭建教程12 - 更换云服务器完成数据迁移.md","hash":"4a219caaa63ff1936043370e0912b499857d1b40","modified":1705050873107},{"_id":"source/posts_backup/博客搭建教程16 - linux云服务器在nginx.conf配置防盗链.md","hash":"f7caf08bbea21f337a00e0fc45664f8e4f159832","modified":1705050872842},{"_id":"source/posts_backup/博客搭建教程2 - 创建Git仓库.md","hash":"35b602b595e9abf1c038f17769ffe16a62c6cd1e","modified":1705050872972},{"_id":"source/posts_backup/博客搭建教程3 - 初识Node.js和Hexo.md","hash":"0feb573bbd3bc5064ed99814617fa2d724dd0054","modified":1705050872829},{"_id":"source/posts_backup/博客搭建教程4 - 更换Hexo博客主题.md","hash":"76b60054972b12b4e6f3d929ab7f9ff5397c5545","modified":1705050873089},{"_id":"source/posts_backup/博客搭建教程5 - 为Hexo博客安装插件.md","hash":"6a45c11157e624300f246059f447c4249b6245cc","modified":1705050872994},{"_id":"source/posts_backup/博客搭建教程6 - 为Github部署的Hexo博客更换新域名.md","hash":"45fc0208ac4140c29f5e131d90312cf022c0f4cd","modified":1705050872892},{"_id":"source/posts_backup/博客搭建教程7 - 为博客网站选择合适的云服务器.md","hash":"490a0bc8c606879126fc52c2f0ec8c4bfe5aa22d","modified":1705050872860},{"_id":"source/posts_backup/博客搭建教程9 - 使用scp命令从Windows向linux传输文件.md","hash":"7c9b2cda6d8c2977acd840cc70af7a239a133152","modified":1705050872914},{"_id":"source/posts_backup/博客搭建教程8-接触Linux.md","hash":"9b820a5518e9c7d6ffe6ff75693d5e9422be2634","modified":1705050872962},{"_id":"public/posts_backup/博客搭建教程1 - 准备阶段.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程10 - 将托管在Github的Hexo博客迁移到个人云服务器.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程11 - 使用linux+nginx建站每次云服务器重启后的例行检查操作.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程14 - Linux云服务器安装宝塔运维工具.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程12 - 更换云服务器完成数据迁移.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程13 - 写博客实用网站大合集.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程16 - linux云服务器在nginx.conf配置防盗链.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程2 - 创建Git仓库.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程4 - 更换Hexo博客主题.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程3 - 初识Node.js和Hexo.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程6 - 为Github部署的Hexo博客更换新域名.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程5 - 为Hexo博客安装插件.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程9 - 使用scp命令从Windows向linux传输文件.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程7 - 为博客网站选择合适的云服务器.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/posts_backup/博客搭建教程8-接触Linux.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"source/images/bg/5910391f5ba57.jpg","hash":"1b803ffc2397c6f6e22296e3f7134316f2d4013f","modified":1706853867589},{"_id":"public/images/bg/5910391f5ba57.jpg","hash":"1b803ffc2397c6f6e22296e3f7134316f2d4013f","modified":1706853965742},{"_id":"source/images/202402021405279.jpg","hash":"1b803ffc2397c6f6e22296e3f7134316f2d4013f","modified":1706853971359},{"_id":"source/images/bg/591039263be09.jpg","hash":"9ff0d9f0407fe4f116c5418d1b022cad9159dd25","modified":1706854096279},{"_id":"source/images/bg/591039294a193.jpg","hash":"66841a310a03bb2ddaacd5294c9acc18308a6978","modified":1706854111384},{"_id":"source/images/bg/5910392d25805.jpg","hash":"f5e361c6eeabbefb2d88f242223605d1a29e4fe7","modified":1706854134036},{"_id":"public/images/202402021405279.jpg","hash":"1b803ffc2397c6f6e22296e3f7134316f2d4013f","modified":1706854759767},{"_id":"public/images/bg/591039263be09.jpg","hash":"9ff0d9f0407fe4f116c5418d1b022cad9159dd25","modified":1706854759767},{"_id":"public/images/bg/591039294a193.jpg","hash":"66841a310a03bb2ddaacd5294c9acc18308a6978","modified":1706854759767},{"_id":"public/images/bg/5910392d25805.jpg","hash":"f5e361c6eeabbefb2d88f242223605d1a29e4fe7","modified":1706854759767},{"_id":"public/2024/01/12/dui-chao-guo-2g-de-apk-chong-xin-jin-xing-4-zi-jie-dui-qi-bing-zuo-v1-v2-qian-ming/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"source/_posts/博客搭建/云服务器搭建博客网站全套流程.md","hash":"58d3934ad3d6a90b032229c8917ed419a7fbfd81","modified":1706853956070},{"_id":"source/_posts/博客搭建/Markdown常用语法.md","hash":"b6460cc191c99527f7a9f3d5d750345570c6db05","modified":1706854641872},{"_id":"source/_posts/封面/往期封面2023-01-18 熊猫兔珍贵影像资料.md","hash":"bdbb2663a8c97703361b42dbaf603c384983f327","modified":1706853196385},{"_id":"source/_posts/封面/往期封面2023_02_07 沙特猫.md","hash":"3eded851012e1bbacc85b89eb8303440361e7a8a","modified":1705050872873},{"_id":"public/2024/02/01/bo-ke-da-jian/yun-fu-wu-qi-da-jian-bo-ke-wang-zhan-quan-tao-liu-cheng/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/2023/02/07/feng-mian/wang-qi-feng-mian-2023-02-07-sha-te-mao/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/2023/01/18/feng-mian/wang-qi-feng-mian-2023-01-18-xiong-mao-tu-zhen-gui-ying-xiang-zi-liao/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"public/2023/01/09/bo-ke-da-jian/markdown-chang-yong-yu-fa/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1707038044696},{"_id":"source/custom/index.css","hash":"8ad634379b399b959668b0cd65831d133e86a8f4","modified":1707037783999},{"_id":"public/custom/index.css","hash":"e5191a4d2cde6ab325d8f658c3356cf35a17abb7","modified":1707038044696},{"_id":"source/images/202402041655968.png","hash":"7e4ed522be2588d2727191638e907291144575de","modified":1707038060722},{"_id":"public/images/202402041655968.png","hash":"7e4ed522be2588d2727191638e907291144575de","modified":1707038123118}],"Category":[{"name":"旅拍vlog","_id":"clrafu6hy000408vqfw9agw6t"},{"name":"Android","_id":"clrafu6i2000i08vqg65ud7po"},{"name":"博客搭建","_id":"clrafu6i4000q08vqfnsudvco"},{"name":"sdk","_id":"clrafu6i5000u08vq1hhjdbjp"},{"name":"Unity","parent":"clrafu6i2000i08vqg65ud7po","_id":"clrafu6i7001d08vq4qcp0yrb"},{"name":"往期封面","_id":"clrafu6ib002v08vq9m3tg8c2"}],"Data":[],"Page":[{"title":"分类","onlyTitle":true,"excerpt":" ","copyright":false,"type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nonlyTitle: true\nexcerpt: ' '\ncopyright: false\ntype: categories\nlayout: categories\n---","date":"2024-01-12T09:14:34.076Z","updated":"2024-01-12T09:14:34.076Z","path":"categories/index.html","comments":1,"_id":"clrafu6hu000008vqfmbibk2k","content":"","site":{"data":{}},"more":""},{"title":"创造","onlyTitle":true,"excerpt":" ","copyright":false,"img":"https://p4.itc.cn/images01/20220315/c6cf399e9cdd4733ab74555d058bd920.jpeg","imgTop":true,"toc":false,"_content":"维护中","source":"creation/index.md","raw":"---\ntitle: 创造\nonlyTitle: true\nexcerpt: ' '\ncopyright: false\nimg: https://p4.itc.cn/images01/20220315/c6cf399e9cdd4733ab74555d058bd920.jpeg\nimgTop: true\ntoc: false\n---\n维护中","date":"2024-01-12T09:14:34.102Z","updated":"2024-01-12T09:14:34.102Z","path":"creation/index.html","comments":1,"layout":"page","_id":"clrafu6hx000208vqdy6g7xeb","content":"<p>维护中</p>\n","site":{"data":{}},"more":"<p>维护中</p>\n"},{"title":"标签","onlyTitle":true,"excerpt":" ","copyright":false,"type":"tags","layout":"tags","_content":"等待上传","source":"tags/index.md","raw":"---\ntitle: 标签\nonlyTitle: true\nexcerpt: ' '\ncopyright: false\ntype: tags\nlayout: tags\n---\n等待上传","date":"2024-01-12T09:14:34.086Z","updated":"2024-01-12T09:14:34.086Z","path":"tags/index.html","comments":1,"_id":"clrafu6hy000608vq1boh4nvm","content":"<p>等待上传</p>\n","site":{"data":{}},"more":"<p>等待上传</p>\n"},{"title":"画廊","onlyTitle":true,"excerpt":" 发","copyright":false,"bgImg":"https://b0.bdstatic.com/a318f0a09f31f257c82758e2508db0dd.jpg","bgImgTransition":"fade","bgImgDelay":15000,"imgTop":false,"toc":false,"_content":">部分图片没有放置在图床，也不享有CDN加速服务，因此加载速度会比较慢  \n<div class=\"gallery-group-main\">\n    {% galleryGroup '旅拍' '旅途中记录的花鸟鱼虫和人文景观' '/gallery/misc' /gallery/misc/10001.jpg %}\n</div>","source":"gallery/index.md","raw":"---\ntitle: 画廊\nonlyTitle: true\nexcerpt: ' 发'\ncopyright: false\nbgImg: https://b0.bdstatic.com/a318f0a09f31f257c82758e2508db0dd.jpg\nbgImgTransition: fade\nbgImgDelay: 15000\nimgTop: false\ntoc: false\n---\n>部分图片没有放置在图床，也不享有CDN加速服务，因此加载速度会比较慢  \n<div class=\"gallery-group-main\">\n    {% galleryGroup '旅拍' '旅途中记录的花鸟鱼虫和人文景观' '/gallery/misc' /gallery/misc/10001.jpg %}\n</div>","date":"2024-01-12T09:14:34.013Z","updated":"2024-01-12T09:14:34.013Z","path":"gallery/index.html","comments":1,"layout":"page","_id":"clrafu6hz000808vqf20q5u1j","content":"<blockquote>\n<p>部分图片没有放置在图床，也不享有CDN加速服务，因此加载速度会比较慢  </p>\n</blockquote>\n<div class=\"gallery-group-main\">\n    \n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='/gallery/misc/10001.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">旅拍</div>\n  <p>旅途中记录的花鸟鱼虫和人文景观</p>\n  <a href='/gallery/misc'></a>\n  </figcaption>\n  </figure>\n  \n</div>","site":{"data":{}},"more":"<blockquote>\n<p>部分图片没有放置在图床，也不享有CDN加速服务，因此加载速度会比较慢  </p>\n</blockquote>\n<div class=\"gallery-group-main\">\n    \n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='/gallery/misc/10001.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">旅拍</div>\n  <p>旅途中记录的花鸟鱼虫和人文景观</p>\n  <a href='/gallery/misc'></a>\n  </figcaption>\n  </figure>\n  \n</div>"},{"title":"影像","onlyTitle":true,"copyright":false,"img":"https://cdn.pixabay.com/photo/2017/04/18/07/20/old-2238062_1280.jpg","_content":"\n>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  \n\n>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。\n\n{% title h3, 旅拍系列 Vol.1 无锡 %}\n{% image /images/vlogcover_vol1.jpg, width=480px %}\n{% link Vol.1 无锡:: http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.1-wu-xi/:: /images/vlogcover_vol1.jpg %}\n  \n{% title h3, 旅拍系列 Vol.2 杭州西湖 %}\n{% image /images/vlogcover_vol2.jpg, width=480px %} \n{% link Vol.2 杭州西湖:: http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.2-hang-zhou-xi-hu/:: /images/vlogcover_vol2.jpg %}","source":"vlog/index.md","raw":"---\ntitle: 影像\nonlyTitle: true\ncopyright: false\nimg: https://cdn.pixabay.com/photo/2017/04/18/07/20/old-2238062_1280.jpg\n---\n\n>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  \n\n>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。\n\n{% title h3, 旅拍系列 Vol.1 无锡 %}\n{% image /images/vlogcover_vol1.jpg, width=480px %}\n{% link Vol.1 无锡:: http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.1-wu-xi/:: /images/vlogcover_vol1.jpg %}\n  \n{% title h3, 旅拍系列 Vol.2 杭州西湖 %}\n{% image /images/vlogcover_vol2.jpg, width=480px %} \n{% link Vol.2 杭州西湖:: http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.2-hang-zhou-xi-hu/:: /images/vlogcover_vol2.jpg %}","date":"2024-01-12T09:14:34.134Z","updated":"2024-01-12T09:14:34.134Z","path":"vlog/index.html","comments":1,"layout":"page","_id":"clrafu6i0000a08vq4vyyh2xe","content":"<blockquote>\n<p>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  </p>\n</blockquote>\n<blockquote>\n<p>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。</p>\n</blockquote>\n<h3 class=\"bamboo-h \" id=\"旅拍系列 Vol.1 无锡1i4thib0p7c\">旅拍系列 Vol.1 无锡</h3><br/>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/vlogcover_vol1.jpg\" class=\"lazyload placeholder\" data-srcset=\"/images/vlogcover_vol1.jpg\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:480px;\"/></div></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Vol.1 无锡\" href=\"http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.1-wu-xi/\"><span class=\"link-card-backdrop\" style=\"background-image: url(/images/vlogcover_vol1.jpg)\"></span><div class=\"left\"><img src=\"/images/vlogcover_vol1.jpg\" class=\"lazyload placeholder\" data-srcset=\"/images/vlogcover_vol1.jpg\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"/></div><div class=\"right\"><p class=\"text\">Vol.1 无锡</p><p class=\"url\">http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.1-wu-xi/</p></div></a></div>\n<h3 class=\"bamboo-h \" id=\"旅拍系列 Vol.2 杭州西湖1dijx2be3kf\">旅拍系列 Vol.2 杭州西湖</h3><br/>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/vlogcover_vol2.jpg\" class=\"lazyload placeholder\" data-srcset=\"/images/vlogcover_vol2.jpg\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:480px;\"/></div></div> \n<div class=\"tagLink\"><a class=\"link-card\" title=\"Vol.2 杭州西湖\" href=\"http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.2-hang-zhou-xi-hu/\"><span class=\"link-card-backdrop\" style=\"background-image: url(/images/vlogcover_vol2.jpg)\"></span><div class=\"left\"><img src=\"/images/vlogcover_vol2.jpg\" class=\"lazyload placeholder\" data-srcset=\"/images/vlogcover_vol2.jpg\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"/></div><div class=\"right\"><p class=\"text\">Vol.2 杭州西湖</p><p class=\"url\">http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.2-hang-zhou-xi-hu/</p></div></a></div>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  </p>\n</blockquote>\n<blockquote>\n<p>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。</p>\n</blockquote>\n<h3 class=\"bamboo-h \" id=\"旅拍系列 Vol.1 无锡1i4thib0p7c\">旅拍系列 Vol.1 无锡</h3><br/>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/vlogcover_vol1.jpg\" style=\"width:480px;\"/></div></div>\n<div class=\"tagLink\"><a class=\"link-card\" title=\"Vol.1 无锡\" href=\"http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.1-wu-xi/\"><span class=\"link-card-backdrop\" style=\"background-image: url(/images/vlogcover_vol1.jpg)\"></span><div class=\"left\"><img src=\"/images/vlogcover_vol1.jpg\"/></div><div class=\"right\"><p class=\"text\">Vol.1 无锡</p><p class=\"url\">http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.1-wu-xi/</p></div></a></div>\n<h3 class=\"bamboo-h \" id=\"旅拍系列 Vol.2 杭州西湖1dijx2be3kf\">旅拍系列 Vol.2 杭州西湖</h3><br/>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/vlogcover_vol2.jpg\" style=\"width:480px;\"/></div></div> \n<div class=\"tagLink\"><a class=\"link-card\" title=\"Vol.2 杭州西湖\" href=\"http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.2-hang-zhou-xi-hu/\"><span class=\"link-card-backdrop\" style=\"background-image: url(/images/vlogcover_vol2.jpg)\"></span><div class=\"left\"><img src=\"/images/vlogcover_vol2.jpg\"/></div><div class=\"right\"><p class=\"text\">Vol.2 杭州西湖</p><p class=\"url\">http://cypunberk.cn/2023/02/08/vlog-lu-pai-xi-lie-vol.2-hang-zhou-xi-hu/</p></div></a></div>"},{"title":"关于","onlyTitle":true,"excerpt":" ","copyright":false,"imgTop":false,"_content":"这是关于界面  \n等待内容上传","source":"about/index.md","raw":"---\ntitle: 关于\nonlyTitle: true\nexcerpt: ' '\ncopyright: false\nimgTop: false\n---\n这是关于界面  \n等待内容上传","date":"2024-01-12T09:14:34.117Z","updated":"2024-01-12T09:14:34.117Z","path":"about/index.html","comments":1,"layout":"page","_id":"clrafu6i1000e08vqe34dapgk","content":"<p>这是关于界面<br>等待内容上传</p>\n","site":{"data":{}},"more":"<p>这是关于界面<br>等待内容上传</p>\n"},{"title":"旅拍","onlyTitle":true,"copyright":false,"img":"/gallery/misc/10001.jpg","_content":"{% gallery %}\n![图片描述](/gallery/misc/10001.jpg)\n![图片描述](/gallery/misc/10002.jpg)\n{% endgallery %}\n{% gallery %}\n![图片描述](/gallery/misc/10003.jpg)\n{% endgallery %}","source":"gallery/misc/index.md","raw":"---\ntitle: 旅拍\nonlyTitle: true\ncopyright: false\nimg: /gallery/misc/10001.jpg\n---\n{% gallery %}\n![图片描述](/gallery/misc/10001.jpg)\n![图片描述](/gallery/misc/10002.jpg)\n{% endgallery %}\n{% gallery %}\n![图片描述](/gallery/misc/10003.jpg)\n{% endgallery %}","date":"2024-01-12T09:14:34.030Z","updated":"2024-01-12T09:14:34.030Z","path":"gallery/misc/index.html","comments":1,"layout":"page","_id":"clrafu6i2000g08vqetmq9jav","content":"<div class=\"gallery \">\n              <p><img src=\"/gallery/misc/10001.jpg\" class=\"lazyload placeholder\" data-srcset=\"/gallery/misc/10001.jpg\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" alt=\"图片描述\"><br><img src=\"/gallery/misc/10002.jpg\" class=\"lazyload placeholder\" data-srcset=\"/gallery/misc/10002.jpg\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" alt=\"图片描述\"></p>\n            </div>\n<div class=\"gallery \">\n              <p><img src=\"/gallery/misc/10003.jpg\" class=\"lazyload placeholder\" data-srcset=\"/gallery/misc/10003.jpg\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" alt=\"图片描述\"></p>\n            </div>","site":{"data":{}},"excerpt":"","more":"<div class=\"gallery \">\n              <p><img src=\"/gallery/misc/10001.jpg\" alt=\"图片描述\"><br><img src=\"/gallery/misc/10002.jpg\" alt=\"图片描述\"></p>\n            </div>\n<div class=\"gallery \">\n              <p><img src=\"/gallery/misc/10003.jpg\" alt=\"图片描述\"></p>\n            </div>"},{"title":"博客搭建教程1 - 准备阶段","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-08T17:00:00.000Z","img":"https://picx.zhimg.com/v2-f03ff2911a65b4be8134688969712666_1440w.jpg?source=172ae18b","excerpt":"从明天开始搭建一个属于自己的博客。","_content":"在一切开始之前，我们先来回答几个关键问题。\n\nQ：搭建个人博客需要花钱吗？\nA：不需要。如果我们依赖Github，则可以不花一分钱搭建好自己的博客网站。但是如果你想拥有自己的域名，购买图床，或者使用云服务器，那么需要支付一定的费用，在刚刚起步的阶段，开销不会很大。\n\nQ：搭建个人博客需要会写代码吗？\nA：不需要。但本教程建议有代码基础的读者观看，因为教程有的介绍并不详尽，比如教程内不会专门介绍Linux操作系统，命令行的概念。由于在搭建博客过程中会涉及到在操作系统终端执行命令，如果有代码基础，则遇到卡点的几率会低一些，并且发现自己操作的结果和教程不一致时有能力自查问题。本教程尽可能提供了完整的命令语句和配置文件写法，在搭建时只需要复制粘贴即可。\n你不需要掌握网页设计语言，绚丽的网站并不需要由我们自己编码实现，本教程使用的Hexo博客自身提供了非常多的主题，就像手机更换壁纸一样，你只需要像文本一样更改几个配置文件即可应用全新主题。如果你有代码基础，则可以尝试进行更深入的页面定制。\n\nQ：搭建个人博客需要多少时间？\nA：这个难以预估，如果你有代码基础，具备一定的debug能力，那么初次的搭建过程只需要几天的时间，当踩过一些坑，经历了一些试错后，后续再次重新搭建，一天之内即可完成。如果你是非技术人员，或许需要结合一些其它网络上的教程来搭建，本教程更多作为建站的备忘录，对于一些细节可能会直接略过，而这些通常成为读者理解的卡点。\n\n如果你决定开始搭建个人博客，那么接下来按照教程顺序，一步一步开始吧。\n\n本教程搭建博客的技术涉及到：\n1.搭建Github仓库托管博客，包含一些Git操作  \n2.安装node.js和npm，Hexo，Hexo-admin  \n3.租用Linux云服务器实现博客远程部署\n\n建议读者可以先对以上技术有一些了解。  \n\n","source":"posts_backup/博客搭建教程1 - 准备阶段.md","raw":"title: 博客搭建教程1 - 准备阶段\nauthor: epya15\ntags:\n\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 01:00:00\nimg: https://picx.zhimg.com/v2-f03ff2911a65b4be8134688969712666_1440w.jpg?source=172ae18b\nexcerpt: '从明天开始搭建一个属于自己的博客。'\n---\n在一切开始之前，我们先来回答几个关键问题。\n\nQ：搭建个人博客需要花钱吗？\nA：不需要。如果我们依赖Github，则可以不花一分钱搭建好自己的博客网站。但是如果你想拥有自己的域名，购买图床，或者使用云服务器，那么需要支付一定的费用，在刚刚起步的阶段，开销不会很大。\n\nQ：搭建个人博客需要会写代码吗？\nA：不需要。但本教程建议有代码基础的读者观看，因为教程有的介绍并不详尽，比如教程内不会专门介绍Linux操作系统，命令行的概念。由于在搭建博客过程中会涉及到在操作系统终端执行命令，如果有代码基础，则遇到卡点的几率会低一些，并且发现自己操作的结果和教程不一致时有能力自查问题。本教程尽可能提供了完整的命令语句和配置文件写法，在搭建时只需要复制粘贴即可。\n你不需要掌握网页设计语言，绚丽的网站并不需要由我们自己编码实现，本教程使用的Hexo博客自身提供了非常多的主题，就像手机更换壁纸一样，你只需要像文本一样更改几个配置文件即可应用全新主题。如果你有代码基础，则可以尝试进行更深入的页面定制。\n\nQ：搭建个人博客需要多少时间？\nA：这个难以预估，如果你有代码基础，具备一定的debug能力，那么初次的搭建过程只需要几天的时间，当踩过一些坑，经历了一些试错后，后续再次重新搭建，一天之内即可完成。如果你是非技术人员，或许需要结合一些其它网络上的教程来搭建，本教程更多作为建站的备忘录，对于一些细节可能会直接略过，而这些通常成为读者理解的卡点。\n\n如果你决定开始搭建个人博客，那么接下来按照教程顺序，一步一步开始吧。\n\n本教程搭建博客的技术涉及到：\n1.搭建Github仓库托管博客，包含一些Git操作  \n2.安装node.js和npm，Hexo，Hexo-admin  \n3.租用Linux云服务器实现博客远程部署\n\n建议读者可以先对以上技术有一些了解。  \n\n","updated":"2024-01-12T09:26:16.057Z","path":"posts_backup/博客搭建教程1 - 准备阶段.html","comments":1,"layout":"page","_id":"cls48emy80000kwvqd3ma0mgu","content":"<p>在一切开始之前，我们先来回答几个关键问题。</p>\n<p>Q：搭建个人博客需要花钱吗？<br>A：不需要。如果我们依赖Github，则可以不花一分钱搭建好自己的博客网站。但是如果你想拥有自己的域名，购买图床，或者使用云服务器，那么需要支付一定的费用，在刚刚起步的阶段，开销不会很大。</p>\n<p>Q：搭建个人博客需要会写代码吗？<br>A：不需要。但本教程建议有代码基础的读者观看，因为教程有的介绍并不详尽，比如教程内不会专门介绍Linux操作系统，命令行的概念。由于在搭建博客过程中会涉及到在操作系统终端执行命令，如果有代码基础，则遇到卡点的几率会低一些，并且发现自己操作的结果和教程不一致时有能力自查问题。本教程尽可能提供了完整的命令语句和配置文件写法，在搭建时只需要复制粘贴即可。<br>你不需要掌握网页设计语言，绚丽的网站并不需要由我们自己编码实现，本教程使用的Hexo博客自身提供了非常多的主题，就像手机更换壁纸一样，你只需要像文本一样更改几个配置文件即可应用全新主题。如果你有代码基础，则可以尝试进行更深入的页面定制。</p>\n<p>Q：搭建个人博客需要多少时间？<br>A：这个难以预估，如果你有代码基础，具备一定的debug能力，那么初次的搭建过程只需要几天的时间，当踩过一些坑，经历了一些试错后，后续再次重新搭建，一天之内即可完成。如果你是非技术人员，或许需要结合一些其它网络上的教程来搭建，本教程更多作为建站的备忘录，对于一些细节可能会直接略过，而这些通常成为读者理解的卡点。</p>\n<p>如果你决定开始搭建个人博客，那么接下来按照教程顺序，一步一步开始吧。</p>\n<p>本教程搭建博客的技术涉及到：<br>1.搭建Github仓库托管博客，包含一些Git操作<br>2.安装node.js和npm，Hexo，Hexo-admin<br>3.租用Linux云服务器实现博客远程部署</p>\n<p>建议读者可以先对以上技术有一些了解。  </p>\n","site":{"data":{}},"more":"<p>在一切开始之前，我们先来回答几个关键问题。</p>\n<p>Q：搭建个人博客需要花钱吗？<br>A：不需要。如果我们依赖Github，则可以不花一分钱搭建好自己的博客网站。但是如果你想拥有自己的域名，购买图床，或者使用云服务器，那么需要支付一定的费用，在刚刚起步的阶段，开销不会很大。</p>\n<p>Q：搭建个人博客需要会写代码吗？<br>A：不需要。但本教程建议有代码基础的读者观看，因为教程有的介绍并不详尽，比如教程内不会专门介绍Linux操作系统，命令行的概念。由于在搭建博客过程中会涉及到在操作系统终端执行命令，如果有代码基础，则遇到卡点的几率会低一些，并且发现自己操作的结果和教程不一致时有能力自查问题。本教程尽可能提供了完整的命令语句和配置文件写法，在搭建时只需要复制粘贴即可。<br>你不需要掌握网页设计语言，绚丽的网站并不需要由我们自己编码实现，本教程使用的Hexo博客自身提供了非常多的主题，就像手机更换壁纸一样，你只需要像文本一样更改几个配置文件即可应用全新主题。如果你有代码基础，则可以尝试进行更深入的页面定制。</p>\n<p>Q：搭建个人博客需要多少时间？<br>A：这个难以预估，如果你有代码基础，具备一定的debug能力，那么初次的搭建过程只需要几天的时间，当踩过一些坑，经历了一些试错后，后续再次重新搭建，一天之内即可完成。如果你是非技术人员，或许需要结合一些其它网络上的教程来搭建，本教程更多作为建站的备忘录，对于一些细节可能会直接略过，而这些通常成为读者理解的卡点。</p>\n<p>如果你决定开始搭建个人博客，那么接下来按照教程顺序，一步一步开始吧。</p>\n<p>本教程搭建博客的技术涉及到：<br>1.搭建Github仓库托管博客，包含一些Git操作<br>2.安装node.js和npm，Hexo，Hexo-admin<br>3.租用Linux云服务器实现博客远程部署</p>\n<p>建议读者可以先对以上技术有一些了解。  </p>\n"},{"title":"博客搭建教程10 - 将托管在Github的Hexo博客迁移到个人云服务器","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-09T02:00:00.000Z","img":"https://www.easeus.com.cn/attachment/chuanshu/qinayi-15.png","excerpt":"防止Github有朝一日不再提供免费服务或彻底被墙","_content":"Q：我觉得目前将网站托管到github上已经很好了，迁移至私服有足够的必要性吗？\nA：迁移至私服不是必须的，如果你觉得github已经足够，那么可以跳过该教程，事实上很多人的博客都是直接托管给github的。但境内网络访问github很不稳定，加之由于github仓库是公开的，所以还是有很多缺点，使用github仓库时要时刻注意对自己网站数据的保护，否则会有泄露风险。\n\n如果你希望在服务器建立git服务器，每次发布博客时将变更同步至服务器的git仓库，那么可以先给服务器安装git  \n切换至root用户  \nsu root  \n安装git  \nyum –y install git  \n键入git指令验证是否安装成功  \n创建git用户，先不创建密码  \nadduser git  \n检查是否创建成功 cd /home && ls -al  \n如果显示有git则说明用户创建成功   \n接下来找一个喜欢的目录，创建一个新的git库，需要你自己起一个喜欢的名字，我起名为cpblog.git，注意.git后缀不要变  \ngit init --bare cpblog.git  \n此时终端提示你创建了一个空的git库，这就说明操作对了。  \n接下来将Hexo博客转移到服务器，以后使用hexo d发布博客就在服务器上进行了，我们需要做的是当你执行hexo d时将网站推送至自己的git仓库\n新建文件夹作为博客根目录   \nmkdir cpblog_webroot  \nchmod 777 cpblog_webroot  \n使用Git-Hooks同步网站根目录，这里使用的是Git中的“post-receive”，当有Git收发的时候会调用该脚本，自动将最新内容同步到网站根目录中\n用下面的指令新建勾子文件\nvim cpblog.git/hooks/post-receive\n将以下语句写入文件\n#!/bin/sh\ngit --work-tree=/usr/local/cpblog_webroot --git-dir=/root/cpblog.git checkout -f\n(注意博客路径和当前用户)\n保存并赋予执行权限\nchmod +x cpblog.git/hooks/post-receive\nsudo chown -R git:git cpblog.git\nsudo chown -R git:git cpblog_webroot\n\n修改/usr/local/nginx/conf/nginx.conf\n将里面的地址改为cpblog_webroot的位置\nserver {\n    listen    80 default_server;\n    listen    [::] default_server;\n    server_name    blog.59devops.com;\n    root    /usr/local/cpblog_webroot\n}\n\n配置账户免密码登录  \n创建 ssh 的默认目录  \n进入 git 账户的主目录  \ncd /home/git  \n创建 .ssh 的配置，如果此文件夹已经存在请忽略此步  \nmkdir .ssh  \n创建校验公钥的配置文件  \n进入 .ssh 目录并创建 authorized_keys 文件，此文件存放客户端远程访问的 ssh 的公钥  \ncd .ssh  \ntouch authorized_keys  \ncd ..  \n设置权限  \nchmod 700 .ssh/  \nchmod 600 .ssh/authorized_keys  \n\n配置Hexo的”_config.yml”  \n打开位于Hexo博客根目录下的“_config.yml”文件，找到“deploy”并修改  \n\ndeploy:\n   type: git\n   repository: root@服务器的公网IP:/usr/local/cpblog.git  #此行改为你的私服仓库地址\n   branch: main      # 分支,注意看一下仓库的主干分支是master还是main\n\n从此以后，每次执行hexo d时，就会将网站推送到服务器的git仓库里。  \n本地执行下列命令进行验证  \nhexo clean  \nhexo g  \nhexo d  \n\n如果你在执行hexo d时被提示输入密码，那么可以阅读接下来的内容实现hexo d免密码  下面我们添加秘钥实现免密推送   \n\n找到服务器的id_rsa.pub文件，id_rsa.pub 文件中的内容追加到当前目录下的 authorized_keys 中  \ncat id_rsa.pub >> authorized_keys  \n\n最后别忘了做一件事，就是去域名供应商后台配置解析域名  \n将你的服务器公网IP填到域名解析列表中就可以了，可搜索其它文章了解具体操作。","source":"posts_backup/博客搭建教程10 - 将托管在Github的Hexo博客迁移到个人云服务器.md","raw":"title: 博客搭建教程10 - 将托管在Github的Hexo博客迁移到个人云服务器\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 10:00:00\nimg: https://www.easeus.com.cn/attachment/chuanshu/qinayi-15.png\nexcerpt: '防止Github有朝一日不再提供免费服务或彻底被墙'\n---\nQ：我觉得目前将网站托管到github上已经很好了，迁移至私服有足够的必要性吗？\nA：迁移至私服不是必须的，如果你觉得github已经足够，那么可以跳过该教程，事实上很多人的博客都是直接托管给github的。但境内网络访问github很不稳定，加之由于github仓库是公开的，所以还是有很多缺点，使用github仓库时要时刻注意对自己网站数据的保护，否则会有泄露风险。\n\n如果你希望在服务器建立git服务器，每次发布博客时将变更同步至服务器的git仓库，那么可以先给服务器安装git  \n切换至root用户  \nsu root  \n安装git  \nyum –y install git  \n键入git指令验证是否安装成功  \n创建git用户，先不创建密码  \nadduser git  \n检查是否创建成功 cd /home && ls -al  \n如果显示有git则说明用户创建成功   \n接下来找一个喜欢的目录，创建一个新的git库，需要你自己起一个喜欢的名字，我起名为cpblog.git，注意.git后缀不要变  \ngit init --bare cpblog.git  \n此时终端提示你创建了一个空的git库，这就说明操作对了。  \n接下来将Hexo博客转移到服务器，以后使用hexo d发布博客就在服务器上进行了，我们需要做的是当你执行hexo d时将网站推送至自己的git仓库\n新建文件夹作为博客根目录   \nmkdir cpblog_webroot  \nchmod 777 cpblog_webroot  \n使用Git-Hooks同步网站根目录，这里使用的是Git中的“post-receive”，当有Git收发的时候会调用该脚本，自动将最新内容同步到网站根目录中\n用下面的指令新建勾子文件\nvim cpblog.git/hooks/post-receive\n将以下语句写入文件\n#!/bin/sh\ngit --work-tree=/usr/local/cpblog_webroot --git-dir=/root/cpblog.git checkout -f\n(注意博客路径和当前用户)\n保存并赋予执行权限\nchmod +x cpblog.git/hooks/post-receive\nsudo chown -R git:git cpblog.git\nsudo chown -R git:git cpblog_webroot\n\n修改/usr/local/nginx/conf/nginx.conf\n将里面的地址改为cpblog_webroot的位置\nserver {\n    listen    80 default_server;\n    listen    [::] default_server;\n    server_name    blog.59devops.com;\n    root    /usr/local/cpblog_webroot\n}\n\n配置账户免密码登录  \n创建 ssh 的默认目录  \n进入 git 账户的主目录  \ncd /home/git  \n创建 .ssh 的配置，如果此文件夹已经存在请忽略此步  \nmkdir .ssh  \n创建校验公钥的配置文件  \n进入 .ssh 目录并创建 authorized_keys 文件，此文件存放客户端远程访问的 ssh 的公钥  \ncd .ssh  \ntouch authorized_keys  \ncd ..  \n设置权限  \nchmod 700 .ssh/  \nchmod 600 .ssh/authorized_keys  \n\n配置Hexo的”_config.yml”  \n打开位于Hexo博客根目录下的“_config.yml”文件，找到“deploy”并修改  \n\ndeploy:\n   type: git\n   repository: root@服务器的公网IP:/usr/local/cpblog.git  #此行改为你的私服仓库地址\n   branch: main      # 分支,注意看一下仓库的主干分支是master还是main\n\n从此以后，每次执行hexo d时，就会将网站推送到服务器的git仓库里。  \n本地执行下列命令进行验证  \nhexo clean  \nhexo g  \nhexo d  \n\n如果你在执行hexo d时被提示输入密码，那么可以阅读接下来的内容实现hexo d免密码  下面我们添加秘钥实现免密推送   \n\n找到服务器的id_rsa.pub文件，id_rsa.pub 文件中的内容追加到当前目录下的 authorized_keys 中  \ncat id_rsa.pub >> authorized_keys  \n\n最后别忘了做一件事，就是去域名供应商后台配置解析域名  \n将你的服务器公网IP填到域名解析列表中就可以了，可搜索其它文章了解具体操作。","updated":"2024-01-12T09:14:32.927Z","path":"posts_backup/博客搭建教程10 - 将托管在Github的Hexo博客迁移到个人云服务器.html","comments":1,"layout":"page","_id":"cls48emy90001kwvq84oj3uz0","content":"<p>Q：我觉得目前将网站托管到github上已经很好了，迁移至私服有足够的必要性吗？<br>A：迁移至私服不是必须的，如果你觉得github已经足够，那么可以跳过该教程，事实上很多人的博客都是直接托管给github的。但境内网络访问github很不稳定，加之由于github仓库是公开的，所以还是有很多缺点，使用github仓库时要时刻注意对自己网站数据的保护，否则会有泄露风险。</p>\n<p>如果你希望在服务器建立git服务器，每次发布博客时将变更同步至服务器的git仓库，那么可以先给服务器安装git<br>切换至root用户<br>su root<br>安装git<br>yum –y install git<br>键入git指令验证是否安装成功<br>创建git用户，先不创建密码<br>adduser git<br>检查是否创建成功 cd &#x2F;home &amp;&amp; ls -al<br>如果显示有git则说明用户创建成功<br>接下来找一个喜欢的目录，创建一个新的git库，需要你自己起一个喜欢的名字，我起名为cpblog.git，注意.git后缀不要变<br>git init –bare cpblog.git<br>此时终端提示你创建了一个空的git库，这就说明操作对了。<br>接下来将Hexo博客转移到服务器，以后使用hexo d发布博客就在服务器上进行了，我们需要做的是当你执行hexo d时将网站推送至自己的git仓库<br>新建文件夹作为博客根目录<br>mkdir cpblog_webroot<br>chmod 777 cpblog_webroot<br>使用Git-Hooks同步网站根目录，这里使用的是Git中的“post-receive”，当有Git收发的时候会调用该脚本，自动将最新内容同步到网站根目录中<br>用下面的指令新建勾子文件<br>vim cpblog.git&#x2F;hooks&#x2F;post-receive<br>将以下语句写入文件<br>#!&#x2F;bin&#x2F;sh<br>git –work-tree&#x3D;&#x2F;usr&#x2F;local&#x2F;cpblog_webroot –git-dir&#x3D;&#x2F;root&#x2F;cpblog.git checkout -f<br>(注意博客路径和当前用户)<br>保存并赋予执行权限<br>chmod +x cpblog.git&#x2F;hooks&#x2F;post-receive<br>sudo chown -R git:git cpblog.git<br>sudo chown -R git:git cpblog_webroot</p>\n<p>修改&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf<br>将里面的地址改为cpblog_webroot的位置<br>server {<br>    listen    80 default_server;<br>    listen    [::] default_server;<br>    server_name    blog.59devops.com;<br>    root    &#x2F;usr&#x2F;local&#x2F;cpblog_webroot<br>}</p>\n<p>配置账户免密码登录<br>创建 ssh 的默认目录<br>进入 git 账户的主目录<br>cd &#x2F;home&#x2F;git<br>创建 .ssh 的配置，如果此文件夹已经存在请忽略此步<br>mkdir .ssh<br>创建校验公钥的配置文件<br>进入 .ssh 目录并创建 authorized_keys 文件，此文件存放客户端远程访问的 ssh 的公钥<br>cd .ssh<br>touch authorized_keys<br>cd ..<br>设置权限<br>chmod 700 .ssh&#x2F;<br>chmod 600 .ssh&#x2F;authorized_keys  </p>\n<p>配置Hexo的”_config.yml”<br>打开位于Hexo博客根目录下的“_config.yml”文件，找到“deploy”并修改  </p>\n<p>deploy:<br>   type: git<br>   repository: root@服务器的公网IP:&#x2F;usr&#x2F;local&#x2F;cpblog.git  #此行改为你的私服仓库地址<br>   branch: main      # 分支,注意看一下仓库的主干分支是master还是main</p>\n<p>从此以后，每次执行hexo d时，就会将网站推送到服务器的git仓库里。<br>本地执行下列命令进行验证<br>hexo clean<br>hexo g<br>hexo d  </p>\n<p>如果你在执行hexo d时被提示输入密码，那么可以阅读接下来的内容实现hexo d免密码  下面我们添加秘钥实现免密推送   </p>\n<p>找到服务器的id_rsa.pub文件，id_rsa.pub 文件中的内容追加到当前目录下的 authorized_keys 中<br>cat id_rsa.pub &gt;&gt; authorized_keys  </p>\n<p>最后别忘了做一件事，就是去域名供应商后台配置解析域名<br>将你的服务器公网IP填到域名解析列表中就可以了，可搜索其它文章了解具体操作。</p>\n","site":{"data":{}},"more":"<p>Q：我觉得目前将网站托管到github上已经很好了，迁移至私服有足够的必要性吗？<br>A：迁移至私服不是必须的，如果你觉得github已经足够，那么可以跳过该教程，事实上很多人的博客都是直接托管给github的。但境内网络访问github很不稳定，加之由于github仓库是公开的，所以还是有很多缺点，使用github仓库时要时刻注意对自己网站数据的保护，否则会有泄露风险。</p>\n<p>如果你希望在服务器建立git服务器，每次发布博客时将变更同步至服务器的git仓库，那么可以先给服务器安装git<br>切换至root用户<br>su root<br>安装git<br>yum –y install git<br>键入git指令验证是否安装成功<br>创建git用户，先不创建密码<br>adduser git<br>检查是否创建成功 cd &#x2F;home &amp;&amp; ls -al<br>如果显示有git则说明用户创建成功<br>接下来找一个喜欢的目录，创建一个新的git库，需要你自己起一个喜欢的名字，我起名为cpblog.git，注意.git后缀不要变<br>git init –bare cpblog.git<br>此时终端提示你创建了一个空的git库，这就说明操作对了。<br>接下来将Hexo博客转移到服务器，以后使用hexo d发布博客就在服务器上进行了，我们需要做的是当你执行hexo d时将网站推送至自己的git仓库<br>新建文件夹作为博客根目录<br>mkdir cpblog_webroot<br>chmod 777 cpblog_webroot<br>使用Git-Hooks同步网站根目录，这里使用的是Git中的“post-receive”，当有Git收发的时候会调用该脚本，自动将最新内容同步到网站根目录中<br>用下面的指令新建勾子文件<br>vim cpblog.git&#x2F;hooks&#x2F;post-receive<br>将以下语句写入文件<br>#!&#x2F;bin&#x2F;sh<br>git –work-tree&#x3D;&#x2F;usr&#x2F;local&#x2F;cpblog_webroot –git-dir&#x3D;&#x2F;root&#x2F;cpblog.git checkout -f<br>(注意博客路径和当前用户)<br>保存并赋予执行权限<br>chmod +x cpblog.git&#x2F;hooks&#x2F;post-receive<br>sudo chown -R git:git cpblog.git<br>sudo chown -R git:git cpblog_webroot</p>\n<p>修改&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf<br>将里面的地址改为cpblog_webroot的位置<br>server {<br>    listen    80 default_server;<br>    listen    [::] default_server;<br>    server_name    blog.59devops.com;<br>    root    &#x2F;usr&#x2F;local&#x2F;cpblog_webroot<br>}</p>\n<p>配置账户免密码登录<br>创建 ssh 的默认目录<br>进入 git 账户的主目录<br>cd &#x2F;home&#x2F;git<br>创建 .ssh 的配置，如果此文件夹已经存在请忽略此步<br>mkdir .ssh<br>创建校验公钥的配置文件<br>进入 .ssh 目录并创建 authorized_keys 文件，此文件存放客户端远程访问的 ssh 的公钥<br>cd .ssh<br>touch authorized_keys<br>cd ..<br>设置权限<br>chmod 700 .ssh&#x2F;<br>chmod 600 .ssh&#x2F;authorized_keys  </p>\n<p>配置Hexo的”_config.yml”<br>打开位于Hexo博客根目录下的“_config.yml”文件，找到“deploy”并修改  </p>\n<p>deploy:<br>   type: git<br>   repository: root@服务器的公网IP:&#x2F;usr&#x2F;local&#x2F;cpblog.git  #此行改为你的私服仓库地址<br>   branch: main      # 分支,注意看一下仓库的主干分支是master还是main</p>\n<p>从此以后，每次执行hexo d时，就会将网站推送到服务器的git仓库里。<br>本地执行下列命令进行验证<br>hexo clean<br>hexo g<br>hexo d  </p>\n<p>如果你在执行hexo d时被提示输入密码，那么可以阅读接下来的内容实现hexo d免密码  下面我们添加秘钥实现免密推送   </p>\n<p>找到服务器的id_rsa.pub文件，id_rsa.pub 文件中的内容追加到当前目录下的 authorized_keys 中<br>cat id_rsa.pub &gt;&gt; authorized_keys  </p>\n<p>最后别忘了做一件事，就是去域名供应商后台配置解析域名<br>将你的服务器公网IP填到域名解析列表中就可以了，可搜索其它文章了解具体操作。</p>\n"},{"title":"博客搭建教程11 - 使用linux+nginx建站每次云服务器重启后的例行检查操作","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-09T03:00:00.000Z","img":"https://img2.baidu.com/it/u=2273045471,518867457&fm=253&fmt=auto&app=138&f=PNG?w=822&h=500","excerpt":"将一些需要检查的点统一记录下来作为备忘录。","_content":"重启服务器后的例行操作  \n\n1.检查防火墙  \n检查防火墙状态：systemctl status firewalld  \n若出现绿色的active(running)，说明防火墙已经启动，否则\nsystemctl start firewalld开启防火墙，没有任何提示即开启成功  \n如果没有反应，或者等待1分钟后出现timeout，需要先kill掉现在的防火墙进程再重新开启  \nkill防火墙进程：pkill -f firewalld  \n然后再重新systemctl start firewalld开启防火墙，没有任何提示即开启成功  \n\n2.检查nginx端口（比如80端口）  \nfirewall-cmd --query-port=80/tcp  \n返回yes即没问题，否则打开80端口  \nfirewall-cmd --add-port=80/tcp --permanent  \n开启后需再次重启防火墙，才能生效  \nfirewall-cmd --reload  \n\n3.检查nginx服务  \n开启nginx：nginx  \n（nginx关闭命令：nginx -s stop）  \n（nginx重启命令：nginx -s reload）  \n在其它机器上访问服务器IP:端口号，如果出现nginx页面，就表示开启成功（出现40x 页面也无所谓）  \n如果开启nginx提示端口被占用，需要杀死占用这个端口的进程  \n可以使用一个快捷的方法，直接杀死指定端口的所有进程，比如80端口  \nkill -9 $(lsof -i:80 -t)  \n或者可以仔细查看是哪个进程占用了80端口  \n查看80端口使用情况  \nnetstat -lnp|grep 80  \n比如正在被nginx占用，记住显示的进程号，比如1053  \n停掉nginx  \nsystemctl stop nginx  \n强制杀掉1053进程  \nkill -9 1053  \n再查询  \nnetstat -lnp|grep 80  \n没结果说明已经不占用了  \n接着重新开启nginx服务  \n\n","source":"posts_backup/博客搭建教程11 - 使用linux+nginx建站每次云服务器重启后的例行检查操作.md","raw":"title: 博客搭建教程11 - 使用linux+nginx建站每次云服务器重启后的例行检查操作\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 11:00:00\nimg: https://img2.baidu.com/it/u=2273045471,518867457&fm=253&fmt=auto&app=138&f=PNG?w=822&h=500\nexcerpt: '将一些需要检查的点统一记录下来作为备忘录。'\n---\n重启服务器后的例行操作  \n\n1.检查防火墙  \n检查防火墙状态：systemctl status firewalld  \n若出现绿色的active(running)，说明防火墙已经启动，否则\nsystemctl start firewalld开启防火墙，没有任何提示即开启成功  \n如果没有反应，或者等待1分钟后出现timeout，需要先kill掉现在的防火墙进程再重新开启  \nkill防火墙进程：pkill -f firewalld  \n然后再重新systemctl start firewalld开启防火墙，没有任何提示即开启成功  \n\n2.检查nginx端口（比如80端口）  \nfirewall-cmd --query-port=80/tcp  \n返回yes即没问题，否则打开80端口  \nfirewall-cmd --add-port=80/tcp --permanent  \n开启后需再次重启防火墙，才能生效  \nfirewall-cmd --reload  \n\n3.检查nginx服务  \n开启nginx：nginx  \n（nginx关闭命令：nginx -s stop）  \n（nginx重启命令：nginx -s reload）  \n在其它机器上访问服务器IP:端口号，如果出现nginx页面，就表示开启成功（出现40x 页面也无所谓）  \n如果开启nginx提示端口被占用，需要杀死占用这个端口的进程  \n可以使用一个快捷的方法，直接杀死指定端口的所有进程，比如80端口  \nkill -9 $(lsof -i:80 -t)  \n或者可以仔细查看是哪个进程占用了80端口  \n查看80端口使用情况  \nnetstat -lnp|grep 80  \n比如正在被nginx占用，记住显示的进程号，比如1053  \n停掉nginx  \nsystemctl stop nginx  \n强制杀掉1053进程  \nkill -9 1053  \n再查询  \nnetstat -lnp|grep 80  \n没结果说明已经不占用了  \n接着重新开启nginx服务  \n\n","updated":"2024-01-12T09:14:33.006Z","path":"posts_backup/博客搭建教程11 - 使用linux+nginx建站每次云服务器重启后的例行检查操作.html","comments":1,"layout":"page","_id":"cls48emy90002kwvqcrae8rg9","content":"<p>重启服务器后的例行操作  </p>\n<p>1.检查防火墙<br>检查防火墙状态：systemctl status firewalld<br>若出现绿色的active(running)，说明防火墙已经启动，否则<br>systemctl start firewalld开启防火墙，没有任何提示即开启成功<br>如果没有反应，或者等待1分钟后出现timeout，需要先kill掉现在的防火墙进程再重新开启<br>kill防火墙进程：pkill -f firewalld<br>然后再重新systemctl start firewalld开启防火墙，没有任何提示即开启成功  </p>\n<p>2.检查nginx端口（比如80端口）<br>firewall-cmd –query-port&#x3D;80&#x2F;tcp<br>返回yes即没问题，否则打开80端口<br>firewall-cmd –add-port&#x3D;80&#x2F;tcp –permanent<br>开启后需再次重启防火墙，才能生效<br>firewall-cmd –reload  </p>\n<p>3.检查nginx服务<br>开启nginx：nginx<br>（nginx关闭命令：nginx -s stop）<br>（nginx重启命令：nginx -s reload）<br>在其它机器上访问服务器IP:端口号，如果出现nginx页面，就表示开启成功（出现40x 页面也无所谓）<br>如果开启nginx提示端口被占用，需要杀死占用这个端口的进程<br>可以使用一个快捷的方法，直接杀死指定端口的所有进程，比如80端口<br>kill -9 $(lsof -i:80 -t)<br>或者可以仔细查看是哪个进程占用了80端口<br>查看80端口使用情况<br>netstat -lnp|grep 80<br>比如正在被nginx占用，记住显示的进程号，比如1053<br>停掉nginx<br>systemctl stop nginx<br>强制杀掉1053进程<br>kill -9 1053<br>再查询<br>netstat -lnp|grep 80<br>没结果说明已经不占用了<br>接着重新开启nginx服务  </p>\n","site":{"data":{}},"more":"<p>重启服务器后的例行操作  </p>\n<p>1.检查防火墙<br>检查防火墙状态：systemctl status firewalld<br>若出现绿色的active(running)，说明防火墙已经启动，否则<br>systemctl start firewalld开启防火墙，没有任何提示即开启成功<br>如果没有反应，或者等待1分钟后出现timeout，需要先kill掉现在的防火墙进程再重新开启<br>kill防火墙进程：pkill -f firewalld<br>然后再重新systemctl start firewalld开启防火墙，没有任何提示即开启成功  </p>\n<p>2.检查nginx端口（比如80端口）<br>firewall-cmd –query-port&#x3D;80&#x2F;tcp<br>返回yes即没问题，否则打开80端口<br>firewall-cmd –add-port&#x3D;80&#x2F;tcp –permanent<br>开启后需再次重启防火墙，才能生效<br>firewall-cmd –reload  </p>\n<p>3.检查nginx服务<br>开启nginx：nginx<br>（nginx关闭命令：nginx -s stop）<br>（nginx重启命令：nginx -s reload）<br>在其它机器上访问服务器IP:端口号，如果出现nginx页面，就表示开启成功（出现40x 页面也无所谓）<br>如果开启nginx提示端口被占用，需要杀死占用这个端口的进程<br>可以使用一个快捷的方法，直接杀死指定端口的所有进程，比如80端口<br>kill -9 $(lsof -i:80 -t)<br>或者可以仔细查看是哪个进程占用了80端口<br>查看80端口使用情况<br>netstat -lnp|grep 80<br>比如正在被nginx占用，记住显示的进程号，比如1053<br>停掉nginx<br>systemctl stop nginx<br>强制杀掉1053进程<br>kill -9 1053<br>再查询<br>netstat -lnp|grep 80<br>没结果说明已经不占用了<br>接着重新开启nginx服务  </p>\n"},{"title":"博客搭建教程14 - Linux云服务器安装宝塔运维工具","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-09T06:00:00.000Z","img":"https://www.leixue.com/uploads/2022/03/baota.png","excerpt":"宝塔是一款基础功能免费的便捷运维工具。","_content":"安装宝塔面板只需要一句话命令：  \n在www.bt.cn宝塔官网上能找到安装命令，比如  \nyum install -y wget && wget -O install.sh https://download.bt.cn/install/install_6.0.sh && sh install.sh ed8484bec  \n\n回车开始自动安装，安装大概需要2-10分钟。安装成功后，会显示出你的宝塔登录信息，帐号和密码。  \n\n直接用你的 IP打开 http://你的IP:8888/ 就可以登录后台，然后选择网站环境安装了。\n可以在宝塔面板上修改账号和密码\n\n在浏览上打开宝塔面板的地址，登入面板会自动推荐你安装环境的套件，这里有两种选择，第一种是LNMP套件，第二种是LAMP套件。选择安装的程序后，面板的左上角会自动显示任务的数量，点击后进入任务列表。最后，调试面板即可安装网站操作。\n\n注意，任何人都可以通过IP地址和端口号进入宝塔面板，因此你的令牌必须足够复杂，即便自己忘记了，还可以登录服务器修改，但如果被别人记住了，那就是巨大的灾难了。","source":"posts_backup/博客搭建教程14 - Linux云服务器安装宝塔运维工具.md","raw":"title: 博客搭建教程14 - Linux云服务器安装宝塔运维工具\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 14:00:00\nimg: https://www.leixue.com/uploads/2022/03/baota.png\nexcerpt: '宝塔是一款基础功能免费的便捷运维工具。'\n---\n安装宝塔面板只需要一句话命令：  \n在www.bt.cn宝塔官网上能找到安装命令，比如  \nyum install -y wget && wget -O install.sh https://download.bt.cn/install/install_6.0.sh && sh install.sh ed8484bec  \n\n回车开始自动安装，安装大概需要2-10分钟。安装成功后，会显示出你的宝塔登录信息，帐号和密码。  \n\n直接用你的 IP打开 http://你的IP:8888/ 就可以登录后台，然后选择网站环境安装了。\n可以在宝塔面板上修改账号和密码\n\n在浏览上打开宝塔面板的地址，登入面板会自动推荐你安装环境的套件，这里有两种选择，第一种是LNMP套件，第二种是LAMP套件。选择安装的程序后，面板的左上角会自动显示任务的数量，点击后进入任务列表。最后，调试面板即可安装网站操作。\n\n注意，任何人都可以通过IP地址和端口号进入宝塔面板，因此你的令牌必须足够复杂，即便自己忘记了，还可以登录服务器修改，但如果被别人记住了，那就是巨大的灾难了。","updated":"2024-01-12T09:14:33.045Z","path":"posts_backup/博客搭建教程14 - Linux云服务器安装宝塔运维工具.html","comments":1,"layout":"page","_id":"cls48emya0003kwvq6frhc2sy","content":"<p>安装宝塔面板只需要一句话命令：<br>在<a href=\"http://www.bt.cn宝塔官网上能找到安装命令,比如/\">www.bt.cn宝塔官网上能找到安装命令，比如</a><br>yum install -y wget &amp;&amp; wget -O install.sh <a href=\"https://download.bt.cn/install/install_6.0.sh\">https://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh ed8484bec  </p>\n<p>回车开始自动安装，安装大概需要2-10分钟。安装成功后，会显示出你的宝塔登录信息，帐号和密码。  </p>\n<p>直接用你的 IP打开 http:&#x2F;&#x2F;你的IP:8888&#x2F; 就可以登录后台，然后选择网站环境安装了。<br>可以在宝塔面板上修改账号和密码</p>\n<p>在浏览上打开宝塔面板的地址，登入面板会自动推荐你安装环境的套件，这里有两种选择，第一种是LNMP套件，第二种是LAMP套件。选择安装的程序后，面板的左上角会自动显示任务的数量，点击后进入任务列表。最后，调试面板即可安装网站操作。</p>\n<p>注意，任何人都可以通过IP地址和端口号进入宝塔面板，因此你的令牌必须足够复杂，即便自己忘记了，还可以登录服务器修改，但如果被别人记住了，那就是巨大的灾难了。</p>\n","site":{"data":{}},"more":"<p>安装宝塔面板只需要一句话命令：<br>在<a href=\"http://www.bt.cn宝塔官网上能找到安装命令,比如/\">www.bt.cn宝塔官网上能找到安装命令，比如</a><br>yum install -y wget &amp;&amp; wget -O install.sh <a href=\"https://download.bt.cn/install/install_6.0.sh\">https://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh ed8484bec  </p>\n<p>回车开始自动安装，安装大概需要2-10分钟。安装成功后，会显示出你的宝塔登录信息，帐号和密码。  </p>\n<p>直接用你的 IP打开 http:&#x2F;&#x2F;你的IP:8888&#x2F; 就可以登录后台，然后选择网站环境安装了。<br>可以在宝塔面板上修改账号和密码</p>\n<p>在浏览上打开宝塔面板的地址，登入面板会自动推荐你安装环境的套件，这里有两种选择，第一种是LNMP套件，第二种是LAMP套件。选择安装的程序后，面板的左上角会自动显示任务的数量，点击后进入任务列表。最后，调试面板即可安装网站操作。</p>\n<p>注意，任何人都可以通过IP地址和端口号进入宝塔面板，因此你的令牌必须足够复杂，即便自己忘记了，还可以登录服务器修改，但如果被别人记住了，那就是巨大的灾难了。</p>\n"},{"title":"博客搭建教程12 - 更换云服务器完成数据迁移","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-09T04:00:00.000Z","img":"https://zhongces3.sina.com.cn/products/201904/740d84b4db27bb0b7303adf092f44cbc.jpeg","excerpt":"文档正在筹备，主要讲述将一台已经部署好网站的云服务器的资料转移至其它云服务器上。","_content":"\n文档正在筹备","source":"posts_backup/博客搭建教程12 - 更换云服务器完成数据迁移.md","raw":"title: 博客搭建教程12 - 更换云服务器完成数据迁移\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 12:00:00\nimg: https://zhongces3.sina.com.cn/products/201904/740d84b4db27bb0b7303adf092f44cbc.jpeg\nexcerpt: '文档正在筹备，主要讲述将一台已经部署好网站的云服务器的资料转移至其它云服务器上。'\n---\n\n文档正在筹备","updated":"2024-01-12T09:14:33.107Z","path":"posts_backup/博客搭建教程12 - 更换云服务器完成数据迁移.html","comments":1,"layout":"page","_id":"cls48emya0004kwvq5jaiagzi","content":"<p>文档正在筹备</p>\n","site":{"data":{}},"more":"<p>文档正在筹备</p>\n"},{"title":"博客搭建教程13 - 写博客实用网站大合集","author":"epya15","tags":["博客"],"categories":["博客搭建"],"img":"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2017/8/9/5e1040cd64eefde3ecb5e0c809cdd3e5~tplv-t2oaga2asx-zoom-crop-mark:3024:3024:3024:1702.awebp","excerpt":"免费的，简单的，长期的，无版权的。","date":"2023-01-09T05:00:00.000Z","_content":"无版权图片网站合集  \nhttps://zhuanlan.zhihu.com/p/99543178  \n无版权视频素材网站合集  \nhttps://zhuanlan.zhihu.com/p/431221694  \n在线图片压缩，超简洁  \nhttps://tinypng.com/  \n在线视频压缩，超简洁  \nhttps://yasuo.xunjiepdf.com/video/  \n在线视频旋转，超简洁  \nhttps://app.xunjieshipin.com/video-rotation/  \n在线RGB颜色选择器  \nhttp://tools.jb51.net/static/colorpicker/\n图床\nhttps://imgloc.com/","source":"posts_backup/博客搭建教程13 - 写博客实用网站大合集.md","raw":"title: 博客搭建教程13 - 写博客实用网站大合集\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\nimg: >-\n  https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2017/8/9/5e1040cd64eefde3ecb5e0c809cdd3e5~tplv-t2oaga2asx-zoom-crop-mark:3024:3024:3024:1702.awebp\nexcerpt: 免费的，简单的，长期的，无版权的。\ndate: 2023-01-09 13:00:00\n---\n无版权图片网站合集  \nhttps://zhuanlan.zhihu.com/p/99543178  \n无版权视频素材网站合集  \nhttps://zhuanlan.zhihu.com/p/431221694  \n在线图片压缩，超简洁  \nhttps://tinypng.com/  \n在线视频压缩，超简洁  \nhttps://yasuo.xunjiepdf.com/video/  \n在线视频旋转，超简洁  \nhttps://app.xunjieshipin.com/video-rotation/  \n在线RGB颜色选择器  \nhttp://tools.jb51.net/static/colorpicker/\n图床\nhttps://imgloc.com/","updated":"2024-01-12T09:14:32.950Z","path":"posts_backup/博客搭建教程13 - 写博客实用网站大合集.html","comments":1,"layout":"page","_id":"cls48emya0005kwvqdonefg4x","content":"<p>无版权图片网站合集<br><a href=\"https://zhuanlan.zhihu.com/p/99543178\">https://zhuanlan.zhihu.com/p/99543178</a><br>无版权视频素材网站合集<br><a href=\"https://zhuanlan.zhihu.com/p/431221694\">https://zhuanlan.zhihu.com/p/431221694</a><br>在线图片压缩，超简洁<br><a href=\"https://tinypng.com/\">https://tinypng.com/</a><br>在线视频压缩，超简洁<br><a href=\"https://yasuo.xunjiepdf.com/video/\">https://yasuo.xunjiepdf.com/video/</a><br>在线视频旋转，超简洁<br><a href=\"https://app.xunjieshipin.com/video-rotation/\">https://app.xunjieshipin.com/video-rotation/</a><br>在线RGB颜色选择器<br><a href=\"http://tools.jb51.net/static/colorpicker/\">http://tools.jb51.net/static/colorpicker/</a><br>图床<br><a href=\"https://imgloc.com/\">https://imgloc.com/</a></p>\n","site":{"data":{}},"more":"<p>无版权图片网站合集<br><a href=\"https://zhuanlan.zhihu.com/p/99543178\">https://zhuanlan.zhihu.com/p/99543178</a><br>无版权视频素材网站合集<br><a href=\"https://zhuanlan.zhihu.com/p/431221694\">https://zhuanlan.zhihu.com/p/431221694</a><br>在线图片压缩，超简洁<br><a href=\"https://tinypng.com/\">https://tinypng.com/</a><br>在线视频压缩，超简洁<br><a href=\"https://yasuo.xunjiepdf.com/video/\">https://yasuo.xunjiepdf.com/video/</a><br>在线视频旋转，超简洁<br><a href=\"https://app.xunjieshipin.com/video-rotation/\">https://app.xunjieshipin.com/video-rotation/</a><br>在线RGB颜色选择器<br><a href=\"http://tools.jb51.net/static/colorpicker/\">http://tools.jb51.net/static/colorpicker/</a><br>图床<br><a href=\"https://imgloc.com/\">https://imgloc.com/</a></p>\n"},{"title":"博客搭建教程16 - linux云服务器在nginx.conf配置防盗链","author":"epya15","tags":["博客"],"categories":[],"date":"2023-01-09T08:00:00.000Z","img":"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/17/16a2a86415e2db30~tplv-t2oaga2asx-zoom-crop-mark:3024:3024:3024:1702.awebp","excerpt":"防止多媒体资源被其它网站引用从而占据流失用户或占据带宽","_content":"简单的防盗链设置，可参考如下文章  \nhttps://www.huati365.com/16b0661323e8cec6  \nhttps://blog.csdn.net/qq_52162404/article/details/127051356  \nhttps://www.jb51.net/article/251177.htm  \n\n总结下来写法，以经由博主验证  \n编辑.../nginx/conf/nginx.conf文件，  \n如果下面这段代码是注释的状态，则将其打开  \n{% image /images/nginxconfopensf.png, width=80%, alt= %}  \n再增加下面代码  \n{% image /images/nginxsetlocation.png, width=80%, alt= %}  \n然后重启nginx  \nnginx -s reload  \n如果自己的网站能显示图片，其它网站CNAME过来的就不显示图片，就说明配置成功  \n盗链网站效果如下  \n{% image /images/otherwebsitelocaitionnginx.png, width=80%, alt= %}  \n这里实现了如果检测到盗链行为就用一张图片回击，也可以只return 403，显示一张裂开的图片  \n盗链提示图片资源  \n{% image /images/invalid_referer_tip.png, width=80%, alt= %}","source":"posts_backup/博客搭建教程16 - linux云服务器在nginx.conf配置防盗链.md","raw":"title: 博客搭建教程16 - linux云服务器在nginx.conf配置防盗链\nauthor: epya15\ntags:\n  - 博客\ncategories: []\ndate: 2023-01-09 16:00:00\nimg: https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/17/16a2a86415e2db30~tplv-t2oaga2asx-zoom-crop-mark:3024:3024:3024:1702.awebp\nexcerpt: '防止多媒体资源被其它网站引用从而占据流失用户或占据带宽'\n---\n简单的防盗链设置，可参考如下文章  \nhttps://www.huati365.com/16b0661323e8cec6  \nhttps://blog.csdn.net/qq_52162404/article/details/127051356  \nhttps://www.jb51.net/article/251177.htm  \n\n总结下来写法，以经由博主验证  \n编辑.../nginx/conf/nginx.conf文件，  \n如果下面这段代码是注释的状态，则将其打开  \n{% image /images/nginxconfopensf.png, width=80%, alt= %}  \n再增加下面代码  \n{% image /images/nginxsetlocation.png, width=80%, alt= %}  \n然后重启nginx  \nnginx -s reload  \n如果自己的网站能显示图片，其它网站CNAME过来的就不显示图片，就说明配置成功  \n盗链网站效果如下  \n{% image /images/otherwebsitelocaitionnginx.png, width=80%, alt= %}  \n这里实现了如果检测到盗链行为就用一张图片回击，也可以只return 403，显示一张裂开的图片  \n盗链提示图片资源  \n{% image /images/invalid_referer_tip.png, width=80%, alt= %}","updated":"2024-01-12T09:14:32.842Z","path":"posts_backup/博客搭建教程16 - linux云服务器在nginx.conf配置防盗链.html","comments":1,"layout":"page","_id":"cls48emya0006kwvqex7fbq1h","content":"<p>简单的防盗链设置，可参考如下文章<br><a href=\"https://www.huati365.com/16b0661323e8cec6\">https://www.huati365.com/16b0661323e8cec6</a><br><a href=\"https://blog.csdn.net/qq_52162404/article/details/127051356\">https://blog.csdn.net/qq_52162404/article/details/127051356</a><br><a href=\"https://www.jb51.net/article/251177.htm\">https://www.jb51.net/article/251177.htm</a>  </p>\n<p>总结下来写法，以经由博主验证<br>编辑…&#x2F;nginx&#x2F;conf&#x2F;nginx.conf文件，<br>如果下面这段代码是注释的状态，则将其打开  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/nginxconfopensf.png\" class=\"lazyload placeholder\" data-srcset=\"/images/nginxconfopensf.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>  \n<p>再增加下面代码  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/nginxsetlocation.png\" class=\"lazyload placeholder\" data-srcset=\"/images/nginxsetlocation.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>  \n<p>然后重启nginx<br>nginx -s reload<br>如果自己的网站能显示图片，其它网站CNAME过来的就不显示图片，就说明配置成功<br>盗链网站效果如下  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/otherwebsitelocaitionnginx.png\" class=\"lazyload placeholder\" data-srcset=\"/images/otherwebsitelocaitionnginx.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>  \n<p>这里实现了如果检测到盗链行为就用一张图片回击，也可以只return 403，显示一张裂开的图片<br>盗链提示图片资源  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/invalid_referer_tip.png\" class=\"lazyload placeholder\" data-srcset=\"/images/invalid_referer_tip.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>","site":{"data":{}},"more":"<p>简单的防盗链设置，可参考如下文章<br><a href=\"https://www.huati365.com/16b0661323e8cec6\">https://www.huati365.com/16b0661323e8cec6</a><br><a href=\"https://blog.csdn.net/qq_52162404/article/details/127051356\">https://blog.csdn.net/qq_52162404/article/details/127051356</a><br><a href=\"https://www.jb51.net/article/251177.htm\">https://www.jb51.net/article/251177.htm</a>  </p>\n<p>总结下来写法，以经由博主验证<br>编辑…&#x2F;nginx&#x2F;conf&#x2F;nginx.conf文件，<br>如果下面这段代码是注释的状态，则将其打开  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/nginxconfopensf.png\" style=\"width:80%;\"/></div></div>  \n<p>再增加下面代码  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/nginxsetlocation.png\" style=\"width:80%;\"/></div></div>  \n<p>然后重启nginx<br>nginx -s reload<br>如果自己的网站能显示图片，其它网站CNAME过来的就不显示图片，就说明配置成功<br>盗链网站效果如下  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/otherwebsitelocaitionnginx.png\" style=\"width:80%;\"/></div></div>  \n<p>这里实现了如果检测到盗链行为就用一张图片回击，也可以只return 403，显示一张裂开的图片<br>盗链提示图片资源  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/invalid_referer_tip.png\" style=\"width:80%;\"/></div></div>"},{"title":"博客搭建教程2 - 创建Git仓库","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-08T18:00:00.000Z","img":"https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2021%2F0620%2F21391327j00quyoyu000dc000hs00anc.jpg&thumbnail=660x2147483647&quality=80&type=jpg","excerpt":"在阅读本章前，我们默认你已经了解了Git的概念。","_content":"在阅读本章前，我们默认你已经了解了Git的概念。\n\n本章内容比较简单，网上相关文章很多，这里推荐这位博主的文章，因为cypunberk最初就是按照这篇教程搭建的，教程的准确性已经得到验证。\nhttps://zhuanlan.zhihu.com/p/102592286\n\n第一步，注册Github账号\n可以参考这篇知乎的教程https://zhuanlan.zhihu.com/p/103268406\n\n第二步，安装Git\n可以参考这篇知乎的教程https://zhuanlan.zhihu.com/p/103325381\n\n第三步，创建Github仓库并使用Git推送文件\n可以参考这篇知乎的教程https://zhuanlan.zhihu.com/p/103391101","source":"posts_backup/博客搭建教程2 - 创建Git仓库.md","raw":"title: 博客搭建教程2 - 创建Git仓库\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 02:00:00\nimg: https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2021%2F0620%2F21391327j00quyoyu000dc000hs00anc.jpg&thumbnail=660x2147483647&quality=80&type=jpg\nexcerpt: '在阅读本章前，我们默认你已经了解了Git的概念。'\n---\n在阅读本章前，我们默认你已经了解了Git的概念。\n\n本章内容比较简单，网上相关文章很多，这里推荐这位博主的文章，因为cypunberk最初就是按照这篇教程搭建的，教程的准确性已经得到验证。\nhttps://zhuanlan.zhihu.com/p/102592286\n\n第一步，注册Github账号\n可以参考这篇知乎的教程https://zhuanlan.zhihu.com/p/103268406\n\n第二步，安装Git\n可以参考这篇知乎的教程https://zhuanlan.zhihu.com/p/103325381\n\n第三步，创建Github仓库并使用Git推送文件\n可以参考这篇知乎的教程https://zhuanlan.zhihu.com/p/103391101","updated":"2024-01-12T09:14:32.972Z","path":"posts_backup/博客搭建教程2 - 创建Git仓库.html","comments":1,"layout":"page","_id":"cls48emya0007kwvq1c3j9pb2","content":"<p>在阅读本章前，我们默认你已经了解了Git的概念。</p>\n<p>本章内容比较简单，网上相关文章很多，这里推荐这位博主的文章，因为cypunberk最初就是按照这篇教程搭建的，教程的准确性已经得到验证。<br><a href=\"https://zhuanlan.zhihu.com/p/102592286\">https://zhuanlan.zhihu.com/p/102592286</a></p>\n<p>第一步，注册Github账号<br>可以参考这篇知乎的教程<a href=\"https://zhuanlan.zhihu.com/p/103268406\">https://zhuanlan.zhihu.com/p/103268406</a></p>\n<p>第二步，安装Git<br>可以参考这篇知乎的教程<a href=\"https://zhuanlan.zhihu.com/p/103325381\">https://zhuanlan.zhihu.com/p/103325381</a></p>\n<p>第三步，创建Github仓库并使用Git推送文件<br>可以参考这篇知乎的教程<a href=\"https://zhuanlan.zhihu.com/p/103391101\">https://zhuanlan.zhihu.com/p/103391101</a></p>\n","site":{"data":{}},"more":"<p>在阅读本章前，我们默认你已经了解了Git的概念。</p>\n<p>本章内容比较简单，网上相关文章很多，这里推荐这位博主的文章，因为cypunberk最初就是按照这篇教程搭建的，教程的准确性已经得到验证。<br><a href=\"https://zhuanlan.zhihu.com/p/102592286\">https://zhuanlan.zhihu.com/p/102592286</a></p>\n<p>第一步，注册Github账号<br>可以参考这篇知乎的教程<a href=\"https://zhuanlan.zhihu.com/p/103268406\">https://zhuanlan.zhihu.com/p/103268406</a></p>\n<p>第二步，安装Git<br>可以参考这篇知乎的教程<a href=\"https://zhuanlan.zhihu.com/p/103325381\">https://zhuanlan.zhihu.com/p/103325381</a></p>\n<p>第三步，创建Github仓库并使用Git推送文件<br>可以参考这篇知乎的教程<a href=\"https://zhuanlan.zhihu.com/p/103391101\">https://zhuanlan.zhihu.com/p/103391101</a></p>\n"},{"title":"博客搭建教程4 - 更换Hexo博客主题","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-08T20:00:00.000Z","img":"https://img1.baidu.com/it/u=4061327327,3801077277&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500","excerpt":"截止至2023/2/6，Hexo已经拥有375款主题。","_content":"在这里选择喜欢的主题\nhttps://hexo.io/themes/\n\n在Hexo博客仓库目录里可以看到_configs.yml和themes文件夹。\n这两个文件夹在更换主题时非常重要。\n{% image /images/themeandconfigs.png, width=80%, alt= %}\n\n其中themes文件夹负责存储下载的主题，每一个下载的主题都以其名字的方式放在此文件夹里，例如\n\n{% image /images/themesIntro.png, width=80%, alt= %}\n\n文件_configs.yml则是博客网站的配置文件，主题下载好后，用文本编辑器编辑这个文件，只要修改theme字段，改为主题名称即可，图片中使用bamboo作为当前博客主题。\n\n{% image /images/setbamboostyle.png, width=80%, alt= %}\n\n\n主题安装方式：\n这里的每一个主题都对应一个Github仓库，比如我们选择了Ocean这个主题\nhttps://github.com/zhwangart/hexo-theme-ocean\n\n{% image /images/selectoceanstyle.png, width=80%, alt= %}\n\n可以看到Readme文档，里面有使用Git命令安装主题的方式。\n\n使用$ git clone https://github.com/zhwangart/hexo-theme-ocean.git themes/ocean\n将主题下载到themes文件夹，注意目录结构，确保themes下就是ocean的git仓库，而且命名就叫ocean\n接着在_configs.yml中（注意不是themes/ocean目录下面的_configs.yml），找到theme字段，更改为\ntheme: ocean\n\n接下来在博客目录下启动终端\n执行hexo s\n\n接下来就可以在浏览器输入 http://localhost:4000/  预览主题了\n\nQ:系统不识别hexo命令？\nA：是因为hexo命令没有配置到环境变量，或者没有在合法的目录下执行hexo s命令。hexo并非在任何目录下都可以执行hexo s，必须要在博客工程的根目录下。\n\n想定制主题？\n进入themes/ocean文件夹，修改_config.yml文件，通常主题的Git文档中会介绍这个文件里的配置如何修改，你可以在这个配置文件中控制网站图表，是否开启评论系统，是否允许右键复制等等。\n\nQ：我可以在themes文件夹中放置多个主题吗？实际运行网站时显示的是哪一个主题？\nA：完全可以，多个主题在themes文件夹中互相并不影响，网站运行时使用的主题就是_config.yml中theme字段配置的主题名。","source":"posts_backup/博客搭建教程4 - 更换Hexo博客主题.md","raw":"title: 博客搭建教程4 - 更换Hexo博客主题\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 04:00:00\nimg: https://img1.baidu.com/it/u=4061327327,3801077277&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500\nexcerpt: '截止至2023/2/6，Hexo已经拥有375款主题。'\n---\n在这里选择喜欢的主题\nhttps://hexo.io/themes/\n\n在Hexo博客仓库目录里可以看到_configs.yml和themes文件夹。\n这两个文件夹在更换主题时非常重要。\n{% image /images/themeandconfigs.png, width=80%, alt= %}\n\n其中themes文件夹负责存储下载的主题，每一个下载的主题都以其名字的方式放在此文件夹里，例如\n\n{% image /images/themesIntro.png, width=80%, alt= %}\n\n文件_configs.yml则是博客网站的配置文件，主题下载好后，用文本编辑器编辑这个文件，只要修改theme字段，改为主题名称即可，图片中使用bamboo作为当前博客主题。\n\n{% image /images/setbamboostyle.png, width=80%, alt= %}\n\n\n主题安装方式：\n这里的每一个主题都对应一个Github仓库，比如我们选择了Ocean这个主题\nhttps://github.com/zhwangart/hexo-theme-ocean\n\n{% image /images/selectoceanstyle.png, width=80%, alt= %}\n\n可以看到Readme文档，里面有使用Git命令安装主题的方式。\n\n使用$ git clone https://github.com/zhwangart/hexo-theme-ocean.git themes/ocean\n将主题下载到themes文件夹，注意目录结构，确保themes下就是ocean的git仓库，而且命名就叫ocean\n接着在_configs.yml中（注意不是themes/ocean目录下面的_configs.yml），找到theme字段，更改为\ntheme: ocean\n\n接下来在博客目录下启动终端\n执行hexo s\n\n接下来就可以在浏览器输入 http://localhost:4000/  预览主题了\n\nQ:系统不识别hexo命令？\nA：是因为hexo命令没有配置到环境变量，或者没有在合法的目录下执行hexo s命令。hexo并非在任何目录下都可以执行hexo s，必须要在博客工程的根目录下。\n\n想定制主题？\n进入themes/ocean文件夹，修改_config.yml文件，通常主题的Git文档中会介绍这个文件里的配置如何修改，你可以在这个配置文件中控制网站图表，是否开启评论系统，是否允许右键复制等等。\n\nQ：我可以在themes文件夹中放置多个主题吗？实际运行网站时显示的是哪一个主题？\nA：完全可以，多个主题在themes文件夹中互相并不影响，网站运行时使用的主题就是_config.yml中theme字段配置的主题名。","updated":"2024-01-12T09:14:33.089Z","path":"posts_backup/博客搭建教程4 - 更换Hexo博客主题.html","comments":1,"layout":"page","_id":"cls48emya0008kwvqbesk017f","content":"<p>在这里选择喜欢的主题<br><a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a></p>\n<p>在Hexo博客仓库目录里可以看到_configs.yml和themes文件夹。<br>这两个文件夹在更换主题时非常重要。</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/themeandconfigs.png\" class=\"lazyload placeholder\" data-srcset=\"/images/themeandconfigs.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n\n<p>其中themes文件夹负责存储下载的主题，每一个下载的主题都以其名字的方式放在此文件夹里，例如</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/themesIntro.png\" class=\"lazyload placeholder\" data-srcset=\"/images/themesIntro.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n\n<p>文件_configs.yml则是博客网站的配置文件，主题下载好后，用文本编辑器编辑这个文件，只要修改theme字段，改为主题名称即可，图片中使用bamboo作为当前博客主题。</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/setbamboostyle.png\" class=\"lazyload placeholder\" data-srcset=\"/images/setbamboostyle.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n\n\n<p>主题安装方式：<br>这里的每一个主题都对应一个Github仓库，比如我们选择了Ocean这个主题<br><a href=\"https://github.com/zhwangart/hexo-theme-ocean\">https://github.com/zhwangart/hexo-theme-ocean</a></p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/selectoceanstyle.png\" class=\"lazyload placeholder\" data-srcset=\"/images/selectoceanstyle.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n\n<p>可以看到Readme文档，里面有使用Git命令安装主题的方式。</p>\n<p>使用$ git clone <a href=\"https://github.com/zhwangart/hexo-theme-ocean.git\">https://github.com/zhwangart/hexo-theme-ocean.git</a> themes&#x2F;ocean<br>将主题下载到themes文件夹，注意目录结构，确保themes下就是ocean的git仓库，而且命名就叫ocean<br>接着在_configs.yml中（注意不是themes&#x2F;ocean目录下面的_configs.yml），找到theme字段，更改为<br>theme: ocean</p>\n<p>接下来在博客目录下启动终端<br>执行hexo s</p>\n<p>接下来就可以在浏览器输入 <a href=\"http://localhost:4000/\">http://localhost:4000/</a>  预览主题了</p>\n<p>Q:系统不识别hexo命令？<br>A：是因为hexo命令没有配置到环境变量，或者没有在合法的目录下执行hexo s命令。hexo并非在任何目录下都可以执行hexo s，必须要在博客工程的根目录下。</p>\n<p>想定制主题？<br>进入themes&#x2F;ocean文件夹，修改_config.yml文件，通常主题的Git文档中会介绍这个文件里的配置如何修改，你可以在这个配置文件中控制网站图表，是否开启评论系统，是否允许右键复制等等。</p>\n<p>Q：我可以在themes文件夹中放置多个主题吗？实际运行网站时显示的是哪一个主题？<br>A：完全可以，多个主题在themes文件夹中互相并不影响，网站运行时使用的主题就是_config.yml中theme字段配置的主题名。</p>\n","site":{"data":{}},"more":"<p>在这里选择喜欢的主题<br><a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a></p>\n<p>在Hexo博客仓库目录里可以看到_configs.yml和themes文件夹。<br>这两个文件夹在更换主题时非常重要。</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/themeandconfigs.png\" style=\"width:80%;\"/></div></div>\n\n<p>其中themes文件夹负责存储下载的主题，每一个下载的主题都以其名字的方式放在此文件夹里，例如</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/themesIntro.png\" style=\"width:80%;\"/></div></div>\n\n<p>文件_configs.yml则是博客网站的配置文件，主题下载好后，用文本编辑器编辑这个文件，只要修改theme字段，改为主题名称即可，图片中使用bamboo作为当前博客主题。</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/setbamboostyle.png\" style=\"width:80%;\"/></div></div>\n\n\n<p>主题安装方式：<br>这里的每一个主题都对应一个Github仓库，比如我们选择了Ocean这个主题<br><a href=\"https://github.com/zhwangart/hexo-theme-ocean\">https://github.com/zhwangart/hexo-theme-ocean</a></p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/selectoceanstyle.png\" style=\"width:80%;\"/></div></div>\n\n<p>可以看到Readme文档，里面有使用Git命令安装主题的方式。</p>\n<p>使用$ git clone <a href=\"https://github.com/zhwangart/hexo-theme-ocean.git\">https://github.com/zhwangart/hexo-theme-ocean.git</a> themes&#x2F;ocean<br>将主题下载到themes文件夹，注意目录结构，确保themes下就是ocean的git仓库，而且命名就叫ocean<br>接着在_configs.yml中（注意不是themes&#x2F;ocean目录下面的_configs.yml），找到theme字段，更改为<br>theme: ocean</p>\n<p>接下来在博客目录下启动终端<br>执行hexo s</p>\n<p>接下来就可以在浏览器输入 <a href=\"http://localhost:4000/\">http://localhost:4000/</a>  预览主题了</p>\n<p>Q:系统不识别hexo命令？<br>A：是因为hexo命令没有配置到环境变量，或者没有在合法的目录下执行hexo s命令。hexo并非在任何目录下都可以执行hexo s，必须要在博客工程的根目录下。</p>\n<p>想定制主题？<br>进入themes&#x2F;ocean文件夹，修改_config.yml文件，通常主题的Git文档中会介绍这个文件里的配置如何修改，你可以在这个配置文件中控制网站图表，是否开启评论系统，是否允许右键复制等等。</p>\n<p>Q：我可以在themes文件夹中放置多个主题吗？实际运行网站时显示的是哪一个主题？<br>A：完全可以，多个主题在themes文件夹中互相并不影响，网站运行时使用的主题就是_config.yml中theme字段配置的主题名。</p>\n"},{"title":"博客搭建教程3 - 初识Node.js和Hexo","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-08T19:00:00.000Z","img":"https://pic4.zhimg.com/v2-8d3c4ce9c9fba8a59a092eecba504585_1440w.jpg","excerpt":"","_content":"本篇内容比较简单，同样参考这位博主的文章\nhttps://zhuanlan.zhihu.com/p/105715224\n\n按照上述流程做完后，基于Github Page的博客就已经搭建好了，你可以在浏览器上输入自己的Github仓库地址，就可以看到搭建好的Hexo博客了。\n\n接下来的教程里，我们将继续做如下几件事情来加深对网站的理解，增强管理能力，这些并非必要项，而且每篇教程都是独立的，可以选择有需要的部分阅读，未来博主也会随时扩充。\n接下来教程的内容大致如下，看看有没有你比较关心的：\n1.选择自己喜欢的Hexo主题美化博客\n2.购买一个自己喜欢的域名，解析域名，并取代现在github访问的方式\n3.了解网站备案，选择云服务器，搭建资源服实现图床\n4.将博客部署在云服务器上\n5.学习Markdown常用语法\n6.使用宝塔管理自己的服务器\n7.知识财产保护与侵权行为","source":"posts_backup/博客搭建教程3 - 初识Node.js和Hexo.md","raw":"title: 博客搭建教程3 - 初识Node.js和Hexo\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 03:00:00\nimg: https://pic4.zhimg.com/v2-8d3c4ce9c9fba8a59a092eecba504585_1440w.jpg\nexcerpt: ''\n---\n本篇内容比较简单，同样参考这位博主的文章\nhttps://zhuanlan.zhihu.com/p/105715224\n\n按照上述流程做完后，基于Github Page的博客就已经搭建好了，你可以在浏览器上输入自己的Github仓库地址，就可以看到搭建好的Hexo博客了。\n\n接下来的教程里，我们将继续做如下几件事情来加深对网站的理解，增强管理能力，这些并非必要项，而且每篇教程都是独立的，可以选择有需要的部分阅读，未来博主也会随时扩充。\n接下来教程的内容大致如下，看看有没有你比较关心的：\n1.选择自己喜欢的Hexo主题美化博客\n2.购买一个自己喜欢的域名，解析域名，并取代现在github访问的方式\n3.了解网站备案，选择云服务器，搭建资源服实现图床\n4.将博客部署在云服务器上\n5.学习Markdown常用语法\n6.使用宝塔管理自己的服务器\n7.知识财产保护与侵权行为","updated":"2024-01-12T09:14:32.829Z","path":"posts_backup/博客搭建教程3 - 初识Node.js和Hexo.html","comments":1,"layout":"page","_id":"cls48emyb0009kwvqdf1t9nyn","content":"<p>本篇内容比较简单，同样参考这位博主的文章<br><a href=\"https://zhuanlan.zhihu.com/p/105715224\">https://zhuanlan.zhihu.com/p/105715224</a></p>\n<p>按照上述流程做完后，基于Github Page的博客就已经搭建好了，你可以在浏览器上输入自己的Github仓库地址，就可以看到搭建好的Hexo博客了。</p>\n<p>接下来的教程里，我们将继续做如下几件事情来加深对网站的理解，增强管理能力，这些并非必要项，而且每篇教程都是独立的，可以选择有需要的部分阅读，未来博主也会随时扩充。<br>接下来教程的内容大致如下，看看有没有你比较关心的：<br>1.选择自己喜欢的Hexo主题美化博客<br>2.购买一个自己喜欢的域名，解析域名，并取代现在github访问的方式<br>3.了解网站备案，选择云服务器，搭建资源服实现图床<br>4.将博客部署在云服务器上<br>5.学习Markdown常用语法<br>6.使用宝塔管理自己的服务器<br>7.知识财产保护与侵权行为</p>\n","site":{"data":{}},"more":"<p>本篇内容比较简单，同样参考这位博主的文章<br><a href=\"https://zhuanlan.zhihu.com/p/105715224\">https://zhuanlan.zhihu.com/p/105715224</a></p>\n<p>按照上述流程做完后，基于Github Page的博客就已经搭建好了，你可以在浏览器上输入自己的Github仓库地址，就可以看到搭建好的Hexo博客了。</p>\n<p>接下来的教程里，我们将继续做如下几件事情来加深对网站的理解，增强管理能力，这些并非必要项，而且每篇教程都是独立的，可以选择有需要的部分阅读，未来博主也会随时扩充。<br>接下来教程的内容大致如下，看看有没有你比较关心的：<br>1.选择自己喜欢的Hexo主题美化博客<br>2.购买一个自己喜欢的域名，解析域名，并取代现在github访问的方式<br>3.了解网站备案，选择云服务器，搭建资源服实现图床<br>4.将博客部署在云服务器上<br>5.学习Markdown常用语法<br>6.使用宝塔管理自己的服务器<br>7.知识财产保护与侵权行为</p>\n"},{"title":"博客搭建教程5 - 为Hexo博客安装插件","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-08T21:00:00.000Z","img":"https://img-blog.csdnimg.cn/img_convert/a13ddd89488d90cf62d1ca8ece66d1d3.png","excerpt":"文档正在筹备，可以跳过。","_content":"文档正在筹备","source":"posts_backup/博客搭建教程5 - 为Hexo博客安装插件.md","raw":"title: 博客搭建教程5 - 为Hexo博客安装插件\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 05:00:00\nimg: https://img-blog.csdnimg.cn/img_convert/a13ddd89488d90cf62d1ca8ece66d1d3.png\nexcerpt: '文档正在筹备，可以跳过。'\n---\n文档正在筹备","updated":"2024-01-12T09:14:32.994Z","path":"posts_backup/博客搭建教程5 - 为Hexo博客安装插件.html","comments":1,"layout":"page","_id":"cls48emyb000akwvq5ak70cda","content":"<p>文档正在筹备</p>\n","site":{"data":{}},"more":"<p>文档正在筹备</p>\n"},{"title":"博客搭建教程6 - 为Github部署的Hexo博客更换新域名","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-08T22:00:00.000Z","img":"http://img.idcicp.com//attached/20210708/6376133546709039089257812.jpg","excerpt":"短小好记的域名通常不便宜，但还是有捡漏的机会，又或许你最在意的那个名字根本没有人注册过。","_content":"首先在域名购买网站挑选心仪的域名并购买，比如万网：\nhttps://wanwang.aliyun.com/domain\n\n暂时不知道想要什么域名？那买一个最便宜的就可以了。又短又便宜的域名不多见，但是捞到就是赚到。\n\n购买后在域名控制台就能进行域名解析操作了。\n\n{% image /images/wanwanggoumaiyuming.png, width=80%, alt= %}\n\n点击域名后面的【解析】按钮，进入解析界面\n\n关于如何添加解析记录，可以参考这篇文章\nhttps://zhuanlan.zhihu.com/p/103813944\n\n大体操作思路是：\n登录自己的github博客仓库，在页面上找到Settings按钮，点击进入\n{% image /images/girhubhoutaisettings.png, width=80%, alt= %}\n\n进入Pages页面\n\n{% image /images/githubsettingpage.png, width=80%, alt= %}\n在Pages页面里可以看到你目前的域名，是以github.io结尾的，接下来我们在CustomDomain里填写自己的域名，并点击Save\n接下来就会发现你的博客地址变成了自己填写的域名\n{% image /images/githubsetselfurl.png, width=80%, alt= %}\n点击【Visit site】进行测试,看看能否访问。若可以访问，则说明配置成功。","source":"posts_backup/博客搭建教程6 - 为Github部署的Hexo博客更换新域名.md","raw":"title: 博客搭建教程6 - 为Github部署的Hexo博客更换新域名\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 06:00:00\nimg: http://img.idcicp.com//attached/20210708/6376133546709039089257812.jpg\nexcerpt: '短小好记的域名通常不便宜，但还是有捡漏的机会，又或许你最在意的那个名字根本没有人注册过。'\n---\n首先在域名购买网站挑选心仪的域名并购买，比如万网：\nhttps://wanwang.aliyun.com/domain\n\n暂时不知道想要什么域名？那买一个最便宜的就可以了。又短又便宜的域名不多见，但是捞到就是赚到。\n\n购买后在域名控制台就能进行域名解析操作了。\n\n{% image /images/wanwanggoumaiyuming.png, width=80%, alt= %}\n\n点击域名后面的【解析】按钮，进入解析界面\n\n关于如何添加解析记录，可以参考这篇文章\nhttps://zhuanlan.zhihu.com/p/103813944\n\n大体操作思路是：\n登录自己的github博客仓库，在页面上找到Settings按钮，点击进入\n{% image /images/girhubhoutaisettings.png, width=80%, alt= %}\n\n进入Pages页面\n\n{% image /images/githubsettingpage.png, width=80%, alt= %}\n在Pages页面里可以看到你目前的域名，是以github.io结尾的，接下来我们在CustomDomain里填写自己的域名，并点击Save\n接下来就会发现你的博客地址变成了自己填写的域名\n{% image /images/githubsetselfurl.png, width=80%, alt= %}\n点击【Visit site】进行测试,看看能否访问。若可以访问，则说明配置成功。","updated":"2024-01-12T09:14:32.892Z","path":"posts_backup/博客搭建教程6 - 为Github部署的Hexo博客更换新域名.html","comments":1,"layout":"page","_id":"cls48emyb000bkwvq5bpu7ers","content":"<p>首先在域名购买网站挑选心仪的域名并购买，比如万网：<br><a href=\"https://wanwang.aliyun.com/domain\">https://wanwang.aliyun.com/domain</a></p>\n<p>暂时不知道想要什么域名？那买一个最便宜的就可以了。又短又便宜的域名不多见，但是捞到就是赚到。</p>\n<p>购买后在域名控制台就能进行域名解析操作了。</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/wanwanggoumaiyuming.png\" class=\"lazyload placeholder\" data-srcset=\"/images/wanwanggoumaiyuming.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n\n<p>点击域名后面的【解析】按钮，进入解析界面</p>\n<p>关于如何添加解析记录，可以参考这篇文章<br><a href=\"https://zhuanlan.zhihu.com/p/103813944\">https://zhuanlan.zhihu.com/p/103813944</a></p>\n<p>大体操作思路是：<br>登录自己的github博客仓库，在页面上找到Settings按钮，点击进入</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/girhubhoutaisettings.png\" class=\"lazyload placeholder\" data-srcset=\"/images/girhubhoutaisettings.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n\n<p>进入Pages页面</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/githubsettingpage.png\" class=\"lazyload placeholder\" data-srcset=\"/images/githubsettingpage.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n<p>在Pages页面里可以看到你目前的域名，是以github.io结尾的，接下来我们在CustomDomain里填写自己的域名，并点击Save<br>接下来就会发现你的博客地址变成了自己填写的域名</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/githubsetselfurl.png\" class=\"lazyload placeholder\" data-srcset=\"/images/githubsetselfurl.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n<p>点击【Visit site】进行测试,看看能否访问。若可以访问，则说明配置成功。</p>\n","site":{"data":{}},"more":"<p>首先在域名购买网站挑选心仪的域名并购买，比如万网：<br><a href=\"https://wanwang.aliyun.com/domain\">https://wanwang.aliyun.com/domain</a></p>\n<p>暂时不知道想要什么域名？那买一个最便宜的就可以了。又短又便宜的域名不多见，但是捞到就是赚到。</p>\n<p>购买后在域名控制台就能进行域名解析操作了。</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/wanwanggoumaiyuming.png\" style=\"width:80%;\"/></div></div>\n\n<p>点击域名后面的【解析】按钮，进入解析界面</p>\n<p>关于如何添加解析记录，可以参考这篇文章<br><a href=\"https://zhuanlan.zhihu.com/p/103813944\">https://zhuanlan.zhihu.com/p/103813944</a></p>\n<p>大体操作思路是：<br>登录自己的github博客仓库，在页面上找到Settings按钮，点击进入</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/girhubhoutaisettings.png\" style=\"width:80%;\"/></div></div>\n\n<p>进入Pages页面</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/githubsettingpage.png\" style=\"width:80%;\"/></div></div>\n<p>在Pages页面里可以看到你目前的域名，是以github.io结尾的，接下来我们在CustomDomain里填写自己的域名，并点击Save<br>接下来就会发现你的博客地址变成了自己填写的域名</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/githubsetselfurl.png\" style=\"width:80%;\"/></div></div>\n<p>点击【Visit site】进行测试,看看能否访问。若可以访问，则说明配置成功。</p>\n"},{"title":"博客搭建教程9 - 使用scp命令从Windows向linux传输文件","author":"epya15","tags":["博客"],"categories":[],"date":"2023-01-09T01:00:00.000Z","img":"https://gss0.baidu.com/70cFfyinKgQFm2e88IuM_a/baike/pic/item/64380cd7912397ddea52b9315582b2b7d0a287df.jpg","excerpt":"如果你还在用微信同步文件，那可以了解一下scp命令","_content":"Windows使用scp向linux服务器传输文件,可参考这篇博客  \nhttps://www.cnblogs.com/tugenhua0707/p/8278772.html\n\n比如传送一个Windows桌面上的视频到服务器，输入下面指令并回车\nscp D:\\Users\\Administrator\\Desktop\\video.mp4 root@208.87.201.164:/usr/local\n会提示这个：\n\n{% image /images/scpwindowsfirstlink.png, width=80%, alt= %}\n这是因为首次连接，双方机器还互相陌生，需要打个招呼，只需输入yes并回车\n\n{% image /images/scpwindowslinkok.png, width=80%, alt= %}\n接下来输入远程服务器的密码\n注意由于上面我们使用了向root传输数据的命令，因此该密码必须是linux服务器root用户的密码，如果你使用的是云服务器，那么在云服务器控制台/实例页面中能看到  \n如果出现下面的图说明传输成功，博主传输了一个59MB视频，时间消耗29s，平均速度为2MB/s  \n{% image /images/scptransferdemo.png, width=80%, alt= %}  \n接下来到服务器/usr/local目录下查看这个文件就可以了。","source":"posts_backup/博客搭建教程9 - 使用scp命令从Windows向linux传输文件.md","raw":"title: 博客搭建教程9 - 使用scp命令从Windows向linux传输文件\nauthor: epya15\ntags:\n  - 博客\ncategories: []\ndate: 2023-01-09 09:00:00\nimg: https://gss0.baidu.com/70cFfyinKgQFm2e88IuM_a/baike/pic/item/64380cd7912397ddea52b9315582b2b7d0a287df.jpg\nexcerpt: '如果你还在用微信同步文件，那可以了解一下scp命令'\n---\nWindows使用scp向linux服务器传输文件,可参考这篇博客  \nhttps://www.cnblogs.com/tugenhua0707/p/8278772.html\n\n比如传送一个Windows桌面上的视频到服务器，输入下面指令并回车\nscp D:\\Users\\Administrator\\Desktop\\video.mp4 root@208.87.201.164:/usr/local\n会提示这个：\n\n{% image /images/scpwindowsfirstlink.png, width=80%, alt= %}\n这是因为首次连接，双方机器还互相陌生，需要打个招呼，只需输入yes并回车\n\n{% image /images/scpwindowslinkok.png, width=80%, alt= %}\n接下来输入远程服务器的密码\n注意由于上面我们使用了向root传输数据的命令，因此该密码必须是linux服务器root用户的密码，如果你使用的是云服务器，那么在云服务器控制台/实例页面中能看到  \n如果出现下面的图说明传输成功，博主传输了一个59MB视频，时间消耗29s，平均速度为2MB/s  \n{% image /images/scptransferdemo.png, width=80%, alt= %}  \n接下来到服务器/usr/local目录下查看这个文件就可以了。","updated":"2024-01-12T09:14:32.914Z","path":"posts_backup/博客搭建教程9 - 使用scp命令从Windows向linux传输文件.html","comments":1,"layout":"page","_id":"cls48emyb000ckwvqhuwq4gor","content":"<p>Windows使用scp向linux服务器传输文件,可参考这篇博客<br><a href=\"https://www.cnblogs.com/tugenhua0707/p/8278772.html\">https://www.cnblogs.com/tugenhua0707/p/8278772.html</a></p>\n<p>比如传送一个Windows桌面上的视频到服务器，输入下面指令并回车<br>scp D:\\Users\\Administrator\\Desktop\\video.mp4 <a href=\"mailto:&#x72;&#111;&#111;&#x74;&#64;&#50;&#x30;&#x38;&#x2e;&#56;&#55;&#x2e;&#x32;&#48;&#x31;&#46;&#x31;&#54;&#52;\">&#x72;&#111;&#111;&#x74;&#64;&#50;&#x30;&#x38;&#x2e;&#56;&#55;&#x2e;&#x32;&#48;&#x31;&#46;&#x31;&#54;&#52;</a>:&#x2F;usr&#x2F;local<br>会提示这个：</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/scpwindowsfirstlink.png\" class=\"lazyload placeholder\" data-srcset=\"/images/scpwindowsfirstlink.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n<p>这是因为首次连接，双方机器还互相陌生，需要打个招呼，只需输入yes并回车</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/scpwindowslinkok.png\" class=\"lazyload placeholder\" data-srcset=\"/images/scpwindowslinkok.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n<p>接下来输入远程服务器的密码<br>注意由于上面我们使用了向root传输数据的命令，因此该密码必须是linux服务器root用户的密码，如果你使用的是云服务器，那么在云服务器控制台&#x2F;实例页面中能看到<br>如果出现下面的图说明传输成功，博主传输了一个59MB视频，时间消耗29s，平均速度为2MB&#x2F;s  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/scptransferdemo.png\" class=\"lazyload placeholder\" data-srcset=\"/images/scptransferdemo.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>  \n<p>接下来到服务器&#x2F;usr&#x2F;local目录下查看这个文件就可以了。</p>\n","site":{"data":{}},"more":"<p>Windows使用scp向linux服务器传输文件,可参考这篇博客<br><a href=\"https://www.cnblogs.com/tugenhua0707/p/8278772.html\">https://www.cnblogs.com/tugenhua0707/p/8278772.html</a></p>\n<p>比如传送一个Windows桌面上的视频到服务器，输入下面指令并回车<br>scp D:\\Users\\Administrator\\Desktop\\video.mp4 <a href=\"mailto:&#x72;&#111;&#111;&#x74;&#64;&#50;&#x30;&#x38;&#x2e;&#56;&#55;&#x2e;&#x32;&#48;&#x31;&#46;&#x31;&#54;&#52;\">&#x72;&#111;&#111;&#x74;&#64;&#50;&#x30;&#x38;&#x2e;&#56;&#55;&#x2e;&#x32;&#48;&#x31;&#46;&#x31;&#54;&#52;</a>:&#x2F;usr&#x2F;local<br>会提示这个：</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/scpwindowsfirstlink.png\" style=\"width:80%;\"/></div></div>\n<p>这是因为首次连接，双方机器还互相陌生，需要打个招呼，只需输入yes并回车</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/scpwindowslinkok.png\" style=\"width:80%;\"/></div></div>\n<p>接下来输入远程服务器的密码<br>注意由于上面我们使用了向root传输数据的命令，因此该密码必须是linux服务器root用户的密码，如果你使用的是云服务器，那么在云服务器控制台&#x2F;实例页面中能看到<br>如果出现下面的图说明传输成功，博主传输了一个59MB视频，时间消耗29s，平均速度为2MB&#x2F;s  </p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/scptransferdemo.png\" style=\"width:80%;\"/></div></div>  \n<p>接下来到服务器&#x2F;usr&#x2F;local目录下查看这个文件就可以了。</p>\n"},{"title":"博客搭建教程7 - 为博客网站选择合适的云服务器","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-08T23:00:00.000Z","img":"https://www.5iqiqu.com/images/news/66/66372-20200515145359325-1759450153.jpg","excerpt":"拥有一台自己的服务器，首先需要准备几百元的预算，再视情况增加投入。","_content":"网页中会展示一些大体积的资源，比如音频视频等多媒体文件，还有一些可被公开下载的文件。\n你可能听过图床，图床就是将博客的图片存储到云盘里，比如七牛云，图床为图片生成外链，博客仓库中无需携带图片，只要通过链接访问就可以了。\n如果你只是想要一个图床，并且你的网站有ICP备案，那么直接使用七牛云的服务就可以了，专业的图床还有防盗链，CDN等实用技术加持，真的是一个不错的选择。\n\nQ：未备案的个人博客网站可以使用七牛云图床吗？\nA：不可以。\n\n虽然使用Git仓库可以存储这些大文件（比如Gitee，Github，相关介绍链接https://zhuanlan.zhihu.com/p/581297109  \n，但是Git的本意是代码管理，对于大体积文件来讲并不适合，Git仓库其实是禁止被用作图床的，关于Gitee历史上也不止一次发生过图片无法访问的情况。\n\n{% image /images/giteeforbiddenjpgbed.png, width=80%, alt= %}\n\nQ：我不想买云服务器，可以将网站部署到自己的闲置电脑上吗？\nA：你可以在网络上搜索这个话题，了解实现这个需求的难度，从而决定要选择何种方式。本文只介绍使用云服务器搭建网站的方法。\n\n以下介绍博主使用的云服务器。  \n在建站初期，网站基本没有访客，因此无需考虑太多。博主最开始决定使用恒创ECS云服务器，因为有7天免费试用，可以顺带了解一下1核2G的配置是否够用。  \n后来考虑到域名是在阿里云买的，所以也买了一个月的阿里云轻量应用服务器，它的价格比ECS服务器便宜一些，但是对配置并不满意，因此还是选择了恒创的ECS云服务器。\n在试用恒创的服务器时发现2G的内存超出了实际需求，因此在购买时决定只买1G内存套餐即可。  \n恒创的ECS云服务器算是很便宜的了，博主选择了最低配置，CentOS 7系统，1核1G带宽2M，大约300元/年。而且恒创的香港，美国，日本服务器无需备案，很方便。   \n博主建议选择linux系统，不要选择Windows系统，使用linux建站更节省软硬件资源，很适合建站，而Windows系统很臃肿，以至于在1G内存的云服务器上无法运行，2G内存才勉勉强强。因此Windows服务器起步配置要比linux的高，起步价也更高。  \n博主选择的是CentOS 7.1系统。\n\nQ：云服务器的带宽如何选择？家庭网络都已经100M起步了，云服务器2M带宽是不是太低了？\nA：对于新手站长，博主建议可以选择2M作为入门选择，如果你的网站没有视频或者大量下载资源，那么完全可以支撑早期的网站建设。博主实测2M带宽的服务器加载一篇博客（1k文字+多张100kb图片）只需要1-2秒，如果是mp4视频，那么压缩到10MB/分钟的体积，是可以流畅播放的。","source":"posts_backup/博客搭建教程7 - 为博客网站选择合适的云服务器.md","raw":"title: 博客搭建教程7 - 为博客网站选择合适的云服务器\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 07:00:00\nimg: https://www.5iqiqu.com/images/news/66/66372-20200515145359325-1759450153.jpg\nexcerpt: '拥有一台自己的服务器，首先需要准备几百元的预算，再视情况增加投入。'\n---\n网页中会展示一些大体积的资源，比如音频视频等多媒体文件，还有一些可被公开下载的文件。\n你可能听过图床，图床就是将博客的图片存储到云盘里，比如七牛云，图床为图片生成外链，博客仓库中无需携带图片，只要通过链接访问就可以了。\n如果你只是想要一个图床，并且你的网站有ICP备案，那么直接使用七牛云的服务就可以了，专业的图床还有防盗链，CDN等实用技术加持，真的是一个不错的选择。\n\nQ：未备案的个人博客网站可以使用七牛云图床吗？\nA：不可以。\n\n虽然使用Git仓库可以存储这些大文件（比如Gitee，Github，相关介绍链接https://zhuanlan.zhihu.com/p/581297109  \n，但是Git的本意是代码管理，对于大体积文件来讲并不适合，Git仓库其实是禁止被用作图床的，关于Gitee历史上也不止一次发生过图片无法访问的情况。\n\n{% image /images/giteeforbiddenjpgbed.png, width=80%, alt= %}\n\nQ：我不想买云服务器，可以将网站部署到自己的闲置电脑上吗？\nA：你可以在网络上搜索这个话题，了解实现这个需求的难度，从而决定要选择何种方式。本文只介绍使用云服务器搭建网站的方法。\n\n以下介绍博主使用的云服务器。  \n在建站初期，网站基本没有访客，因此无需考虑太多。博主最开始决定使用恒创ECS云服务器，因为有7天免费试用，可以顺带了解一下1核2G的配置是否够用。  \n后来考虑到域名是在阿里云买的，所以也买了一个月的阿里云轻量应用服务器，它的价格比ECS服务器便宜一些，但是对配置并不满意，因此还是选择了恒创的ECS云服务器。\n在试用恒创的服务器时发现2G的内存超出了实际需求，因此在购买时决定只买1G内存套餐即可。  \n恒创的ECS云服务器算是很便宜的了，博主选择了最低配置，CentOS 7系统，1核1G带宽2M，大约300元/年。而且恒创的香港，美国，日本服务器无需备案，很方便。   \n博主建议选择linux系统，不要选择Windows系统，使用linux建站更节省软硬件资源，很适合建站，而Windows系统很臃肿，以至于在1G内存的云服务器上无法运行，2G内存才勉勉强强。因此Windows服务器起步配置要比linux的高，起步价也更高。  \n博主选择的是CentOS 7.1系统。\n\nQ：云服务器的带宽如何选择？家庭网络都已经100M起步了，云服务器2M带宽是不是太低了？\nA：对于新手站长，博主建议可以选择2M作为入门选择，如果你的网站没有视频或者大量下载资源，那么完全可以支撑早期的网站建设。博主实测2M带宽的服务器加载一篇博客（1k文字+多张100kb图片）只需要1-2秒，如果是mp4视频，那么压缩到10MB/分钟的体积，是可以流畅播放的。","updated":"2024-01-12T09:14:32.860Z","path":"posts_backup/博客搭建教程7 - 为博客网站选择合适的云服务器.html","comments":1,"layout":"page","_id":"cls48emyb000dkwvq60574ckr","content":"<p>网页中会展示一些大体积的资源，比如音频视频等多媒体文件，还有一些可被公开下载的文件。<br>你可能听过图床，图床就是将博客的图片存储到云盘里，比如七牛云，图床为图片生成外链，博客仓库中无需携带图片，只要通过链接访问就可以了。<br>如果你只是想要一个图床，并且你的网站有ICP备案，那么直接使用七牛云的服务就可以了，专业的图床还有防盗链，CDN等实用技术加持，真的是一个不错的选择。</p>\n<p>Q：未备案的个人博客网站可以使用七牛云图床吗？<br>A：不可以。</p>\n<p>虽然使用Git仓库可以存储这些大文件（比如Gitee，Github，相关介绍链接<a href=\"https://zhuanlan.zhihu.com/p/581297109\">https://zhuanlan.zhihu.com/p/581297109</a><br>，但是Git的本意是代码管理，对于大体积文件来讲并不适合，Git仓库其实是禁止被用作图床的，关于Gitee历史上也不止一次发生过图片无法访问的情况。</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img lazyload placeholder\" src=\"/images/giteeforbiddenjpgbed.png\" class=\"lazyload placeholder\" data-srcset=\"/images/giteeforbiddenjpgbed.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" style=\"width:80%;\"/></div></div>\n\n<p>Q：我不想买云服务器，可以将网站部署到自己的闲置电脑上吗？<br>A：你可以在网络上搜索这个话题，了解实现这个需求的难度，从而决定要选择何种方式。本文只介绍使用云服务器搭建网站的方法。</p>\n<p>以下介绍博主使用的云服务器。<br>在建站初期，网站基本没有访客，因此无需考虑太多。博主最开始决定使用恒创ECS云服务器，因为有7天免费试用，可以顺带了解一下1核2G的配置是否够用。<br>后来考虑到域名是在阿里云买的，所以也买了一个月的阿里云轻量应用服务器，它的价格比ECS服务器便宜一些，但是对配置并不满意，因此还是选择了恒创的ECS云服务器。<br>在试用恒创的服务器时发现2G的内存超出了实际需求，因此在购买时决定只买1G内存套餐即可。<br>恒创的ECS云服务器算是很便宜的了，博主选择了最低配置，CentOS 7系统，1核1G带宽2M，大约300元&#x2F;年。而且恒创的香港，美国，日本服务器无需备案，很方便。<br>博主建议选择linux系统，不要选择Windows系统，使用linux建站更节省软硬件资源，很适合建站，而Windows系统很臃肿，以至于在1G内存的云服务器上无法运行，2G内存才勉勉强强。因此Windows服务器起步配置要比linux的高，起步价也更高。<br>博主选择的是CentOS 7.1系统。</p>\n<p>Q：云服务器的带宽如何选择？家庭网络都已经100M起步了，云服务器2M带宽是不是太低了？<br>A：对于新手站长，博主建议可以选择2M作为入门选择，如果你的网站没有视频或者大量下载资源，那么完全可以支撑早期的网站建设。博主实测2M带宽的服务器加载一篇博客（1k文字+多张100kb图片）只需要1-2秒，如果是mp4视频，那么压缩到10MB&#x2F;分钟的体积，是可以流畅播放的。</p>\n","site":{"data":{}},"more":"<p>网页中会展示一些大体积的资源，比如音频视频等多媒体文件，还有一些可被公开下载的文件。<br>你可能听过图床，图床就是将博客的图片存储到云盘里，比如七牛云，图床为图片生成外链，博客仓库中无需携带图片，只要通过链接访问就可以了。<br>如果你只是想要一个图床，并且你的网站有ICP备案，那么直接使用七牛云的服务就可以了，专业的图床还有防盗链，CDN等实用技术加持，真的是一个不错的选择。</p>\n<p>Q：未备案的个人博客网站可以使用七牛云图床吗？<br>A：不可以。</p>\n<p>虽然使用Git仓库可以存储这些大文件（比如Gitee，Github，相关介绍链接<a href=\"https://zhuanlan.zhihu.com/p/581297109\">https://zhuanlan.zhihu.com/p/581297109</a><br>，但是Git的本意是代码管理，对于大体积文件来讲并不适合，Git仓库其实是禁止被用作图床的，关于Gitee历史上也不止一次发生过图片无法访问的情况。</p>\n<div class=\"img-wrap\"><div class=\"img-bg\"><img class=\"img\" src=\"/images/giteeforbiddenjpgbed.png\" style=\"width:80%;\"/></div></div>\n\n<p>Q：我不想买云服务器，可以将网站部署到自己的闲置电脑上吗？<br>A：你可以在网络上搜索这个话题，了解实现这个需求的难度，从而决定要选择何种方式。本文只介绍使用云服务器搭建网站的方法。</p>\n<p>以下介绍博主使用的云服务器。<br>在建站初期，网站基本没有访客，因此无需考虑太多。博主最开始决定使用恒创ECS云服务器，因为有7天免费试用，可以顺带了解一下1核2G的配置是否够用。<br>后来考虑到域名是在阿里云买的，所以也买了一个月的阿里云轻量应用服务器，它的价格比ECS服务器便宜一些，但是对配置并不满意，因此还是选择了恒创的ECS云服务器。<br>在试用恒创的服务器时发现2G的内存超出了实际需求，因此在购买时决定只买1G内存套餐即可。<br>恒创的ECS云服务器算是很便宜的了，博主选择了最低配置，CentOS 7系统，1核1G带宽2M，大约300元&#x2F;年。而且恒创的香港，美国，日本服务器无需备案，很方便。<br>博主建议选择linux系统，不要选择Windows系统，使用linux建站更节省软硬件资源，很适合建站，而Windows系统很臃肿，以至于在1G内存的云服务器上无法运行，2G内存才勉勉强强。因此Windows服务器起步配置要比linux的高，起步价也更高。<br>博主选择的是CentOS 7.1系统。</p>\n<p>Q：云服务器的带宽如何选择？家庭网络都已经100M起步了，云服务器2M带宽是不是太低了？<br>A：对于新手站长，博主建议可以选择2M作为入门选择，如果你的网站没有视频或者大量下载资源，那么完全可以支撑早期的网站建设。博主实测2M带宽的服务器加载一篇博客（1k文字+多张100kb图片）只需要1-2秒，如果是mp4视频，那么压缩到10MB&#x2F;分钟的体积，是可以流畅播放的。</p>\n"},{"title":"博客搭建教程8 - 在CentOS云服务器利用Nginx搭建Hexo博客","author":"epya15","tags":["博客"],"categories":["博客搭建"],"date":"2023-01-09T00:00:00.000Z","img":"https://img-blog.csdnimg.cn/img_convert/ce4a8a59fdfee8f3106a3a0851558c76.png","excerpt":"","_content":"关于图形界面：  \n有的云服务器将CentOS系统的图形界面阉割，如果想和Windows系统一样看到图形界面，需要额外进行安装。  \n但是要注意，虽然图形界面在交互上比命令行更加直观，但是会占用大约500MB的内存，这也就意味着，如果你购买的服务器内存小于500MB，一定是无法安装图形界面的。实际上，1G内存的服务器也不建议安装图形界面，在实测中，1G内存的服务器运行图形界面会非常卡，打开一个firefox浏览器有概率直接让服务器卡死。而2G及以上的服务器安装图形界面则是无压力的，实测在2G服务器上运行CentOS系统+GNOME桌面，内存占用在50%左右。  \n接下来的教程中都是以命令行的方式操作的，如果你可以接受命令行，那就尽量不要安装图形界面，毕竟它会占用一部分服务器的资源，影响到服务器的性能。  \n如果你实在希望使用图形界面的方式操作，可以按照如下教程安装。  \n在图形界面中打开【终端】也可以执行命令行，实测在1G内存情况下在图形界面执行【终端】是没有问题的。（但不要再开更多窗口了）  \nhttps://blog.csdn.net/weixin_45115705/article/details/100553983\n\nQ：找不到usr文件夹？\nA：可以试试点击桌面的【主文件夹】图表，或者找到桌面左上角的【应用程序/附件/文件】,在打开的资源管理器窗口找到【其他位置】选项，点击后找到【计算机】，再点击即可看到盘根的全部文件夹，usr就在其中。\n在服务器端或许由于缺少播放视频的插件而无法预览视频，但这本就不是服务器的职责，我们只要确保该文件被平安地放到指定的目录，并且可以被外部网络访问到即可。\n接下来我们要做的工作就是将该视频部署到某一个网络地址，生成可以被访问的外链。\n\n在linux安装nginx，可参考这篇文章，博主实测没有问题\nhttps://blog.csdn.net/t8116189520/article/details/81909574  \nQ：我是图形界面门徒，如何在CentOS图形界面系统上输入命令？\nA：在桌面左上角应用程序中找到【系统工具/终端】即可。请注意，通过此种方式运行终端，要注意自己是否拥有root权限，如果不是root用户，需要切到root用户，或者在命令前加sudo指令。否则，你在安装nginx过程中会频繁提示【您需要root权限执行此命令】,【permission denied】，【you need to be root to xxxx】等报错。\n\nQ：如何获取root权限？\nA：可以执行su root切到root用户，选择root作为用户名登录，即可获得root权限。如果是图形界面，你可以选择注销当前账号的登录，回到登录界面，然后选择以其他身份登入，以此切换到root账号。\n\nnginx安装完毕后，为了今后使用方便，将nginx配置到环境变量  \necho 'export PATH=/usr/local/nginx/sbin:$PATH' >> /etc/profile\n并使其生效  \nsource /etc/profile  \n接下来直接输入nginx -v,看看环境变量有没有配置成功\n\n按照该命令安装nginx后，nginx所在的目录为usr/local/nginx，该文件夹内的nginx-1.13.7.tar.gz是安装包文件，可以删除了\n删除的命令是：sudo rm -rf nginx-1.13.7.tar.gz\n\n配置nginx过程中可能涉及到使用命令行修改文件内容,以下博客介绍的比较好，建议参考  \nhttps://blog.csdn.net/qq_51515673/article/details/124390606  \n\n配置完nginx后还需要开启防火墙，并且确保自己设置nginx网站端口是开放的，可参考如下文章  \nhttps://blog.csdn.net/szw906689771/article/details/121647887\n下面的文章介绍了查看端口是否开启的方法：  \nhttps://www.muzhuangnet.com/show/78535.html\n比如你要开启8089端口，那么就是下面这句话：  \nfirewall-cmd --query-port=8089/tcp  \n如果返回的是no，则说明端口还没有打开  \n开启8089端口的命令：  \nfirewall-cmd --add-port=8089/tcp --permanent\n开启后需再次重启防火墙，才能生效  \nfirewall-cmd --reload\n然后再查询一次端口是否打开，如果是yes，就成功了。\nQ：我还是no，怎么办？\nA：你在使用云服务器吗？那可能还需要在服务器控制台的安全组中创建规则，在【入方向规则】中添加对应的端口\n\n开启nginx：nginx -c /usr/local/nginx/conf/nginx.conf  \n（nginx关闭命令：nginx -s stop）  \n（nginx重启命令：nginx -s reload）  \n如果服务器有安装GNOME图形界面，接下来可以打开服务器的firefox浏览器，在地址栏输入本机公网IP:端口号，看看有没有显示nginx的welcome界面，如果看到了，说明nginx服务启动成功。如果操作系统没有图形界面，可以通过curl命令访问页面。   \n然后在其它机器上访问http://服务器公网IP:端口号，看看能否出现nginx的welcome页面。  \n如果你是严格按照文档配置的nginx，那么现在，/usr/local/nginx/html是网站资源的根目录，所有的资源都必须在此目录下才可以被访问到  \nQ：可以更换目录吗？  \nA：可以，只需要修改/usr/local/nginx/conf/nginx.conf文件重新指定目录即可，可以在网上轻松搜到关于这个文件的修改方法。  \nnginx.conf这个文件有很多用处，在本教程的其它文章中，我们还会涉及到这个文件来实现防盗链功能。  \n接下来我们都以/usr/local/nginx/html作为资源根目录来举例。  \n现在做一个测试，我们要在nginx的文件夹下放置一个资源，然后尝试在其它设备上访问  \n首先在服务器的nginx/html目录下创建新文件夹Images\n找一台其它设备，比如一台windows电脑，使用scp指令拷贝一个图片到服务器，例如：（注意图片原路径和ip地址不能照抄）  \nscp myImage.jpg root@192.168.1.104:/usr/local/nginx/html/Images\n然后在这台windows电脑打开浏览器访问该图片，地址栏中依旧填写本机公网IP:端口号，与此同时在后面加上文件路径，例如192.168.1.104:8089/Images/myImage.jpg  \n浏览器显示出图片了吗？如果显示出了图片，那么恭喜，你已经完成了第一次网站资源更新。  \n\n注意：重启服务器时，nginx会重新回到关闭状态，防火墙也可能会关闭，需要留意。  开机后可能需要执行的操作：   \n重新开启防火墙：systemctl start firewalld\n重新启动nginx：nginx","source":"posts_backup/博客搭建教程8-接触Linux.md","raw":"title: 博客搭建教程8 - 在CentOS云服务器利用Nginx搭建Hexo博客\nauthor: epya15\ntags:\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 08:00:00\nimg: https://img-blog.csdnimg.cn/img_convert/ce4a8a59fdfee8f3106a3a0851558c76.png\nexcerpt: ''\n---\n关于图形界面：  \n有的云服务器将CentOS系统的图形界面阉割，如果想和Windows系统一样看到图形界面，需要额外进行安装。  \n但是要注意，虽然图形界面在交互上比命令行更加直观，但是会占用大约500MB的内存，这也就意味着，如果你购买的服务器内存小于500MB，一定是无法安装图形界面的。实际上，1G内存的服务器也不建议安装图形界面，在实测中，1G内存的服务器运行图形界面会非常卡，打开一个firefox浏览器有概率直接让服务器卡死。而2G及以上的服务器安装图形界面则是无压力的，实测在2G服务器上运行CentOS系统+GNOME桌面，内存占用在50%左右。  \n接下来的教程中都是以命令行的方式操作的，如果你可以接受命令行，那就尽量不要安装图形界面，毕竟它会占用一部分服务器的资源，影响到服务器的性能。  \n如果你实在希望使用图形界面的方式操作，可以按照如下教程安装。  \n在图形界面中打开【终端】也可以执行命令行，实测在1G内存情况下在图形界面执行【终端】是没有问题的。（但不要再开更多窗口了）  \nhttps://blog.csdn.net/weixin_45115705/article/details/100553983\n\nQ：找不到usr文件夹？\nA：可以试试点击桌面的【主文件夹】图表，或者找到桌面左上角的【应用程序/附件/文件】,在打开的资源管理器窗口找到【其他位置】选项，点击后找到【计算机】，再点击即可看到盘根的全部文件夹，usr就在其中。\n在服务器端或许由于缺少播放视频的插件而无法预览视频，但这本就不是服务器的职责，我们只要确保该文件被平安地放到指定的目录，并且可以被外部网络访问到即可。\n接下来我们要做的工作就是将该视频部署到某一个网络地址，生成可以被访问的外链。\n\n在linux安装nginx，可参考这篇文章，博主实测没有问题\nhttps://blog.csdn.net/t8116189520/article/details/81909574  \nQ：我是图形界面门徒，如何在CentOS图形界面系统上输入命令？\nA：在桌面左上角应用程序中找到【系统工具/终端】即可。请注意，通过此种方式运行终端，要注意自己是否拥有root权限，如果不是root用户，需要切到root用户，或者在命令前加sudo指令。否则，你在安装nginx过程中会频繁提示【您需要root权限执行此命令】,【permission denied】，【you need to be root to xxxx】等报错。\n\nQ：如何获取root权限？\nA：可以执行su root切到root用户，选择root作为用户名登录，即可获得root权限。如果是图形界面，你可以选择注销当前账号的登录，回到登录界面，然后选择以其他身份登入，以此切换到root账号。\n\nnginx安装完毕后，为了今后使用方便，将nginx配置到环境变量  \necho 'export PATH=/usr/local/nginx/sbin:$PATH' >> /etc/profile\n并使其生效  \nsource /etc/profile  \n接下来直接输入nginx -v,看看环境变量有没有配置成功\n\n按照该命令安装nginx后，nginx所在的目录为usr/local/nginx，该文件夹内的nginx-1.13.7.tar.gz是安装包文件，可以删除了\n删除的命令是：sudo rm -rf nginx-1.13.7.tar.gz\n\n配置nginx过程中可能涉及到使用命令行修改文件内容,以下博客介绍的比较好，建议参考  \nhttps://blog.csdn.net/qq_51515673/article/details/124390606  \n\n配置完nginx后还需要开启防火墙，并且确保自己设置nginx网站端口是开放的，可参考如下文章  \nhttps://blog.csdn.net/szw906689771/article/details/121647887\n下面的文章介绍了查看端口是否开启的方法：  \nhttps://www.muzhuangnet.com/show/78535.html\n比如你要开启8089端口，那么就是下面这句话：  \nfirewall-cmd --query-port=8089/tcp  \n如果返回的是no，则说明端口还没有打开  \n开启8089端口的命令：  \nfirewall-cmd --add-port=8089/tcp --permanent\n开启后需再次重启防火墙，才能生效  \nfirewall-cmd --reload\n然后再查询一次端口是否打开，如果是yes，就成功了。\nQ：我还是no，怎么办？\nA：你在使用云服务器吗？那可能还需要在服务器控制台的安全组中创建规则，在【入方向规则】中添加对应的端口\n\n开启nginx：nginx -c /usr/local/nginx/conf/nginx.conf  \n（nginx关闭命令：nginx -s stop）  \n（nginx重启命令：nginx -s reload）  \n如果服务器有安装GNOME图形界面，接下来可以打开服务器的firefox浏览器，在地址栏输入本机公网IP:端口号，看看有没有显示nginx的welcome界面，如果看到了，说明nginx服务启动成功。如果操作系统没有图形界面，可以通过curl命令访问页面。   \n然后在其它机器上访问http://服务器公网IP:端口号，看看能否出现nginx的welcome页面。  \n如果你是严格按照文档配置的nginx，那么现在，/usr/local/nginx/html是网站资源的根目录，所有的资源都必须在此目录下才可以被访问到  \nQ：可以更换目录吗？  \nA：可以，只需要修改/usr/local/nginx/conf/nginx.conf文件重新指定目录即可，可以在网上轻松搜到关于这个文件的修改方法。  \nnginx.conf这个文件有很多用处，在本教程的其它文章中，我们还会涉及到这个文件来实现防盗链功能。  \n接下来我们都以/usr/local/nginx/html作为资源根目录来举例。  \n现在做一个测试，我们要在nginx的文件夹下放置一个资源，然后尝试在其它设备上访问  \n首先在服务器的nginx/html目录下创建新文件夹Images\n找一台其它设备，比如一台windows电脑，使用scp指令拷贝一个图片到服务器，例如：（注意图片原路径和ip地址不能照抄）  \nscp myImage.jpg root@192.168.1.104:/usr/local/nginx/html/Images\n然后在这台windows电脑打开浏览器访问该图片，地址栏中依旧填写本机公网IP:端口号，与此同时在后面加上文件路径，例如192.168.1.104:8089/Images/myImage.jpg  \n浏览器显示出图片了吗？如果显示出了图片，那么恭喜，你已经完成了第一次网站资源更新。  \n\n注意：重启服务器时，nginx会重新回到关闭状态，防火墙也可能会关闭，需要留意。  开机后可能需要执行的操作：   \n重新开启防火墙：systemctl start firewalld\n重新启动nginx：nginx","updated":"2024-01-12T09:14:32.962Z","path":"posts_backup/博客搭建教程8-接触Linux.html","comments":1,"layout":"page","_id":"cls48emyb000ekwvq7ptkg50h","content":"<p>关于图形界面：<br>有的云服务器将CentOS系统的图形界面阉割，如果想和Windows系统一样看到图形界面，需要额外进行安装。<br>但是要注意，虽然图形界面在交互上比命令行更加直观，但是会占用大约500MB的内存，这也就意味着，如果你购买的服务器内存小于500MB，一定是无法安装图形界面的。实际上，1G内存的服务器也不建议安装图形界面，在实测中，1G内存的服务器运行图形界面会非常卡，打开一个firefox浏览器有概率直接让服务器卡死。而2G及以上的服务器安装图形界面则是无压力的，实测在2G服务器上运行CentOS系统+GNOME桌面，内存占用在50%左右。<br>接下来的教程中都是以命令行的方式操作的，如果你可以接受命令行，那就尽量不要安装图形界面，毕竟它会占用一部分服务器的资源，影响到服务器的性能。<br>如果你实在希望使用图形界面的方式操作，可以按照如下教程安装。<br>在图形界面中打开【终端】也可以执行命令行，实测在1G内存情况下在图形界面执行【终端】是没有问题的。（但不要再开更多窗口了）<br><a href=\"https://blog.csdn.net/weixin_45115705/article/details/100553983\">https://blog.csdn.net/weixin_45115705/article/details/100553983</a></p>\n<p>Q：找不到usr文件夹？<br>A：可以试试点击桌面的【主文件夹】图表，或者找到桌面左上角的【应用程序&#x2F;附件&#x2F;文件】,在打开的资源管理器窗口找到【其他位置】选项，点击后找到【计算机】，再点击即可看到盘根的全部文件夹，usr就在其中。<br>在服务器端或许由于缺少播放视频的插件而无法预览视频，但这本就不是服务器的职责，我们只要确保该文件被平安地放到指定的目录，并且可以被外部网络访问到即可。<br>接下来我们要做的工作就是将该视频部署到某一个网络地址，生成可以被访问的外链。</p>\n<p>在linux安装nginx，可参考这篇文章，博主实测没有问题<br><a href=\"https://blog.csdn.net/t8116189520/article/details/81909574\">https://blog.csdn.net/t8116189520/article/details/81909574</a><br>Q：我是图形界面门徒，如何在CentOS图形界面系统上输入命令？<br>A：在桌面左上角应用程序中找到【系统工具&#x2F;终端】即可。请注意，通过此种方式运行终端，要注意自己是否拥有root权限，如果不是root用户，需要切到root用户，或者在命令前加sudo指令。否则，你在安装nginx过程中会频繁提示【您需要root权限执行此命令】,【permission denied】，【you need to be root to xxxx】等报错。</p>\n<p>Q：如何获取root权限？<br>A：可以执行su root切到root用户，选择root作为用户名登录，即可获得root权限。如果是图形界面，你可以选择注销当前账号的登录，回到登录界面，然后选择以其他身份登入，以此切换到root账号。</p>\n<p>nginx安装完毕后，为了今后使用方便，将nginx配置到环境变量<br>echo ‘export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin:$PATH’ &gt;&gt; &#x2F;etc&#x2F;profile<br>并使其生效<br>source &#x2F;etc&#x2F;profile<br>接下来直接输入nginx -v,看看环境变量有没有配置成功</p>\n<p>按照该命令安装nginx后，nginx所在的目录为usr&#x2F;local&#x2F;nginx，该文件夹内的nginx-1.13.7.tar.gz是安装包文件，可以删除了<br>删除的命令是：sudo rm -rf nginx-1.13.7.tar.gz</p>\n<p>配置nginx过程中可能涉及到使用命令行修改文件内容,以下博客介绍的比较好，建议参考<br><a href=\"https://blog.csdn.net/qq_51515673/article/details/124390606\">https://blog.csdn.net/qq_51515673/article/details/124390606</a>  </p>\n<p>配置完nginx后还需要开启防火墙，并且确保自己设置nginx网站端口是开放的，可参考如下文章<br><a href=\"https://blog.csdn.net/szw906689771/article/details/121647887\">https://blog.csdn.net/szw906689771/article/details/121647887</a><br>下面的文章介绍了查看端口是否开启的方法：<br><a href=\"https://www.muzhuangnet.com/show/78535.html\">https://www.muzhuangnet.com/show/78535.html</a><br>比如你要开启8089端口，那么就是下面这句话：<br>firewall-cmd –query-port&#x3D;8089&#x2F;tcp<br>如果返回的是no，则说明端口还没有打开<br>开启8089端口的命令：<br>firewall-cmd –add-port&#x3D;8089&#x2F;tcp –permanent<br>开启后需再次重启防火墙，才能生效<br>firewall-cmd –reload<br>然后再查询一次端口是否打开，如果是yes，就成功了。<br>Q：我还是no，怎么办？<br>A：你在使用云服务器吗？那可能还需要在服务器控制台的安全组中创建规则，在【入方向规则】中添加对应的端口</p>\n<p>开启nginx：nginx -c &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf<br>（nginx关闭命令：nginx -s stop）<br>（nginx重启命令：nginx -s reload）<br>如果服务器有安装GNOME图形界面，接下来可以打开服务器的firefox浏览器，在地址栏输入本机公网IP:端口号，看看有没有显示nginx的welcome界面，如果看到了，说明nginx服务启动成功。如果操作系统没有图形界面，可以通过curl命令访问页面。<br>然后在其它机器上访问http:&#x2F;&#x2F;服务器公网IP:端口号，看看能否出现nginx的welcome页面。<br>如果你是严格按照文档配置的nginx，那么现在，&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html是网站资源的根目录，所有的资源都必须在此目录下才可以被访问到<br>Q：可以更换目录吗？<br>A：可以，只需要修改&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf文件重新指定目录即可，可以在网上轻松搜到关于这个文件的修改方法。<br>nginx.conf这个文件有很多用处，在本教程的其它文章中，我们还会涉及到这个文件来实现防盗链功能。<br>接下来我们都以&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html作为资源根目录来举例。<br>现在做一个测试，我们要在nginx的文件夹下放置一个资源，然后尝试在其它设备上访问<br>首先在服务器的nginx&#x2F;html目录下创建新文件夹Images<br>找一台其它设备，比如一台windows电脑，使用scp指令拷贝一个图片到服务器，例如：（注意图片原路径和ip地址不能照抄）<br>scp myImage.jpg <a href=\"mailto:&#114;&#x6f;&#111;&#116;&#64;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#49;&#46;&#x31;&#x30;&#52;\">&#114;&#x6f;&#111;&#116;&#64;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#49;&#46;&#x31;&#x30;&#52;</a>:&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html&#x2F;Images<br>然后在这台windows电脑打开浏览器访问该图片，地址栏中依旧填写本机公网IP:端口号，与此同时在后面加上文件路径，例如192.168.1.104:8089&#x2F;Images&#x2F;myImage.jpg<br>浏览器显示出图片了吗？如果显示出了图片，那么恭喜，你已经完成了第一次网站资源更新。  </p>\n<p>注意：重启服务器时，nginx会重新回到关闭状态，防火墙也可能会关闭，需要留意。  开机后可能需要执行的操作：<br>重新开启防火墙：systemctl start firewalld<br>重新启动nginx：nginx</p>\n","site":{"data":{}},"more":"<p>关于图形界面：<br>有的云服务器将CentOS系统的图形界面阉割，如果想和Windows系统一样看到图形界面，需要额外进行安装。<br>但是要注意，虽然图形界面在交互上比命令行更加直观，但是会占用大约500MB的内存，这也就意味着，如果你购买的服务器内存小于500MB，一定是无法安装图形界面的。实际上，1G内存的服务器也不建议安装图形界面，在实测中，1G内存的服务器运行图形界面会非常卡，打开一个firefox浏览器有概率直接让服务器卡死。而2G及以上的服务器安装图形界面则是无压力的，实测在2G服务器上运行CentOS系统+GNOME桌面，内存占用在50%左右。<br>接下来的教程中都是以命令行的方式操作的，如果你可以接受命令行，那就尽量不要安装图形界面，毕竟它会占用一部分服务器的资源，影响到服务器的性能。<br>如果你实在希望使用图形界面的方式操作，可以按照如下教程安装。<br>在图形界面中打开【终端】也可以执行命令行，实测在1G内存情况下在图形界面执行【终端】是没有问题的。（但不要再开更多窗口了）<br><a href=\"https://blog.csdn.net/weixin_45115705/article/details/100553983\">https://blog.csdn.net/weixin_45115705/article/details/100553983</a></p>\n<p>Q：找不到usr文件夹？<br>A：可以试试点击桌面的【主文件夹】图表，或者找到桌面左上角的【应用程序&#x2F;附件&#x2F;文件】,在打开的资源管理器窗口找到【其他位置】选项，点击后找到【计算机】，再点击即可看到盘根的全部文件夹，usr就在其中。<br>在服务器端或许由于缺少播放视频的插件而无法预览视频，但这本就不是服务器的职责，我们只要确保该文件被平安地放到指定的目录，并且可以被外部网络访问到即可。<br>接下来我们要做的工作就是将该视频部署到某一个网络地址，生成可以被访问的外链。</p>\n<p>在linux安装nginx，可参考这篇文章，博主实测没有问题<br><a href=\"https://blog.csdn.net/t8116189520/article/details/81909574\">https://blog.csdn.net/t8116189520/article/details/81909574</a><br>Q：我是图形界面门徒，如何在CentOS图形界面系统上输入命令？<br>A：在桌面左上角应用程序中找到【系统工具&#x2F;终端】即可。请注意，通过此种方式运行终端，要注意自己是否拥有root权限，如果不是root用户，需要切到root用户，或者在命令前加sudo指令。否则，你在安装nginx过程中会频繁提示【您需要root权限执行此命令】,【permission denied】，【you need to be root to xxxx】等报错。</p>\n<p>Q：如何获取root权限？<br>A：可以执行su root切到root用户，选择root作为用户名登录，即可获得root权限。如果是图形界面，你可以选择注销当前账号的登录，回到登录界面，然后选择以其他身份登入，以此切换到root账号。</p>\n<p>nginx安装完毕后，为了今后使用方便，将nginx配置到环境变量<br>echo ‘export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin:$PATH’ &gt;&gt; &#x2F;etc&#x2F;profile<br>并使其生效<br>source &#x2F;etc&#x2F;profile<br>接下来直接输入nginx -v,看看环境变量有没有配置成功</p>\n<p>按照该命令安装nginx后，nginx所在的目录为usr&#x2F;local&#x2F;nginx，该文件夹内的nginx-1.13.7.tar.gz是安装包文件，可以删除了<br>删除的命令是：sudo rm -rf nginx-1.13.7.tar.gz</p>\n<p>配置nginx过程中可能涉及到使用命令行修改文件内容,以下博客介绍的比较好，建议参考<br><a href=\"https://blog.csdn.net/qq_51515673/article/details/124390606\">https://blog.csdn.net/qq_51515673/article/details/124390606</a>  </p>\n<p>配置完nginx后还需要开启防火墙，并且确保自己设置nginx网站端口是开放的，可参考如下文章<br><a href=\"https://blog.csdn.net/szw906689771/article/details/121647887\">https://blog.csdn.net/szw906689771/article/details/121647887</a><br>下面的文章介绍了查看端口是否开启的方法：<br><a href=\"https://www.muzhuangnet.com/show/78535.html\">https://www.muzhuangnet.com/show/78535.html</a><br>比如你要开启8089端口，那么就是下面这句话：<br>firewall-cmd –query-port&#x3D;8089&#x2F;tcp<br>如果返回的是no，则说明端口还没有打开<br>开启8089端口的命令：<br>firewall-cmd –add-port&#x3D;8089&#x2F;tcp –permanent<br>开启后需再次重启防火墙，才能生效<br>firewall-cmd –reload<br>然后再查询一次端口是否打开，如果是yes，就成功了。<br>Q：我还是no，怎么办？<br>A：你在使用云服务器吗？那可能还需要在服务器控制台的安全组中创建规则，在【入方向规则】中添加对应的端口</p>\n<p>开启nginx：nginx -c &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf<br>（nginx关闭命令：nginx -s stop）<br>（nginx重启命令：nginx -s reload）<br>如果服务器有安装GNOME图形界面，接下来可以打开服务器的firefox浏览器，在地址栏输入本机公网IP:端口号，看看有没有显示nginx的welcome界面，如果看到了，说明nginx服务启动成功。如果操作系统没有图形界面，可以通过curl命令访问页面。<br>然后在其它机器上访问http:&#x2F;&#x2F;服务器公网IP:端口号，看看能否出现nginx的welcome页面。<br>如果你是严格按照文档配置的nginx，那么现在，&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html是网站资源的根目录，所有的资源都必须在此目录下才可以被访问到<br>Q：可以更换目录吗？<br>A：可以，只需要修改&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf文件重新指定目录即可，可以在网上轻松搜到关于这个文件的修改方法。<br>nginx.conf这个文件有很多用处，在本教程的其它文章中，我们还会涉及到这个文件来实现防盗链功能。<br>接下来我们都以&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html作为资源根目录来举例。<br>现在做一个测试，我们要在nginx的文件夹下放置一个资源，然后尝试在其它设备上访问<br>首先在服务器的nginx&#x2F;html目录下创建新文件夹Images<br>找一台其它设备，比如一台windows电脑，使用scp指令拷贝一个图片到服务器，例如：（注意图片原路径和ip地址不能照抄）<br>scp myImage.jpg <a href=\"mailto:&#114;&#x6f;&#111;&#116;&#64;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#49;&#46;&#x31;&#x30;&#52;\">&#114;&#x6f;&#111;&#116;&#64;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#49;&#46;&#x31;&#x30;&#52;</a>:&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html&#x2F;Images<br>然后在这台windows电脑打开浏览器访问该图片，地址栏中依旧填写本机公网IP:端口号，与此同时在后面加上文件路径，例如192.168.1.104:8089&#x2F;Images&#x2F;myImage.jpg<br>浏览器显示出图片了吗？如果显示出了图片，那么恭喜，你已经完成了第一次网站资源更新。  </p>\n<p>注意：重启服务器时，nginx会重新回到关闭状态，防火墙也可能会关闭，需要留意。  开机后可能需要执行的操作：<br>重新开启防火墙：systemctl start firewalld<br>重新启动nginx：nginx</p>\n"},{"_content":".post-detail-header {\n    background-image: none!important;\n    background-color: transparent!important;\n    \n}\n.post-detail-header-mask {\n    background: transparent!important;\n}\n#appBgSwiper {\n    filter: brightness(0.8);\n    background: rgba(0, 0, 0, .3)!important;\n}","source":"custom/index.css","raw":".post-detail-header {\n    background-image: none!important;\n    background-color: transparent!important;\n    \n}\n.post-detail-header-mask {\n    background: transparent!important;\n}\n#appBgSwiper {\n    filter: brightness(0.8);\n    background: rgba(0, 0, 0, .3)!important;\n}","date":"2024-02-04T09:09:43.999Z","updated":"2024-02-04T09:09:43.999Z","path":"custom/index.css","layout":"false","title":"","comments":1,"_id":"cls7adsm10000dwvq9l1h6kh9","content":".post-detail-header {\n    background-image: none!important;\n    background-color: transparent!important;\n    \n}\n.post-detail-header-mask {\n    background: transparent!important;\n}\n#appBgSwiper {\n    filter: brightness(0.8);\n    background: rgba(0, 0, 0, .3)!important;\n}","site":{"data":{}},"excerpt":"","more":".post-detail-header {\n    background-image: none!important;\n    background-color: transparent!important;\n    \n}\n.post-detail-header-mask {\n    background: transparent!important;\n}\n#appBgSwiper {\n    filter: brightness(0.8);\n    background: rgba(0, 0, 0, .3)!important;\n}"}],"Post":[{"title":"vlog 旅拍系列 vol.1 无锡","onlyTitle":true,"copyright":false,"img":"/images/vlogcover_vol1.jpg","date":"2023-02-07T17:00:00.000Z","_content":">本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  \n\n>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。\n{% video /images/vlog_wuxi.mp4 %}    \n\n* * *\n这里是无锡，太湖明珠 江南盛地。  \n视频中的航拍点位是无锡著名的南长街，南长街是无锡的一条老街，位于无锡市南长区中心地段。  \n南长街内的清名桥历史文化街区，是大运河畔典型的江南水乡，被誉为\"江南水弄堂，运河绝版地\"。  \n其余取景自无锡蠡园，蠡园地处风光秀美的蠡湖之滨，当代大文豪郭沫若咏有佳句：“欲识蠡园趣，崖头问少年”。  \n最值得纪念的是，拍摄当天的气温高达40摄氏度。","source":"_drafts/vlog 旅拍系列 vol.1 无锡.md","raw":"title: vlog 旅拍系列 vol.1 无锡\nonlyTitle: true\ncopyright: false\nimg: /images/vlogcover_vol1.jpg\ntags:\n  - 视频\n  - 无锡\ncategories:\n  - 旅拍vlog\ndate: 2023-02-08 01:00:00\n---\n>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  \n\n>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。\n{% video /images/vlog_wuxi.mp4 %}    \n\n* * *\n这里是无锡，太湖明珠 江南盛地。  \n视频中的航拍点位是无锡著名的南长街，南长街是无锡的一条老街，位于无锡市南长区中心地段。  \n南长街内的清名桥历史文化街区，是大运河畔典型的江南水乡，被誉为\"江南水弄堂，运河绝版地\"。  \n其余取景自无锡蠡园，蠡园地处风光秀美的蠡湖之滨，当代大文豪郭沫若咏有佳句：“欲识蠡园趣，崖头问少年”。  \n最值得纪念的是，拍摄当天的气温高达40摄氏度。","slug":"vlog 旅拍系列 vol.1 无锡","published":0,"updated":"2024-01-12T09:14:33.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrafu6hv000108vqh7ckcy87","content":"<blockquote>\n<p>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  </p>\n</blockquote>\n<blockquote>\n<p>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。</p>\n</blockquote>\n<div class=\"video\"><video controls preload><source src='/images/vlog_wuxi.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>    \n\n<hr>\n<p>这里是无锡，太湖明珠 江南盛地。<br>视频中的航拍点位是无锡著名的南长街，南长街是无锡的一条老街，位于无锡市南长区中心地段。<br>南长街内的清名桥历史文化街区，是大运河畔典型的江南水乡，被誉为”江南水弄堂，运河绝版地”。<br>其余取景自无锡蠡园，蠡园地处风光秀美的蠡湖之滨，当代大文豪郭沫若咏有佳句：“欲识蠡园趣，崖头问少年”。<br>最值得纪念的是，拍摄当天的气温高达40摄氏度。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  </p>\n</blockquote>\n<blockquote>\n<p>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。</p>\n</blockquote>\n<div class=\"video\"><video controls preload><source src='/images/vlog_wuxi.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>    \n\n<hr>\n<p>这里是无锡，太湖明珠 江南盛地。<br>视频中的航拍点位是无锡著名的南长街，南长街是无锡的一条老街，位于无锡市南长区中心地段。<br>南长街内的清名桥历史文化街区，是大运河畔典型的江南水乡，被誉为”江南水弄堂，运河绝版地”。<br>其余取景自无锡蠡园，蠡园地处风光秀美的蠡湖之滨，当代大文豪郭沫若咏有佳句：“欲识蠡园趣，崖头问少年”。<br>最值得纪念的是，拍摄当天的气温高达40摄氏度。</p>\n"},{"title":"贡献一批无版权视频（1）","author":"cypunberk.admin","_content":"","source":"_drafts/贡献一批无版权视频（1）.md","raw":"---\ntitle: 贡献一批无版权视频（1）\nauthor: cypunberk.admin\ntags:\n---\n","slug":"贡献一批无版权视频（1）","published":0,"date":"2024-01-12T08:40:49.740Z","updated":"2024-01-12T09:14:33.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrafu6hx000308vq84eo3x4f","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"vlog 旅拍系列 vol.2 杭州西湖","onlyTitle":true,"copyright":false,"img":"/images/vlogcover_vol2.jpg","date":"2023-02-07T18:00:00.000Z","_content":">本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  \n\n>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。\n{% video /images/vlog_hangzhouxh.mp4 %}    \n\n* * *\n取景自杭州西湖，介绍略。","source":"_drafts/vlog 旅拍系列 vol.2 杭州西湖.md","raw":"title: vlog 旅拍系列 vol.2 杭州西湖\nonlyTitle: true\ncopyright: false\nimg: /images/vlogcover_vol2.jpg\ntags:\n  - 视频\n  - 杭州\ncategories:\n  - 旅拍vlog\ndate: 2023-02-08 02:00:00\n---\n>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  \n\n>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。\n{% video /images/vlog_hangzhouxh.mp4 %}    \n\n* * *\n取景自杭州西湖，介绍略。","slug":"vlog 旅拍系列 vol.2 杭州西湖","published":0,"updated":"2024-01-12T09:14:33.160Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrafu6hz000708vq6kje5r72","content":"<blockquote>\n<p>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  </p>\n</blockquote>\n<blockquote>\n<p>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。</p>\n</blockquote>\n<div class=\"video\"><video controls preload><source src='/images/vlog_hangzhouxh.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>    \n\n<hr>\n<p>取景自杭州西湖，介绍略。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>本站所有vlog视频均非出自商业目的，部分视频配乐未经授权，禁止转载至站外。  </p>\n</blockquote>\n<blockquote>\n<p>由于服务器带宽有限且无CDN加速支持，视频资源加载可能较慢，若遇卡顿可缓冲一段时间再播放。</p>\n</blockquote>\n<div class=\"video\"><video controls preload><source src='/images/vlog_hangzhouxh.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>    \n\n<hr>\n<p>取景自杭州西湖，介绍略。</p>\n"},{"title":"Android与Unity交互之AndroidJavaProxy回调的使用","author":"cypunberk.admin","date":"2023-04-20T06:46:00.000Z","_content":"以实际需求为例，比如要实现一个Android原生的Dialog弹窗，通过Unity调用使其打开，同时注册弹窗上【确定】和【返回】键的点击回调。  \n首先创建一个C#类，继承自AndroidJavaProxy  \n注意构造函数内的参数，后续会在java端创建一个与之同名的接口\n```C#\npublic class DialogClickCallback : AndroidJavaProxy\n    {\n        public Action OnConfirmClick;\n\t\tpublic Action OnCancelClick;\n\n        public DialogClickCallback() : base(\"com.aaa.bbb.listener.ICustomDialogCallback\"){ }\n        \n        //invoked by java\n        public void onConfirm()\n        {\n\t\t\tOnConfirmClick?.Invoke();\t\n        }\n\t\t\n\t\t//invoked by java\n        public void onCancel()\n        {\n\t\t\tOnCancelClick?.Invoke();\t\n        }\n    }\n```\n  \n接下来在Android工程内新建java接口\n```java\npackage com.aaa.bbb.listener;\n\npublic interface ICustomDialogCallback {\n    void onConfirm();\n    void onCancel();\n}\n```\n\n然后在java端实现一个简单的窗口类\n\n```java\npublic class CustomDialog extends Dialog{\n\n    private Button ok;//确定按钮\n    private Button cancel;//取消按钮\n    private TextView titleTV;//消息标题文本\n    private TextView message;//消息提示文本\n    private String titleStr;//从外界设置的title文本\n    private String messageStr;//从外界设置的消息文本\n    //确定文本和取消文本的显示的内容\n    private String yesStr, noStr;\n    private ICustomDialogCallback callback;\n\n    private boolean cancelBtnVisible = true;            //cancel按钮是否显示\n    private boolean autoCloseOnAnyClick = true;        //是否在点击confirm或cancel按钮一次后自动关闭该窗口\n    public CustomDialog(@NonNull Context context) {\n        super(context);\n    }\n\n    public CustomDialog(@NonNull Context context, int themeResId) {\n        super(context, themeResId);\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.custom_dialog);\n        this.setCanceledOnTouchOutside(false);\n        ok = findViewById(R.id.btn_confirm);\n        cancel = findViewById(R.id.btn_cancel);\n        titleTV = findViewById(R.id.tv_dialog_title);\n        message = findViewById(R.id.tv_dialog_body);\n\n        //初始化界面数据\n        initData();\n        //初始化界面控件的事件\n        initEvent();\n    }\n    /**\n     * 初始化界面控件的显示数据\n     */\n    private void initData() {\n        //如果用户自定了title和message\n        if (titleStr != null) {\n            titleTV.setText(titleStr);\n        }\n        if (messageStr != null) {\n            message.setText(messageStr);\n        }\n        //如果设置按钮文字\n        if (yesStr != null) {\n            ok.setText(yesStr);\n        }\n        if (noStr != null) {\n            cancel.setText(noStr);\n        }\n        if(cancelBtnVisible)\n        {\n            cancel.setVisibility(View.VISIBLE);\n        }else\n        {\n            cancel.setVisibility(View.GONE);\n        }\n    }\n\n    /**\n     * 初始化界面的确定和取消监听\n     */\n    private void initEvent() {\n        //设置确定按钮被点击后，向外界提供监听\n        ok.setOnClickListener(v -> {\n            if(autoCloseOnAnyClick)\n            { this.dismiss(); }\n            if (callback != null) {\n                callback.onConfirm();\n            }\n        });\n        //设置取消按钮被点击后，向外界提供监听\n        cancel.setOnClickListener(v -> {\n            if(autoCloseOnAnyClick)\n            { this.dismiss(); }\n            if (callback != null) {\n                callback.onCancel();\n            }\n        });\n    }\n\n    public void setTitle(String title) {\n        titleStr = title;\n    }\n\n    public void setMessage(String message) {\n        messageStr = message;\n    }\n\n    public void setConfirmStr(String str)\n    {\n        yesStr = str;\n    }\n\n    public void setCancelStr(String str)\n    {\n        noStr = str;\n    }\n\n    public void setAutoCloseOnAnyClick(boolean value)\n    {\n        autoCloseOnAnyClick = value;\n    }\n\n    public void setOnClickListener(ICustomDialogCallback callback)\n    {\n        this.callback = callback;\n    }\n\n    public void setCancelBtnVisible(boolean visible)\n    {\n        this.cancelBtnVisible = visible;\n    }\n\n    public void onBackPressed() {\n    }\n\n    public void show() {\n        super.show();\n        DisplayMetrics displayMetrics = this.getContext().getResources().getDisplayMetrics();\n        if (this.getContext().getResources().getConfiguration().orientation == 2) {\n            this.getWindow().setLayout(displayMetrics.widthPixels / 4 * 3, displayMetrics.heightPixels / 5 * 4);\n        } else {\n            this.getWindow().setLayout(displayMetrics.widthPixels / 5 * 4, displayMetrics.heightPixels / 6 * 2);\n        }\n    }\n}\n```\n\n为了方便C#端调用，可以将打开Dialog弹窗并设置参数的行为封装进一个接口，这样每次显示弹窗C#只需要进行一次java调用\n\n```java\npackage com.aaa.bbb;\n\npublic class MainInterface\n{\n    public static void ShowDialog(String title, String content, String confirmText, String cancelText, boolean autoCloseOnAnyClick, ICustomDialogCallback callback)\n    {\n        CustomDialog dialog = new CustomDialog(Utils.GetCurrentActivity());\n        dialog.setMessage(content);\n        dialog.setTitle(title);\n        dialog.setConfirmStr(confirmText);\n        dialog.setCancelStr(cancelText);\n        dialog.setAutoCloseOnAnyClick(autoCloseOnAnyClick);\n        dialog.setCancelBtnVisible(cancelText != null && !cancelText.isEmpty());\n        dialog.show();\n        dialog.setOnClickListener(callback);\n    }\n}\n\n```\n\n至此，java端的开发就完成了，接着让C#调用MainInterface.ShowDialog方法\n\n```C#\npublic void ShowDialog(string title, string content, string confirmText, string cancelText, bool autoCloseOnAnyClick, Action onConfirm, Action onCancel)\n        {\n            DialogClickCallback cb = new DialogClickCallback()\n            {\n                OnConfirmClick = () => onConfirm?.Invoke(),\n                OnCancelClick = () => onCancel?.Invoke(),\n            };\n            AndroidJavaClass mainInterface = new AndroidJavaClass(\"com.aaa.bbb.MainInterface\");\n            mainInterface.CallStatic(\"ShowDialog\", title, content, confirmText, cancelText, autoCloseOnAnyClick, cb);\n        }\n```\n\n全部完成。","source":"_posts/Android与Unity交互之AndroidJavaProxy回调的使用.md","raw":"title: Android与Unity交互之AndroidJavaProxy回调的使用\nauthor: cypunberk.admin\ntags:\n  - Unity\n  - Android\n  - sdk\ncategories:\n  - Android\n  - Unity\ndate: 2023-04-20 14:46:00\n---\n以实际需求为例，比如要实现一个Android原生的Dialog弹窗，通过Unity调用使其打开，同时注册弹窗上【确定】和【返回】键的点击回调。  \n首先创建一个C#类，继承自AndroidJavaProxy  \n注意构造函数内的参数，后续会在java端创建一个与之同名的接口\n```C#\npublic class DialogClickCallback : AndroidJavaProxy\n    {\n        public Action OnConfirmClick;\n\t\tpublic Action OnCancelClick;\n\n        public DialogClickCallback() : base(\"com.aaa.bbb.listener.ICustomDialogCallback\"){ }\n        \n        //invoked by java\n        public void onConfirm()\n        {\n\t\t\tOnConfirmClick?.Invoke();\t\n        }\n\t\t\n\t\t//invoked by java\n        public void onCancel()\n        {\n\t\t\tOnCancelClick?.Invoke();\t\n        }\n    }\n```\n  \n接下来在Android工程内新建java接口\n```java\npackage com.aaa.bbb.listener;\n\npublic interface ICustomDialogCallback {\n    void onConfirm();\n    void onCancel();\n}\n```\n\n然后在java端实现一个简单的窗口类\n\n```java\npublic class CustomDialog extends Dialog{\n\n    private Button ok;//确定按钮\n    private Button cancel;//取消按钮\n    private TextView titleTV;//消息标题文本\n    private TextView message;//消息提示文本\n    private String titleStr;//从外界设置的title文本\n    private String messageStr;//从外界设置的消息文本\n    //确定文本和取消文本的显示的内容\n    private String yesStr, noStr;\n    private ICustomDialogCallback callback;\n\n    private boolean cancelBtnVisible = true;            //cancel按钮是否显示\n    private boolean autoCloseOnAnyClick = true;        //是否在点击confirm或cancel按钮一次后自动关闭该窗口\n    public CustomDialog(@NonNull Context context) {\n        super(context);\n    }\n\n    public CustomDialog(@NonNull Context context, int themeResId) {\n        super(context, themeResId);\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.custom_dialog);\n        this.setCanceledOnTouchOutside(false);\n        ok = findViewById(R.id.btn_confirm);\n        cancel = findViewById(R.id.btn_cancel);\n        titleTV = findViewById(R.id.tv_dialog_title);\n        message = findViewById(R.id.tv_dialog_body);\n\n        //初始化界面数据\n        initData();\n        //初始化界面控件的事件\n        initEvent();\n    }\n    /**\n     * 初始化界面控件的显示数据\n     */\n    private void initData() {\n        //如果用户自定了title和message\n        if (titleStr != null) {\n            titleTV.setText(titleStr);\n        }\n        if (messageStr != null) {\n            message.setText(messageStr);\n        }\n        //如果设置按钮文字\n        if (yesStr != null) {\n            ok.setText(yesStr);\n        }\n        if (noStr != null) {\n            cancel.setText(noStr);\n        }\n        if(cancelBtnVisible)\n        {\n            cancel.setVisibility(View.VISIBLE);\n        }else\n        {\n            cancel.setVisibility(View.GONE);\n        }\n    }\n\n    /**\n     * 初始化界面的确定和取消监听\n     */\n    private void initEvent() {\n        //设置确定按钮被点击后，向外界提供监听\n        ok.setOnClickListener(v -> {\n            if(autoCloseOnAnyClick)\n            { this.dismiss(); }\n            if (callback != null) {\n                callback.onConfirm();\n            }\n        });\n        //设置取消按钮被点击后，向外界提供监听\n        cancel.setOnClickListener(v -> {\n            if(autoCloseOnAnyClick)\n            { this.dismiss(); }\n            if (callback != null) {\n                callback.onCancel();\n            }\n        });\n    }\n\n    public void setTitle(String title) {\n        titleStr = title;\n    }\n\n    public void setMessage(String message) {\n        messageStr = message;\n    }\n\n    public void setConfirmStr(String str)\n    {\n        yesStr = str;\n    }\n\n    public void setCancelStr(String str)\n    {\n        noStr = str;\n    }\n\n    public void setAutoCloseOnAnyClick(boolean value)\n    {\n        autoCloseOnAnyClick = value;\n    }\n\n    public void setOnClickListener(ICustomDialogCallback callback)\n    {\n        this.callback = callback;\n    }\n\n    public void setCancelBtnVisible(boolean visible)\n    {\n        this.cancelBtnVisible = visible;\n    }\n\n    public void onBackPressed() {\n    }\n\n    public void show() {\n        super.show();\n        DisplayMetrics displayMetrics = this.getContext().getResources().getDisplayMetrics();\n        if (this.getContext().getResources().getConfiguration().orientation == 2) {\n            this.getWindow().setLayout(displayMetrics.widthPixels / 4 * 3, displayMetrics.heightPixels / 5 * 4);\n        } else {\n            this.getWindow().setLayout(displayMetrics.widthPixels / 5 * 4, displayMetrics.heightPixels / 6 * 2);\n        }\n    }\n}\n```\n\n为了方便C#端调用，可以将打开Dialog弹窗并设置参数的行为封装进一个接口，这样每次显示弹窗C#只需要进行一次java调用\n\n```java\npackage com.aaa.bbb;\n\npublic class MainInterface\n{\n    public static void ShowDialog(String title, String content, String confirmText, String cancelText, boolean autoCloseOnAnyClick, ICustomDialogCallback callback)\n    {\n        CustomDialog dialog = new CustomDialog(Utils.GetCurrentActivity());\n        dialog.setMessage(content);\n        dialog.setTitle(title);\n        dialog.setConfirmStr(confirmText);\n        dialog.setCancelStr(cancelText);\n        dialog.setAutoCloseOnAnyClick(autoCloseOnAnyClick);\n        dialog.setCancelBtnVisible(cancelText != null && !cancelText.isEmpty());\n        dialog.show();\n        dialog.setOnClickListener(callback);\n    }\n}\n\n```\n\n至此，java端的开发就完成了，接着让C#调用MainInterface.ShowDialog方法\n\n```C#\npublic void ShowDialog(string title, string content, string confirmText, string cancelText, bool autoCloseOnAnyClick, Action onConfirm, Action onCancel)\n        {\n            DialogClickCallback cb = new DialogClickCallback()\n            {\n                OnConfirmClick = () => onConfirm?.Invoke(),\n                OnCancelClick = () => onCancel?.Invoke(),\n            };\n            AndroidJavaClass mainInterface = new AndroidJavaClass(\"com.aaa.bbb.MainInterface\");\n            mainInterface.CallStatic(\"ShowDialog\", title, content, confirmText, cancelText, autoCloseOnAnyClick, cb);\n        }\n```\n\n全部完成。","slug":"Android与Unity交互之AndroidJavaProxy回调的使用","published":1,"updated":"2024-01-12T09:14:33.017Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrafu6hz000908vq0uw9fcd2","content":"<p>以实际需求为例，比如要实现一个Android原生的Dialog弹窗，通过Unity调用使其打开，同时注册弹窗上【确定】和【返回】键的点击回调。<br>首先创建一个C#类，继承自AndroidJavaProxy<br>注意构造函数内的参数，后续会在java端创建一个与之同名的接口</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DialogClickCallback</span> : <span class=\"title\">AndroidJavaProxy</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> Action OnConfirmClick;</span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> Action OnCancelClick;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DialogClickCallback</span>() : <span class=\"title\">base</span>(<span class=\"params\"><span class=\"string\">&quot;com.aaa.bbb.listener.ICustomDialogCallback&quot;</span></span>)</span>&#123; &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//invoked by java</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onConfirm</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">\t\t\tOnConfirmClick?.Invoke();\t</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//invoked by java</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCancel</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">\t\t\tOnCancelClick?.Invoke();\t</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>接下来在Android工程内新建java接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.aaa.bbb.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">ICustomDialogCallback</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">onConfirm</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">onCancel</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后在java端实现一个简单的窗口类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomDialog</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Dialog</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Button ok;<span class=\"comment\">//确定按钮</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Button cancel;<span class=\"comment\">//取消按钮</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TextView titleTV;<span class=\"comment\">//消息标题文本</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TextView message;<span class=\"comment\">//消息提示文本</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String titleStr;<span class=\"comment\">//从外界设置的title文本</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String messageStr;<span class=\"comment\">//从外界设置的消息文本</span></span><br><span class=\"line\">    <span class=\"comment\">//确定文本和取消文本的显示的内容</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String yesStr, noStr;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ICustomDialogCallback callback;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"variable\">cancelBtnVisible</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;            <span class=\"comment\">//cancel按钮是否显示</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"variable\">autoCloseOnAnyClick</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;        <span class=\"comment\">//是否在点击confirm或cancel按钮一次后自动关闭该窗口</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CustomDialog</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> Context context)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CustomDialog</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> Context context, <span class=\"type\">int</span> themeResId)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(context, themeResId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.custom_dialog);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setCanceledOnTouchOutside(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        ok = findViewById(R.id.btn_confirm);</span><br><span class=\"line\">        cancel = findViewById(R.id.btn_cancel);</span><br><span class=\"line\">        titleTV = findViewById(R.id.tv_dialog_title);</span><br><span class=\"line\">        message = findViewById(R.id.tv_dialog_body);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//初始化界面数据</span></span><br><span class=\"line\">        initData();</span><br><span class=\"line\">        <span class=\"comment\">//初始化界面控件的事件</span></span><br><span class=\"line\">        initEvent();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化界面控件的显示数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initData</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果用户自定了title和message</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (titleStr != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            titleTV.setText(titleStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (messageStr != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            message.setText(messageStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果设置按钮文字</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (yesStr != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            ok.setText(yesStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (noStr != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            cancel.setText(noStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cancelBtnVisible)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cancel.setVisibility(View.VISIBLE);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cancel.setVisibility(View.GONE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化界面的确定和取消监听</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initEvent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//设置确定按钮被点击后，向外界提供监听</span></span><br><span class=\"line\">        ok.setOnClickListener(v -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(autoCloseOnAnyClick)</span><br><span class=\"line\">            &#123; <span class=\"built_in\">this</span>.dismiss(); &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (callback != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                callback.onConfirm();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//设置取消按钮被点击后，向外界提供监听</span></span><br><span class=\"line\">        cancel.setOnClickListener(v -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(autoCloseOnAnyClick)</span><br><span class=\"line\">            &#123; <span class=\"built_in\">this</span>.dismiss(); &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (callback != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                callback.onCancel();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setTitle</span><span class=\"params\">(String title)</span> &#123;</span><br><span class=\"line\">        titleStr = title;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMessage</span><span class=\"params\">(String message)</span> &#123;</span><br><span class=\"line\">        messageStr = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setConfirmStr</span><span class=\"params\">(String str)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        yesStr = str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCancelStr</span><span class=\"params\">(String str)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        noStr = str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAutoCloseOnAnyClick</span><span class=\"params\">(<span class=\"type\">boolean</span> value)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        autoCloseOnAnyClick = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setOnClickListener</span><span class=\"params\">(ICustomDialogCallback callback)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.callback = callback;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCancelBtnVisible</span><span class=\"params\">(<span class=\"type\">boolean</span> visible)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.cancelBtnVisible = visible;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onBackPressed</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.show();</span><br><span class=\"line\">        <span class=\"type\">DisplayMetrics</span> <span class=\"variable\">displayMetrics</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getContext().getResources().getDisplayMetrics();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.getContext().getResources().getConfiguration().orientation == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getWindow().setLayout(displayMetrics.widthPixels / <span class=\"number\">4</span> * <span class=\"number\">3</span>, displayMetrics.heightPixels / <span class=\"number\">5</span> * <span class=\"number\">4</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getWindow().setLayout(displayMetrics.widthPixels / <span class=\"number\">5</span> * <span class=\"number\">4</span>, displayMetrics.heightPixels / <span class=\"number\">6</span> * <span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>为了方便C#端调用，可以将打开Dialog弹窗并设置参数的行为封装进一个接口，这样每次显示弹窗C#只需要进行一次java调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.aaa.bbb;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainInterface</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">ShowDialog</span><span class=\"params\">(String title, String content, String confirmText, String cancelText, <span class=\"type\">boolean</span> autoCloseOnAnyClick, ICustomDialogCallback callback)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">CustomDialog</span> <span class=\"variable\">dialog</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CustomDialog</span>(Utils.GetCurrentActivity());</span><br><span class=\"line\">        dialog.setMessage(content);</span><br><span class=\"line\">        dialog.setTitle(title);</span><br><span class=\"line\">        dialog.setConfirmStr(confirmText);</span><br><span class=\"line\">        dialog.setCancelStr(cancelText);</span><br><span class=\"line\">        dialog.setAutoCloseOnAnyClick(autoCloseOnAnyClick);</span><br><span class=\"line\">        dialog.setCancelBtnVisible(cancelText != <span class=\"literal\">null</span> &amp;&amp; !cancelText.isEmpty());</span><br><span class=\"line\">        dialog.show();</span><br><span class=\"line\">        dialog.setOnClickListener(callback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>至此，java端的开发就完成了，接着让C#调用MainInterface.ShowDialog方法</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowDialog</span>(<span class=\"params\"><span class=\"built_in\">string</span> title, <span class=\"built_in\">string</span> content, <span class=\"built_in\">string</span> confirmText, <span class=\"built_in\">string</span> cancelText, <span class=\"built_in\">bool</span> autoCloseOnAnyClick, Action onConfirm, Action onCancel</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            DialogClickCallback cb = <span class=\"keyword\">new</span> DialogClickCallback()</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnConfirmClick = () =&gt; onConfirm?.Invoke(),</span><br><span class=\"line\">                OnCancelClick = () =&gt; onCancel?.Invoke(),</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            AndroidJavaClass mainInterface = <span class=\"keyword\">new</span> AndroidJavaClass(<span class=\"string\">&quot;com.aaa.bbb.MainInterface&quot;</span>);</span><br><span class=\"line\">            mainInterface.CallStatic(<span class=\"string\">&quot;ShowDialog&quot;</span>, title, content, confirmText, cancelText, autoCloseOnAnyClick, cb);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>全部完成。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>以实际需求为例，比如要实现一个Android原生的Dialog弹窗，通过Unity调用使其打开，同时注册弹窗上【确定】和【返回】键的点击回调。<br>首先创建一个C#类，继承自AndroidJavaProxy<br>注意构造函数内的参数，后续会在java端创建一个与之同名的接口</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DialogClickCallback</span> : <span class=\"title\">AndroidJavaProxy</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> Action OnConfirmClick;</span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> Action OnCancelClick;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DialogClickCallback</span>() : <span class=\"title\">base</span>(<span class=\"params\"><span class=\"string\">&quot;com.aaa.bbb.listener.ICustomDialogCallback&quot;</span></span>)</span>&#123; &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//invoked by java</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onConfirm</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">\t\t\tOnConfirmClick?.Invoke();\t</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//invoked by java</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCancel</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">\t\t\tOnCancelClick?.Invoke();\t</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>接下来在Android工程内新建java接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.aaa.bbb.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">ICustomDialogCallback</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">onConfirm</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">onCancel</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后在java端实现一个简单的窗口类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomDialog</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Dialog</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Button ok;<span class=\"comment\">//确定按钮</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Button cancel;<span class=\"comment\">//取消按钮</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TextView titleTV;<span class=\"comment\">//消息标题文本</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TextView message;<span class=\"comment\">//消息提示文本</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String titleStr;<span class=\"comment\">//从外界设置的title文本</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String messageStr;<span class=\"comment\">//从外界设置的消息文本</span></span><br><span class=\"line\">    <span class=\"comment\">//确定文本和取消文本的显示的内容</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String yesStr, noStr;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ICustomDialogCallback callback;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"variable\">cancelBtnVisible</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;            <span class=\"comment\">//cancel按钮是否显示</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"variable\">autoCloseOnAnyClick</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;        <span class=\"comment\">//是否在点击confirm或cancel按钮一次后自动关闭该窗口</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CustomDialog</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> Context context)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">CustomDialog</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> Context context, <span class=\"type\">int</span> themeResId)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(context, themeResId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.custom_dialog);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setCanceledOnTouchOutside(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        ok = findViewById(R.id.btn_confirm);</span><br><span class=\"line\">        cancel = findViewById(R.id.btn_cancel);</span><br><span class=\"line\">        titleTV = findViewById(R.id.tv_dialog_title);</span><br><span class=\"line\">        message = findViewById(R.id.tv_dialog_body);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//初始化界面数据</span></span><br><span class=\"line\">        initData();</span><br><span class=\"line\">        <span class=\"comment\">//初始化界面控件的事件</span></span><br><span class=\"line\">        initEvent();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化界面控件的显示数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initData</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果用户自定了title和message</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (titleStr != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            titleTV.setText(titleStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (messageStr != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            message.setText(messageStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果设置按钮文字</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (yesStr != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            ok.setText(yesStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (noStr != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            cancel.setText(noStr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cancelBtnVisible)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cancel.setVisibility(View.VISIBLE);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cancel.setVisibility(View.GONE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化界面的确定和取消监听</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initEvent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//设置确定按钮被点击后，向外界提供监听</span></span><br><span class=\"line\">        ok.setOnClickListener(v -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(autoCloseOnAnyClick)</span><br><span class=\"line\">            &#123; <span class=\"built_in\">this</span>.dismiss(); &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (callback != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                callback.onConfirm();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//设置取消按钮被点击后，向外界提供监听</span></span><br><span class=\"line\">        cancel.setOnClickListener(v -&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(autoCloseOnAnyClick)</span><br><span class=\"line\">            &#123; <span class=\"built_in\">this</span>.dismiss(); &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (callback != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                callback.onCancel();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setTitle</span><span class=\"params\">(String title)</span> &#123;</span><br><span class=\"line\">        titleStr = title;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMessage</span><span class=\"params\">(String message)</span> &#123;</span><br><span class=\"line\">        messageStr = message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setConfirmStr</span><span class=\"params\">(String str)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        yesStr = str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCancelStr</span><span class=\"params\">(String str)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        noStr = str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAutoCloseOnAnyClick</span><span class=\"params\">(<span class=\"type\">boolean</span> value)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        autoCloseOnAnyClick = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setOnClickListener</span><span class=\"params\">(ICustomDialogCallback callback)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.callback = callback;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCancelBtnVisible</span><span class=\"params\">(<span class=\"type\">boolean</span> visible)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.cancelBtnVisible = visible;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onBackPressed</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.show();</span><br><span class=\"line\">        <span class=\"type\">DisplayMetrics</span> <span class=\"variable\">displayMetrics</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getContext().getResources().getDisplayMetrics();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.getContext().getResources().getConfiguration().orientation == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getWindow().setLayout(displayMetrics.widthPixels / <span class=\"number\">4</span> * <span class=\"number\">3</span>, displayMetrics.heightPixels / <span class=\"number\">5</span> * <span class=\"number\">4</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.getWindow().setLayout(displayMetrics.widthPixels / <span class=\"number\">5</span> * <span class=\"number\">4</span>, displayMetrics.heightPixels / <span class=\"number\">6</span> * <span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>为了方便C#端调用，可以将打开Dialog弹窗并设置参数的行为封装进一个接口，这样每次显示弹窗C#只需要进行一次java调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.aaa.bbb;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainInterface</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">ShowDialog</span><span class=\"params\">(String title, String content, String confirmText, String cancelText, <span class=\"type\">boolean</span> autoCloseOnAnyClick, ICustomDialogCallback callback)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">CustomDialog</span> <span class=\"variable\">dialog</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CustomDialog</span>(Utils.GetCurrentActivity());</span><br><span class=\"line\">        dialog.setMessage(content);</span><br><span class=\"line\">        dialog.setTitle(title);</span><br><span class=\"line\">        dialog.setConfirmStr(confirmText);</span><br><span class=\"line\">        dialog.setCancelStr(cancelText);</span><br><span class=\"line\">        dialog.setAutoCloseOnAnyClick(autoCloseOnAnyClick);</span><br><span class=\"line\">        dialog.setCancelBtnVisible(cancelText != <span class=\"literal\">null</span> &amp;&amp; !cancelText.isEmpty());</span><br><span class=\"line\">        dialog.show();</span><br><span class=\"line\">        dialog.setOnClickListener(callback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>至此，java端的开发就完成了，接着让C#调用MainInterface.ShowDialog方法</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowDialog</span>(<span class=\"params\"><span class=\"built_in\">string</span> title, <span class=\"built_in\">string</span> content, <span class=\"built_in\">string</span> confirmText, <span class=\"built_in\">string</span> cancelText, <span class=\"built_in\">bool</span> autoCloseOnAnyClick, Action onConfirm, Action onCancel</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            DialogClickCallback cb = <span class=\"keyword\">new</span> DialogClickCallback()</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnConfirmClick = () =&gt; onConfirm?.Invoke(),</span><br><span class=\"line\">                OnCancelClick = () =&gt; onCancel?.Invoke(),</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            AndroidJavaClass mainInterface = <span class=\"keyword\">new</span> AndroidJavaClass(<span class=\"string\">&quot;com.aaa.bbb.MainInterface&quot;</span>);</span><br><span class=\"line\">            mainInterface.CallStatic(<span class=\"string\">&quot;ShowDialog&quot;</span>, title, content, confirmText, cancelText, autoCloseOnAnyClick, cb);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>全部完成。</p>\n"},{"title":"Unity 与 iOS 工程桥接介绍","author":"epya15","date":"2024-01-09T07:15:34.000Z","img":"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039294a193.jpg","excerpt":"Unity与iOS。","_content":"\n### Unity 侧\n\n#### ipa 包体构建流程\n\n1. 在 Mac 上启动 Unity，在 Unity 的 BuildSettings 界面选择 iOS 平台，点击 Build 按钮后即开始导出 XCode 工程。或调用 Unity 命令行工具完成此步操作。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514334.png)\n\n导出后的 Xcode 工程结构如下图\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514088.png)\n\n2.双击 Unity-iPhone.xcodeproj，打开 Xcode，在 Xcode 顶部栏点击 Product/Archive 开始构建档案。或调用 Xcode 命令行工具完成此步操作。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514353.png)\n\n3.在 Xcode 顶部栏点击 Window/Organizer 进行分发，根据出包需求选择不同的证书导出对应 ipa 安装包文件。或调用 Xcode 命令行工具完成此步操作。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514124.png)\n\n最终导出的 ipa 文件和日志文件如下图\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514818.png)\n\n总结：对于使用 Unity 开发的游戏，每次打包都相当于重新产生一个 Xcode 工程。当游戏的美术资源，代码文件，配置文件发生变更后，通常需要重新导出一份新的 Xcode 工程。\n\n#### Unity 工程目录结构简介\n\n不同游戏的 Unity 目录结构不同，其中 Unity 对一些目录做了特殊定义，此类文件夹不能更名，否则 Unity 会识别不到。\n\n以下列举了一个 Unity 游戏工程的大概目录结构（加粗的为 Unity 特殊定义的目录名）\n\n**Assets**\n\n**Library**  //Unity 针对 Assets 下的文件生成的适合自身读写的中间文件\n\n**Packages**  //存放 Unity Package Manager 扩展包文件\n\n**ProjectSettings**  //存放 Unity 项目设置文件\n\n**Temp**  //存放临时文件，随 Unity 进程关闭被清空\n\n#### 创建桥接文件\n\n1.在 **Assets/Plugins/iOS** 目录下创建以下文件（文件名称随意）\n\n2.编辑 MyAppController.h（属于各 Unity 项目的通用做法，网上有很多示例）\n\n注意点：\n\n（1）必须继承自 UnityAppController\n\n```cpp\n//\n//  MyAppController.h\n//  Unity-iPhone\n//\n\n#ifndef MyAppController_h\n#define MyAppController_h\n#import \"UnityAppController.h\"\n\n@interface MyAppController : UnityAppController\n- (NSString*)BOOLToNSString:(BOOL)val;\n@end\n\n#endif /* MyAppController_h */\n```\n\n3.编辑 MyAppController.mm（也属于各 Unity 项目的通用做法，网上有很多示例）\n\n注意点：\n\n（1）最后一行必须写 IMPL_APP_CONTROLLER_SUBCLASS，这是 Unity 提供的宏。Unity 通过这个宏知道要使用我们定制的 MyAppController 而不是使用默认的 UnityAppController。\n\n（2）新建的函数必须在对应的头文件里提前声明\n\n```cpp\n//\n//  MyAppController.mm\n//  Unity-iPhone\n//\n\n#import <Foundation/Foundation.h>\n#import <UIKit/UIKit.h>\n#import \"MyAppController.h\"\n#import \"UnityAppController.h\"\n#import <SDK/SDK.h>\n#import \"UnityInterface.h\"\n\n@implementation MyAppController\n\n//注册app生命周期函数，调用对应的sdk代码\n//例如重载程序启动成功之后自动调用的方法\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(paySuc:) name:kPaySuccNotification object:nil];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(payFail:) name:kPayErrorNotification object:nil];\n    return [[SDK instance] application:application didFinishLaunchingWithOptions:launchOptions];\n}\n\n//也可以写自己开发的代码，BOOL转NSString*，函数需要提前在MyAppController.h声明\n- (NSString*) BOOLToNSString:(BOOL)val\n{\n    if(val == true)\n    { return @\"true\"; }\n    return @\"false\";\n}\n\n- (void)paySuc:(NSNotification *)notify\n{\n    if(logToggle)\n    { NSLog(@\"paySuc:%@\", notify.object); }\n    NSString *str =  [notify.object description];\n    char* arg0 = (char*)[[NSString stringWithFormat:@\"paySuc#%@\", str] cStringUsingEncoding:NSUTF8StringEncoding];\n    UnitySendMessage(\"IosMessageReceiver\", \"Call\", arg0);\n}\n\n- (void)payFail:(NSNotification *)notify\n{\n    if(logToggle)\n    { NSLog(@\"payFail:%@\",notify.object); }\n    NSString *str =  [notify.object description];\n    char* arg0 = (char*)[[NSString stringWithFormat:@\"payFail#%@\", str] cStringUsingEncoding:NSUTF8StringEncoding];\n    UnitySendMessage(\"IosMessageReceiver\", \"Call\", arg0);\n}\n\n@end\n\nIMPL_APP_CONTROLLER_SUBCLASS(MyAppController);//*以MyAppController为启动项\n```\n\n4.编辑 NativeCallProxy.h\n\n```cpp\n//\n//  NativeCallProxy.h\n//  Unity-iPhone\n//\n\n#ifndef NativeCallProxy_h\n#define NativeCallProxy_h\n\n#import <Foundation/Foundation.h>\n#import \"NativeCallProxy.h\"\n@protocol NativeCallsProtocol\n\n@required\n\n@end\n\n__attribute__ ((visibility(\"default\")))\n\n@interface FrameworkLibAPI : NSObject\n// call it any time after UnityFrameworkLoad to set object implementing NativeCallsProtocol methods\n+(void) registerAPIforNativeCalls:(id<NativeCallsProtocol>) aApi;\n\nextern BOOL logToggle;\n\n@end\n\n@interface NativeCallProxy : NSObject\n\n@end\n\n#endif /* NativeCallProxy_h */\n```\n\n5.编辑 NativeCallProxy.mm\n\n注意点：\n\n(1)被 C#调用的代码必须用 extern \"C\"包围\n\n```cpp\n//\n//  NativeCallProxy.m\n//  Unity-iPhone\n//\n\n#import <Foundation/Foundation.h>\n#import \"NativeCallProxy.h\"\n#import \"MyAppController.h\"\n\n@implementation FrameworkLibAPI\n\nid<NativeCallsProtocol> api = NULL;\n+(void) registerAPIforNativeCalls:(id<NativeCallsProtocol>) aApi\n{\n    api = aApi;\n}\n\nBOOL logToggle = true;         //全局变量：日志开关\n\n@end\n\nextern \"C\" {\n\nchar* invokeMethod(const char *method, const char *arg0);\nchar* makeStringCopy(const char* string);\nchar* pay(const char* data);\nchar* toggleLog(const char *data);\n}\n\nchar* invokeMethod(const char *method, const char *arg0){\n    \n    NSString *methodStr = [NSString stringWithUTF8String:method];\n    NSString *arg0Str = [NSString stringWithUTF8String:arg0];\n    char* returnChar = (char*)malloc(1024 * sizeof(char));\n    strncpy(returnChar, \"\", 1024);\n    if(strcmp(method, \"pay\") == 0)\n    {\n        return pay(arg0);\n    }\n    else if(strcmp(method, \"toggleLog\") == 0)\n    {\n        return toggleLog(arg0);\n    }\n    return (char*)[[NSString stringWithFormat:@\"[invokeMethod] method missing:%@\", methodStr] cStringUsingEncoding:NSUTF8StringEncoding];\n}\n\nchar* toggleLog(const char *data)\n{\n    NSString *string = [NSString stringWithUTF8String:data];\n    logToggle = [string isEqualToString:@\"1\"];\n}\n\nchar* pay(const char *data)\n{\n    NSString *string = [NSString stringWithUTF8String:data];\n    NSArray *array = [string componentsSeparatedByString:@\",\"];\n    PayParams *params = [PayParams new];\n    params.roleID = [array objectAtIndex:0];\n    params.orderID = [array objectAtIndex:1];\n    params.price = @([[array objectAtIndex:2] floatValue]);\n    \n    [[SDK instance] pay:params];\n    \n    if(logToggle)\n    {\n        NSLog(@\"invoke pay interface success. roleId = %@, orderID = %@, price = %@\", params.roleID, params.orderID, params.price);\n    }\n    return makeStringCopy(\"\");\n}\n\nchar* makeStringCopy(const char* string)\n{\n    if(string == NULL)\n        return NULL;\n    char* res = (char*)malloc(strlen(string)+1);\n    strcpy(res, string);\n    return res;\n}\n\n@implementation NativeCallProxy\n\n@end\n```\n\n6.在 Assets/Scripts 目录下创建以下文件（文件名称随意）\n\nSdkBridge_iOS.cs  //调用 C 代码的 C#文件\n\nIosMessageReceiver.cs  //接收 iOS 代码发送的消息\n\n7.编辑 SdkBridge_iOS.cs\n\n注意点：\n\n（1）invokeMethod 必须用 UNITY_IOS 宏包围，并且与 NativeCallProxy.mm 内的 invokeMethod 完全同名，参数一致（C#的 string 对应 C 的 char*）\n\n（2）invokeMethod 必须加 extern 关键字，并且加[DllImport(\"__Internal\")]特性标签\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing UnityEngine;\n#if UNITY_IOS\nusing System.Runtime.InteropServices;\n#endif\n\npublic class SdkBridge_iOS\n    {\n#if UNITY_IOS\n        [DllImport(\"__Internal\")] private static extern string invokeMethod(string method, string arg0);\n#endif\n        public void Init()\n        {\n            GameObject go = new GameObject(\"IosMessageReceiver\");\n            go.AddComponent<IosMessageReceiver>();\n            IosMessageReceiver.Event_paySuc += IosMessageReceiver_Event_paySuc;\n            IosMessageReceiver.Event_payFail += IosMessageReceiver_Event_payFail;\n        }\n\n        private static string InvokeMethod(string method, string arg0)\n        {\n#if UNITY_IOS\n            Debug.LogFormat(\"ready invoke method: {0}, arg0: {1}\", method, arg0);\n            string returnVal = invokeMethod(method, arg0);\n            Debug.LogFormat(\"got return value: {0}\", returnVal);\n            return returnVal;\n#else\n            return string.Empty;\n#endif\n        }\n\n        public void Pay(float price, string orderId, string roleId)\n        {\n            StringBuilder sb = new StringBuilder();\n            sb.Append(roleId).Append(',');\n            sb.Append(orderId).Append(',');\n            sb.Append(price);\n            string arg0 = sb.ToString();\n            Debug.LogFormat(\"pay. arg0 = {0}\", arg0); \n            InvokeMethod(\"pay\", arg0);\n        }\n\n        private void IosMessageReceiver_Event_payFail(string obj)\n        {\n            Debug.LogFormat(\"Received payFail. arg = {0}\", obj);\n            //向游戏内发送支付失败消息\n        }\n\n        private void IosMessageReceiver_Event_paySuc(string obj)\n        {\n            Debug.LogFormat(\"Received paySuc. arg = {0}\", obj);\n            //向游戏内发送支付成功消息\n        }\n\n    }\n```\n\n8.编辑 IosMessageReceiver.cs\n\n注意点：\n\n（1）Call 方法名必须与 MyAppController.mm 的 Call 函数名一致，参数也必须一致。\n\n（2）IosMessageReceiver.cs 被实例化至 Unity 的场景中的哪个 GameObject 节点下，就要把这个 GameObject 的全路径填到 MyAppController.mm 的 UnitySendMessage 函数的第一个参数内。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System.Reflection;\nusing System;\n\npublic class IosMessageReceiver : MonoBehaviour\n    {\n        public static event Action<string> Event_paySuc;\n        public static event Action<string> Event_payFail;\n\n        //invoked by C\n        public void Call(string arg0)\n        {\n            Debug.LogFormat(\"[IosMessageReceiver] received arg0:{0}\", arg0);\n            if (string.IsNullOrEmpty(arg0))\n            {\n                Debug.LogError(\"[IosMessageReceiver] arg0 is empty.\");\n                return;\n            }\n            string[] args = arg0.Split('#');\n            string method = args[0];\n            object[] parameters = new object[args.Length - 1];\n            if (args.Length > 1)\n            {\n                for (int i = 1; i < args.Length; i++)\n                {\n                    parameters[i - 1] = args[i];\n                }\n            }\n            MethodInfo methodInfo = this.GetType().GetMethod(method, BindingFlags.Instance | BindingFlags.NonPublic);\n            try\n            {\n                if (parameters.Length == 0)\n                {\n                    methodInfo.Invoke(this, null);\n                }\n                else\n                {\n                    methodInfo.Invoke(this, parameters);\n                }\n            }\n            catch (TargetInvocationException e)\n            {\n                Debug.LogErrorFormat(\"[IosMessageReceiver] {0}\", e.Message);\n            }\n        }\n\n        private void paySuc(string arg0)\n        {\n            Event_paySuc?.Invoke(arg0);\n        }\n\n        private void payFail(string arg0)\n        {\n            Event_payFail?.Invoke(arg0);\n        }\n\n    }\n```\n\n总结：\n\n（1）每次 Unity 导出 Xcode 工程后 UnityAppController 都会被复位成模版自动生成的代码，Unity 通过 IMPL_APP_CONTROLLER_SUBCLASS 帮我们解决了想要扩展 UnityAppController 代码的需求。\n\n（2）在 C#侧使用 string invokeMethod(string arg0)可以完成大部分情况下的 C#到 C 的通信，在 C 侧使用 UnitySendMessage 可以实现 C 到 C#的通信。\n\n#### 在 Unity 设置 Xcode 工程参数\n\n可直接在 Unity 编辑器内设置一部分 Xcodeproj 参数，剩下的部分只能通过代码设置。\n\n1. Unity 的 ProjectSettings 可以设置项目层面的参数。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515516.png)\n\n1. 在 Unity 内选中*.framework 文件，可以设置依赖的其它 framework。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515023.png)\n\n1. 选中*.mm 文件，可以填写编译选项\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515486.png)\n\n以上是能通过 Unity 编辑器直接设置的部分，接下来是使用代码挂接 Unity 的打包后处理钩子函数实现更多参数注入。\n\n在 Assets/Scripts/Editor 文件夹下创建 XcodeBuildPostprocess.cs（名字随意）\n\n下面的代码示例了如何使用 UnityAPI 对 Xcode 工程进行修改。\n\n注意点：\n\n（1）方法必须声明为 static 类型，且添加 PostProcessBuildAttribute 特性。Unity 会在打 Xcode 工程的尾声阶段（Xcode 工程已被完整导出）调用所有带该特性标签的方法。\n\n（2）该代码文件必须放在 Editor 文件夹下，或者其路径中必须包含 Editor，例如 Assets/Scripts/Editor。\n\n```csharp\nusing UnityEngine;\nusing UnityEditor;\nusing System.IO;\nusing System;\n\n#if UNITY_IOS\nusing UnityEditor.iOS.Xcode;\nusing UnityEditor.Callbacks;\n#endif\n\npublic class XcodeBuildPostprocess\n    {\n#if UNITY_IOS\n        [PostProcessBuildAttribute(100)]\n        public static void OnPostprocessBuild(BuildTarget buildTarget, string pathToBuiltProject)\n        {\n            // BuildTarget需为iOS\n            if (buildTarget != BuildTarget.iOS)\n                return;\n            //pathToBuiltProject示例  /Users/user/Documents/build\n            Debug.Log(\"XcodeBuildPostprocess:OnPostprocessBuild start, pathToBuiltProject = \" + pathToBuiltProject);\n            // 初始化\n            var projectPath = pathToBuiltProject + \"/Unity-iPhone.xcodeproj/project.pbxproj\";\n            PBXProject pbxProject = new PBXProject();\n            pbxProject.ReadFromFile(projectPath);\n            string projectGuid = pbxProject.ProjectGuid();\n            string unityIphoneGuid = pbxProject.GetUnityMainTargetGuid();\n            string unityFrameworkGuid = pbxProject.GetUnityFrameworkTargetGuid();\n\n            // 添加flag\n            pbxProject.AddBuildProperty(unityFrameworkGuid, \"OTHER_LDFLAGS\", \"-ObjC\");\n            // 关闭Bitcode\n            pbxProject.SetBuildProperty(unityFrameworkGuid, \"ENABLE_BITCODE\", \"NO\");\n            pbxProject.SetBuildProperty(projectGuid, \"ENABLE_BITCODE\", \"NO\");\n\n            //设置app名\n            pbxProject.SetBuildProperty(projectGuid, \"PRODUCT_NAME_APP\", \"mygame\");\n\n            //编译去除arm-v7\n            // pbxProject.SetBuildProperty(projectGuid, \"VALID_ARCHS\", \"arm64\");\n            // pbxProject.SetBuildProperty(projectGuid, \"VALID_ARCHS\", \"arm64e\");\n\n            //设置DEBUG_INFORMATION_FORMAT\n            //pbxProject.SetBuildProperty(projectGuid, \"DEBUG_INFORMATION_FORMAT\", \"dwarf\");\n            //打开Enable Objective-C Exceptions\n            pbxProject.SetBuildProperty(projectGuid, \"GCC_ENABLE_OBJC_EXCEPTIONS\", \"YES\");\n\n            //添加lib       \n            AddLibToProject(pbxProject, unityFrameworkGuid, \"libc++.tbd\");\n            AddLibToProject(pbxProject, unityFrameworkGuid, \"libz.tbd\");\n            AddLibToProject(pbxProject, unityFrameworkGuid, \"libresolv.tbd\");\n            AddLibToProject(pbxProject, unityFrameworkGuid, \"libsqlite3.tbd\");\n\n            //将.bundle从UnityFramework的Copy Bundle Resources转移到Unity-iPhone的Copy Bundle Resources下\n            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, \"whateverSdk.bundle\", \"assets/jackSdk.bundle\");\n            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, \"TencentOpenApi_IOS_Bundle.bundle\", \"UMSocial/SocialLibraries/QQ/QQSDK/TencentOpenApi_IOS_Bundle.bundle\");\n            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, \"WeiboSDK.bundle\", \"UMSocial/SocialLibraries/Sina/SinaSDK/WeiboSDK.bundle\");\n            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, \"UMSocialSDKResources.bundle\", \"UMSocial/UMSocialUI/UMSocialSDKResources.bundle\");\n\n            //转移plist文件到Xcode工程\n            AddFileToProject(pbxProject, unityIphoneGuid, \"Frameworks/Plugins/iOS/whatever_data_list.plist\", Application.dataPath + \"/Plugins/iOS/whatever_data_list.plist\");\n\n            // 应用修改\n            File.WriteAllText(projectPath, pbxProject.WriteToString());\n\n            // 修改Info.plist文件\n            var plistPath = Path.Combine(pathToBuiltProject, \"Info.plist\");\n            var plist = new PlistDocument();\n            plist.ReadFromFile(plistPath);\n\n            //plist植入sdk参数\n            plist.root.SetString(\"SDK_AppID\", \"FFHkfDiesj3-sn2n79khf\");\n            plist.root.SetString(\"SDK_AppKEY\", \"kDkctwv8FzkSFc63fvf-sSFhbM47Oas0dQfZf\");\n            PlistElementArray plistArray = plist.root.CreateArray(\"LSApplicationQueriesSchemes\");\n            plistArray.AddString(\"wechat\");\n            plistArray.AddString(\"mqq\");\n            plistArray.AddString(\"weibosdk\");\n\n            //设置Info的URL Types （分享外链）\n            PlistElementArray urlTypes = plist.root.CreateArray(\"CFBundleURLTypes\");\n\n            PlistElementDict url1 = urlTypes.AddDict();\n            url1.SetString(\"CFBundleTypeRole\", \"Editor\");\n            PlistElementArray urlSchemes1 = url1.CreateArray(\"CFBundleURLSchemes\");\n            urlSchemes1.AddString(\"tencent12345678\");\n\n            PlistElementDict url2 = urlTypes.AddDict();\n            url2.SetString(\"CFBundleTypeRole\", \"Editor\");\n            PlistElementArray urlSchemes2 = url2.CreateArray(\"CFBundleURLSchemes\");\n            urlSchemes2.AddString(\"QQ99999\");\n\n            //如果plist文件里没有下面的字段，则打开下面代码，若有则注释掉，无需重复添加\n            //var dict = plist.root.CreateDict(\"App Transport Security Settings\");\n            //dict.SetBoolean(\"Allow Arbitrary Loads\", true);\n\n            plist.root.SetString(\"NSUserTrackingUsageDescription\", \"此APP需要您同意才能使用数据收集功能，收集数据的作用是以便我们对您提供更好的游戏体验\");\n            plist.root.SetString(\"NSPhotoLibraryUsageDescription\", \"此App需要您的同意才能访问相册\");\n            plist.root.SetString(\"NSPhotoLibraryAddUsageDescription\", \"此App需要您的同意才能保存截屏图片\");\n\n            //设置app在应用商店显示的语言\n            plist.root.SetString(\"CFBundleDevelopmentRegion\", \"zh_CN\");\n            PlistElementArray plistArray_bundleLocalization = plist.root.CreateArray(\"CFBundleLocalizations\");\n            plistArray_bundleLocalization.AddString(\"zh_CN\");\n\n            //添加Cpability\n            ProjectCapabilityManager pcm = new ProjectCapabilityManager(projectPath, \"Unity-iPhone.entitlements\", \"Unity-iPhone\");\n            pcm.AddAssociatedDomains(new string[] { \"applinks:mygame.links.com\" });\n            pcm.AddPushNotifications(false);\n            pcm.WriteToFile();\n\n            // 应用修改\n            plist.WriteToFile(plistPath);\n\n        }\n\n        //添加lib方法\n        static void AddLibToProject(PBXProject inst, string targetGuid, string lib)\n        {\n            string fileGuid = inst.AddFile(\"usr/lib/\" + lib, \"Frameworks/\" + lib, PBXSourceTree.Sdk);\n            inst.AddFileToBuild(targetGuid, fileGuid);\n        }\n\n        static void AddLocalFrameworkToProject(PBXProject inst, string targetGuid, string fileName, string filePath)\n        {\n            string fileGuid = inst.AddFile(filePath, \"Frameworks/\" + fileName, PBXSourceTree.Source);\n            inst.AddFileToBuild(targetGuid, fileGuid);\n        }\n\n        static void AddFileToProject(PBXProject inst, string targetGuid, string filePathInXcodeProj, string filePathInUnityproj)\n        {\n            string fileGuid = inst.AddFile(filePathInUnityproj, filePathInXcodeProj, PBXSourceTree.Source);\n            inst.AddFileToBuild(targetGuid, fileGuid);\n        }\n\n        static void AddBundleToProject(PBXProject inst, string targetGuid, string fileName, string filePath)\n        {\n            string fileGuid = inst.AddFile(filePath, fileName, PBXSourceTree.Source);\n            inst.AddFileToBuild(targetGuid, fileGuid);\n        }\n\n        static void RemoveBundleFromProject(PBXProject inst, string targetGuid, string fileProjectPath)\n        {\n            string fileGuid = inst.FindFileGuidByProjectPath(fileProjectPath);\n            if (fileGuid == null)\n            {\n                Debug.LogErrorFormat(\"RemoveBundleFromProject failed. fileProjectPath: {0}\", fileProjectPath);\n            }\n            else\n            {\n                inst.RemoveFileFromBuild(targetGuid, fileGuid);\n            }\n        }\n\n        static void MoveBundleTo(PBXProject pbxProject, string fromTargetGuid, string toTargrtGuid, string bundleName, string bundlePathRelativeIOS)\n        {\n            string path_aofeibundle = Application.dataPath + \"/Plugins/iOS/\" + bundlePathRelativeIOS;\n            Debug.LogFormat(\"XcodeBuildPostprocess:OnPostprocessBuild bundleName = {0}, bundlePathInUnity = {1}\", bundleName, path_aofeibundle);\n\n            AddBundleToProject(pbxProject, toTargrtGuid, bundleName, path_aofeibundle);\n            RemoveBundleFromProject(pbxProject, fromTargetGuid, \"Frameworks/Plugins/iOS/\" + bundlePathRelativeIOS);\n        }\n#endif\n    }\n```\n\n### Xcode 侧\n\n在打 ipa 包的流程中，Xcode 侧无需进行任何 plist，xcodeproj，工程资源文件/代码的修改。\n\n一般在接入 sdk 的过程中，我们仍会使用 Xcode 进行调试，例如在接入某 sdk 时，要求在 plist 中添加参数，那么可以先用 Unity 导出一个 Xcode 工程，在此 Xcode 工程上进行 plist 修改，再打真机包调试，无需重复从 Unity 重新导出工程。\n\n需要注意的是，在 Xcode 调试期间作出的任何 plist 改动，必须转化为 XcodeBuildPostprocess 的代码。在 Xcode 调试期间新增或修改的任何代码，也要拷贝回 Unity 的工程目录下。\n\n### 总结\n\n从本文可以看出，ipa 包体构建的绝大部分的配置操作都是在 Unity 侧实现的，这也就降低了不熟悉 iOS 开发的 Unity 游戏开发人员打 ipa 包的难度。虽然接入一些特殊功能的 sdk 无可避免地要写 native 端的代码，但通常 sdk 方会提供完整的接入代码甚至工程示例。为了方便管理，将 native 端的代码放在 Unity 工程内利于整体维护和项目组成员 review。在 Xcode 侧进行构建和分发只需要少量的点击操作，这个过程越简单，越方便以命令的形式集成至 CI/CD 流水线。\n\n例如按照本文介绍的方法接入 sdk，从 Unity 构建 Xcode 工程，再到 Xcode 打出 ipa 包只需要依次执行以下命令：\n\n1. Unity 打 Xcode 工程\n\n/Applications/Unity/Unity.app/Contents/MacOS/Unity  -batchmode -quit -nographics -executeMethod ProjectBuild.ExportXcodeProject\n\n1. 归档\n\nxcodebuild archive -archivePath /Users/user/build/mygame -project /Users/user/Documents/build/Unity-iPhone.xcodeproj -scheme Unity-iPhone\n\n1. 分发 adhoc\n\nxcodebuild -exportArchive -archivePath /Users/user/build/mygame.xcarchive -exportPath /Users/user/build -exportOptionsPlist /Users/user/User/ExportOptions_adhoc.plist\n\n1. 分发 dis\n\nxcodebuild -exportArchive -archivePath /Users/user/build/mygame.xcarchive -exportPath /Users/user/build -exportOptionsPlist /Users/user/User/ExportOptions_appstore.plist\n\n1. 清理 Xcode 工程\n\nxcodebuild clean -project /Users/user/Documents/build/Unity-iPhone.xcodeproj -scheme Unity-iPhone\n\n受项目复杂度和计算机性能影响，从 Unity 构建一个 ipa 包花费的时间有很大不同。例如一个普通的中型手游项目 + 高性能打包机，完整的出包时间会在 1 小时左右，其中 Unity 的游戏资源打包花费 30 分钟左右，导出 Xcode 工程花费 10 分钟左右，从 Xcode 构建出最终 ipa 包花费 10 分钟左右，杂项（进程启动，git 操作，日志归档，发送报告...）花费 10 分钟左右。\n","source":"_posts/Unity 与 iOS 工程桥接介绍.md","raw":"title: Unity 与 iOS 工程桥接介绍\nauthor: epya15\ntags:\n\n  - 博客\ncategories:\n  - sdk\ndate: 2024-01-09 15:15:34\nimg: https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039294a193.jpg\nexcerpt: 'Unity与iOS。'\n---\n\n### Unity 侧\n\n#### ipa 包体构建流程\n\n1. 在 Mac 上启动 Unity，在 Unity 的 BuildSettings 界面选择 iOS 平台，点击 Build 按钮后即开始导出 XCode 工程。或调用 Unity 命令行工具完成此步操作。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514334.png)\n\n导出后的 Xcode 工程结构如下图\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514088.png)\n\n2.双击 Unity-iPhone.xcodeproj，打开 Xcode，在 Xcode 顶部栏点击 Product/Archive 开始构建档案。或调用 Xcode 命令行工具完成此步操作。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514353.png)\n\n3.在 Xcode 顶部栏点击 Window/Organizer 进行分发，根据出包需求选择不同的证书导出对应 ipa 安装包文件。或调用 Xcode 命令行工具完成此步操作。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514124.png)\n\n最终导出的 ipa 文件和日志文件如下图\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514818.png)\n\n总结：对于使用 Unity 开发的游戏，每次打包都相当于重新产生一个 Xcode 工程。当游戏的美术资源，代码文件，配置文件发生变更后，通常需要重新导出一份新的 Xcode 工程。\n\n#### Unity 工程目录结构简介\n\n不同游戏的 Unity 目录结构不同，其中 Unity 对一些目录做了特殊定义，此类文件夹不能更名，否则 Unity 会识别不到。\n\n以下列举了一个 Unity 游戏工程的大概目录结构（加粗的为 Unity 特殊定义的目录名）\n\n**Assets**\n\n**Library**  //Unity 针对 Assets 下的文件生成的适合自身读写的中间文件\n\n**Packages**  //存放 Unity Package Manager 扩展包文件\n\n**ProjectSettings**  //存放 Unity 项目设置文件\n\n**Temp**  //存放临时文件，随 Unity 进程关闭被清空\n\n#### 创建桥接文件\n\n1.在 **Assets/Plugins/iOS** 目录下创建以下文件（文件名称随意）\n\n2.编辑 MyAppController.h（属于各 Unity 项目的通用做法，网上有很多示例）\n\n注意点：\n\n（1）必须继承自 UnityAppController\n\n```cpp\n//\n//  MyAppController.h\n//  Unity-iPhone\n//\n\n#ifndef MyAppController_h\n#define MyAppController_h\n#import \"UnityAppController.h\"\n\n@interface MyAppController : UnityAppController\n- (NSString*)BOOLToNSString:(BOOL)val;\n@end\n\n#endif /* MyAppController_h */\n```\n\n3.编辑 MyAppController.mm（也属于各 Unity 项目的通用做法，网上有很多示例）\n\n注意点：\n\n（1）最后一行必须写 IMPL_APP_CONTROLLER_SUBCLASS，这是 Unity 提供的宏。Unity 通过这个宏知道要使用我们定制的 MyAppController 而不是使用默认的 UnityAppController。\n\n（2）新建的函数必须在对应的头文件里提前声明\n\n```cpp\n//\n//  MyAppController.mm\n//  Unity-iPhone\n//\n\n#import <Foundation/Foundation.h>\n#import <UIKit/UIKit.h>\n#import \"MyAppController.h\"\n#import \"UnityAppController.h\"\n#import <SDK/SDK.h>\n#import \"UnityInterface.h\"\n\n@implementation MyAppController\n\n//注册app生命周期函数，调用对应的sdk代码\n//例如重载程序启动成功之后自动调用的方法\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(paySuc:) name:kPaySuccNotification object:nil];\n    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(payFail:) name:kPayErrorNotification object:nil];\n    return [[SDK instance] application:application didFinishLaunchingWithOptions:launchOptions];\n}\n\n//也可以写自己开发的代码，BOOL转NSString*，函数需要提前在MyAppController.h声明\n- (NSString*) BOOLToNSString:(BOOL)val\n{\n    if(val == true)\n    { return @\"true\"; }\n    return @\"false\";\n}\n\n- (void)paySuc:(NSNotification *)notify\n{\n    if(logToggle)\n    { NSLog(@\"paySuc:%@\", notify.object); }\n    NSString *str =  [notify.object description];\n    char* arg0 = (char*)[[NSString stringWithFormat:@\"paySuc#%@\", str] cStringUsingEncoding:NSUTF8StringEncoding];\n    UnitySendMessage(\"IosMessageReceiver\", \"Call\", arg0);\n}\n\n- (void)payFail:(NSNotification *)notify\n{\n    if(logToggle)\n    { NSLog(@\"payFail:%@\",notify.object); }\n    NSString *str =  [notify.object description];\n    char* arg0 = (char*)[[NSString stringWithFormat:@\"payFail#%@\", str] cStringUsingEncoding:NSUTF8StringEncoding];\n    UnitySendMessage(\"IosMessageReceiver\", \"Call\", arg0);\n}\n\n@end\n\nIMPL_APP_CONTROLLER_SUBCLASS(MyAppController);//*以MyAppController为启动项\n```\n\n4.编辑 NativeCallProxy.h\n\n```cpp\n//\n//  NativeCallProxy.h\n//  Unity-iPhone\n//\n\n#ifndef NativeCallProxy_h\n#define NativeCallProxy_h\n\n#import <Foundation/Foundation.h>\n#import \"NativeCallProxy.h\"\n@protocol NativeCallsProtocol\n\n@required\n\n@end\n\n__attribute__ ((visibility(\"default\")))\n\n@interface FrameworkLibAPI : NSObject\n// call it any time after UnityFrameworkLoad to set object implementing NativeCallsProtocol methods\n+(void) registerAPIforNativeCalls:(id<NativeCallsProtocol>) aApi;\n\nextern BOOL logToggle;\n\n@end\n\n@interface NativeCallProxy : NSObject\n\n@end\n\n#endif /* NativeCallProxy_h */\n```\n\n5.编辑 NativeCallProxy.mm\n\n注意点：\n\n(1)被 C#调用的代码必须用 extern \"C\"包围\n\n```cpp\n//\n//  NativeCallProxy.m\n//  Unity-iPhone\n//\n\n#import <Foundation/Foundation.h>\n#import \"NativeCallProxy.h\"\n#import \"MyAppController.h\"\n\n@implementation FrameworkLibAPI\n\nid<NativeCallsProtocol> api = NULL;\n+(void) registerAPIforNativeCalls:(id<NativeCallsProtocol>) aApi\n{\n    api = aApi;\n}\n\nBOOL logToggle = true;         //全局变量：日志开关\n\n@end\n\nextern \"C\" {\n\nchar* invokeMethod(const char *method, const char *arg0);\nchar* makeStringCopy(const char* string);\nchar* pay(const char* data);\nchar* toggleLog(const char *data);\n}\n\nchar* invokeMethod(const char *method, const char *arg0){\n    \n    NSString *methodStr = [NSString stringWithUTF8String:method];\n    NSString *arg0Str = [NSString stringWithUTF8String:arg0];\n    char* returnChar = (char*)malloc(1024 * sizeof(char));\n    strncpy(returnChar, \"\", 1024);\n    if(strcmp(method, \"pay\") == 0)\n    {\n        return pay(arg0);\n    }\n    else if(strcmp(method, \"toggleLog\") == 0)\n    {\n        return toggleLog(arg0);\n    }\n    return (char*)[[NSString stringWithFormat:@\"[invokeMethod] method missing:%@\", methodStr] cStringUsingEncoding:NSUTF8StringEncoding];\n}\n\nchar* toggleLog(const char *data)\n{\n    NSString *string = [NSString stringWithUTF8String:data];\n    logToggle = [string isEqualToString:@\"1\"];\n}\n\nchar* pay(const char *data)\n{\n    NSString *string = [NSString stringWithUTF8String:data];\n    NSArray *array = [string componentsSeparatedByString:@\",\"];\n    PayParams *params = [PayParams new];\n    params.roleID = [array objectAtIndex:0];\n    params.orderID = [array objectAtIndex:1];\n    params.price = @([[array objectAtIndex:2] floatValue]);\n    \n    [[SDK instance] pay:params];\n    \n    if(logToggle)\n    {\n        NSLog(@\"invoke pay interface success. roleId = %@, orderID = %@, price = %@\", params.roleID, params.orderID, params.price);\n    }\n    return makeStringCopy(\"\");\n}\n\nchar* makeStringCopy(const char* string)\n{\n    if(string == NULL)\n        return NULL;\n    char* res = (char*)malloc(strlen(string)+1);\n    strcpy(res, string);\n    return res;\n}\n\n@implementation NativeCallProxy\n\n@end\n```\n\n6.在 Assets/Scripts 目录下创建以下文件（文件名称随意）\n\nSdkBridge_iOS.cs  //调用 C 代码的 C#文件\n\nIosMessageReceiver.cs  //接收 iOS 代码发送的消息\n\n7.编辑 SdkBridge_iOS.cs\n\n注意点：\n\n（1）invokeMethod 必须用 UNITY_IOS 宏包围，并且与 NativeCallProxy.mm 内的 invokeMethod 完全同名，参数一致（C#的 string 对应 C 的 char*）\n\n（2）invokeMethod 必须加 extern 关键字，并且加[DllImport(\"__Internal\")]特性标签\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing UnityEngine;\n#if UNITY_IOS\nusing System.Runtime.InteropServices;\n#endif\n\npublic class SdkBridge_iOS\n    {\n#if UNITY_IOS\n        [DllImport(\"__Internal\")] private static extern string invokeMethod(string method, string arg0);\n#endif\n        public void Init()\n        {\n            GameObject go = new GameObject(\"IosMessageReceiver\");\n            go.AddComponent<IosMessageReceiver>();\n            IosMessageReceiver.Event_paySuc += IosMessageReceiver_Event_paySuc;\n            IosMessageReceiver.Event_payFail += IosMessageReceiver_Event_payFail;\n        }\n\n        private static string InvokeMethod(string method, string arg0)\n        {\n#if UNITY_IOS\n            Debug.LogFormat(\"ready invoke method: {0}, arg0: {1}\", method, arg0);\n            string returnVal = invokeMethod(method, arg0);\n            Debug.LogFormat(\"got return value: {0}\", returnVal);\n            return returnVal;\n#else\n            return string.Empty;\n#endif\n        }\n\n        public void Pay(float price, string orderId, string roleId)\n        {\n            StringBuilder sb = new StringBuilder();\n            sb.Append(roleId).Append(',');\n            sb.Append(orderId).Append(',');\n            sb.Append(price);\n            string arg0 = sb.ToString();\n            Debug.LogFormat(\"pay. arg0 = {0}\", arg0); \n            InvokeMethod(\"pay\", arg0);\n        }\n\n        private void IosMessageReceiver_Event_payFail(string obj)\n        {\n            Debug.LogFormat(\"Received payFail. arg = {0}\", obj);\n            //向游戏内发送支付失败消息\n        }\n\n        private void IosMessageReceiver_Event_paySuc(string obj)\n        {\n            Debug.LogFormat(\"Received paySuc. arg = {0}\", obj);\n            //向游戏内发送支付成功消息\n        }\n\n    }\n```\n\n8.编辑 IosMessageReceiver.cs\n\n注意点：\n\n（1）Call 方法名必须与 MyAppController.mm 的 Call 函数名一致，参数也必须一致。\n\n（2）IosMessageReceiver.cs 被实例化至 Unity 的场景中的哪个 GameObject 节点下，就要把这个 GameObject 的全路径填到 MyAppController.mm 的 UnitySendMessage 函数的第一个参数内。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System.Reflection;\nusing System;\n\npublic class IosMessageReceiver : MonoBehaviour\n    {\n        public static event Action<string> Event_paySuc;\n        public static event Action<string> Event_payFail;\n\n        //invoked by C\n        public void Call(string arg0)\n        {\n            Debug.LogFormat(\"[IosMessageReceiver] received arg0:{0}\", arg0);\n            if (string.IsNullOrEmpty(arg0))\n            {\n                Debug.LogError(\"[IosMessageReceiver] arg0 is empty.\");\n                return;\n            }\n            string[] args = arg0.Split('#');\n            string method = args[0];\n            object[] parameters = new object[args.Length - 1];\n            if (args.Length > 1)\n            {\n                for (int i = 1; i < args.Length; i++)\n                {\n                    parameters[i - 1] = args[i];\n                }\n            }\n            MethodInfo methodInfo = this.GetType().GetMethod(method, BindingFlags.Instance | BindingFlags.NonPublic);\n            try\n            {\n                if (parameters.Length == 0)\n                {\n                    methodInfo.Invoke(this, null);\n                }\n                else\n                {\n                    methodInfo.Invoke(this, parameters);\n                }\n            }\n            catch (TargetInvocationException e)\n            {\n                Debug.LogErrorFormat(\"[IosMessageReceiver] {0}\", e.Message);\n            }\n        }\n\n        private void paySuc(string arg0)\n        {\n            Event_paySuc?.Invoke(arg0);\n        }\n\n        private void payFail(string arg0)\n        {\n            Event_payFail?.Invoke(arg0);\n        }\n\n    }\n```\n\n总结：\n\n（1）每次 Unity 导出 Xcode 工程后 UnityAppController 都会被复位成模版自动生成的代码，Unity 通过 IMPL_APP_CONTROLLER_SUBCLASS 帮我们解决了想要扩展 UnityAppController 代码的需求。\n\n（2）在 C#侧使用 string invokeMethod(string arg0)可以完成大部分情况下的 C#到 C 的通信，在 C 侧使用 UnitySendMessage 可以实现 C 到 C#的通信。\n\n#### 在 Unity 设置 Xcode 工程参数\n\n可直接在 Unity 编辑器内设置一部分 Xcodeproj 参数，剩下的部分只能通过代码设置。\n\n1. Unity 的 ProjectSettings 可以设置项目层面的参数。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515516.png)\n\n1. 在 Unity 内选中*.framework 文件，可以设置依赖的其它 framework。\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515023.png)\n\n1. 选中*.mm 文件，可以填写编译选项\n\n![](https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515486.png)\n\n以上是能通过 Unity 编辑器直接设置的部分，接下来是使用代码挂接 Unity 的打包后处理钩子函数实现更多参数注入。\n\n在 Assets/Scripts/Editor 文件夹下创建 XcodeBuildPostprocess.cs（名字随意）\n\n下面的代码示例了如何使用 UnityAPI 对 Xcode 工程进行修改。\n\n注意点：\n\n（1）方法必须声明为 static 类型，且添加 PostProcessBuildAttribute 特性。Unity 会在打 Xcode 工程的尾声阶段（Xcode 工程已被完整导出）调用所有带该特性标签的方法。\n\n（2）该代码文件必须放在 Editor 文件夹下，或者其路径中必须包含 Editor，例如 Assets/Scripts/Editor。\n\n```csharp\nusing UnityEngine;\nusing UnityEditor;\nusing System.IO;\nusing System;\n\n#if UNITY_IOS\nusing UnityEditor.iOS.Xcode;\nusing UnityEditor.Callbacks;\n#endif\n\npublic class XcodeBuildPostprocess\n    {\n#if UNITY_IOS\n        [PostProcessBuildAttribute(100)]\n        public static void OnPostprocessBuild(BuildTarget buildTarget, string pathToBuiltProject)\n        {\n            // BuildTarget需为iOS\n            if (buildTarget != BuildTarget.iOS)\n                return;\n            //pathToBuiltProject示例  /Users/user/Documents/build\n            Debug.Log(\"XcodeBuildPostprocess:OnPostprocessBuild start, pathToBuiltProject = \" + pathToBuiltProject);\n            // 初始化\n            var projectPath = pathToBuiltProject + \"/Unity-iPhone.xcodeproj/project.pbxproj\";\n            PBXProject pbxProject = new PBXProject();\n            pbxProject.ReadFromFile(projectPath);\n            string projectGuid = pbxProject.ProjectGuid();\n            string unityIphoneGuid = pbxProject.GetUnityMainTargetGuid();\n            string unityFrameworkGuid = pbxProject.GetUnityFrameworkTargetGuid();\n\n            // 添加flag\n            pbxProject.AddBuildProperty(unityFrameworkGuid, \"OTHER_LDFLAGS\", \"-ObjC\");\n            // 关闭Bitcode\n            pbxProject.SetBuildProperty(unityFrameworkGuid, \"ENABLE_BITCODE\", \"NO\");\n            pbxProject.SetBuildProperty(projectGuid, \"ENABLE_BITCODE\", \"NO\");\n\n            //设置app名\n            pbxProject.SetBuildProperty(projectGuid, \"PRODUCT_NAME_APP\", \"mygame\");\n\n            //编译去除arm-v7\n            // pbxProject.SetBuildProperty(projectGuid, \"VALID_ARCHS\", \"arm64\");\n            // pbxProject.SetBuildProperty(projectGuid, \"VALID_ARCHS\", \"arm64e\");\n\n            //设置DEBUG_INFORMATION_FORMAT\n            //pbxProject.SetBuildProperty(projectGuid, \"DEBUG_INFORMATION_FORMAT\", \"dwarf\");\n            //打开Enable Objective-C Exceptions\n            pbxProject.SetBuildProperty(projectGuid, \"GCC_ENABLE_OBJC_EXCEPTIONS\", \"YES\");\n\n            //添加lib       \n            AddLibToProject(pbxProject, unityFrameworkGuid, \"libc++.tbd\");\n            AddLibToProject(pbxProject, unityFrameworkGuid, \"libz.tbd\");\n            AddLibToProject(pbxProject, unityFrameworkGuid, \"libresolv.tbd\");\n            AddLibToProject(pbxProject, unityFrameworkGuid, \"libsqlite3.tbd\");\n\n            //将.bundle从UnityFramework的Copy Bundle Resources转移到Unity-iPhone的Copy Bundle Resources下\n            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, \"whateverSdk.bundle\", \"assets/jackSdk.bundle\");\n            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, \"TencentOpenApi_IOS_Bundle.bundle\", \"UMSocial/SocialLibraries/QQ/QQSDK/TencentOpenApi_IOS_Bundle.bundle\");\n            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, \"WeiboSDK.bundle\", \"UMSocial/SocialLibraries/Sina/SinaSDK/WeiboSDK.bundle\");\n            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, \"UMSocialSDKResources.bundle\", \"UMSocial/UMSocialUI/UMSocialSDKResources.bundle\");\n\n            //转移plist文件到Xcode工程\n            AddFileToProject(pbxProject, unityIphoneGuid, \"Frameworks/Plugins/iOS/whatever_data_list.plist\", Application.dataPath + \"/Plugins/iOS/whatever_data_list.plist\");\n\n            // 应用修改\n            File.WriteAllText(projectPath, pbxProject.WriteToString());\n\n            // 修改Info.plist文件\n            var plistPath = Path.Combine(pathToBuiltProject, \"Info.plist\");\n            var plist = new PlistDocument();\n            plist.ReadFromFile(plistPath);\n\n            //plist植入sdk参数\n            plist.root.SetString(\"SDK_AppID\", \"FFHkfDiesj3-sn2n79khf\");\n            plist.root.SetString(\"SDK_AppKEY\", \"kDkctwv8FzkSFc63fvf-sSFhbM47Oas0dQfZf\");\n            PlistElementArray plistArray = plist.root.CreateArray(\"LSApplicationQueriesSchemes\");\n            plistArray.AddString(\"wechat\");\n            plistArray.AddString(\"mqq\");\n            plistArray.AddString(\"weibosdk\");\n\n            //设置Info的URL Types （分享外链）\n            PlistElementArray urlTypes = plist.root.CreateArray(\"CFBundleURLTypes\");\n\n            PlistElementDict url1 = urlTypes.AddDict();\n            url1.SetString(\"CFBundleTypeRole\", \"Editor\");\n            PlistElementArray urlSchemes1 = url1.CreateArray(\"CFBundleURLSchemes\");\n            urlSchemes1.AddString(\"tencent12345678\");\n\n            PlistElementDict url2 = urlTypes.AddDict();\n            url2.SetString(\"CFBundleTypeRole\", \"Editor\");\n            PlistElementArray urlSchemes2 = url2.CreateArray(\"CFBundleURLSchemes\");\n            urlSchemes2.AddString(\"QQ99999\");\n\n            //如果plist文件里没有下面的字段，则打开下面代码，若有则注释掉，无需重复添加\n            //var dict = plist.root.CreateDict(\"App Transport Security Settings\");\n            //dict.SetBoolean(\"Allow Arbitrary Loads\", true);\n\n            plist.root.SetString(\"NSUserTrackingUsageDescription\", \"此APP需要您同意才能使用数据收集功能，收集数据的作用是以便我们对您提供更好的游戏体验\");\n            plist.root.SetString(\"NSPhotoLibraryUsageDescription\", \"此App需要您的同意才能访问相册\");\n            plist.root.SetString(\"NSPhotoLibraryAddUsageDescription\", \"此App需要您的同意才能保存截屏图片\");\n\n            //设置app在应用商店显示的语言\n            plist.root.SetString(\"CFBundleDevelopmentRegion\", \"zh_CN\");\n            PlistElementArray plistArray_bundleLocalization = plist.root.CreateArray(\"CFBundleLocalizations\");\n            plistArray_bundleLocalization.AddString(\"zh_CN\");\n\n            //添加Cpability\n            ProjectCapabilityManager pcm = new ProjectCapabilityManager(projectPath, \"Unity-iPhone.entitlements\", \"Unity-iPhone\");\n            pcm.AddAssociatedDomains(new string[] { \"applinks:mygame.links.com\" });\n            pcm.AddPushNotifications(false);\n            pcm.WriteToFile();\n\n            // 应用修改\n            plist.WriteToFile(plistPath);\n\n        }\n\n        //添加lib方法\n        static void AddLibToProject(PBXProject inst, string targetGuid, string lib)\n        {\n            string fileGuid = inst.AddFile(\"usr/lib/\" + lib, \"Frameworks/\" + lib, PBXSourceTree.Sdk);\n            inst.AddFileToBuild(targetGuid, fileGuid);\n        }\n\n        static void AddLocalFrameworkToProject(PBXProject inst, string targetGuid, string fileName, string filePath)\n        {\n            string fileGuid = inst.AddFile(filePath, \"Frameworks/\" + fileName, PBXSourceTree.Source);\n            inst.AddFileToBuild(targetGuid, fileGuid);\n        }\n\n        static void AddFileToProject(PBXProject inst, string targetGuid, string filePathInXcodeProj, string filePathInUnityproj)\n        {\n            string fileGuid = inst.AddFile(filePathInUnityproj, filePathInXcodeProj, PBXSourceTree.Source);\n            inst.AddFileToBuild(targetGuid, fileGuid);\n        }\n\n        static void AddBundleToProject(PBXProject inst, string targetGuid, string fileName, string filePath)\n        {\n            string fileGuid = inst.AddFile(filePath, fileName, PBXSourceTree.Source);\n            inst.AddFileToBuild(targetGuid, fileGuid);\n        }\n\n        static void RemoveBundleFromProject(PBXProject inst, string targetGuid, string fileProjectPath)\n        {\n            string fileGuid = inst.FindFileGuidByProjectPath(fileProjectPath);\n            if (fileGuid == null)\n            {\n                Debug.LogErrorFormat(\"RemoveBundleFromProject failed. fileProjectPath: {0}\", fileProjectPath);\n            }\n            else\n            {\n                inst.RemoveFileFromBuild(targetGuid, fileGuid);\n            }\n        }\n\n        static void MoveBundleTo(PBXProject pbxProject, string fromTargetGuid, string toTargrtGuid, string bundleName, string bundlePathRelativeIOS)\n        {\n            string path_aofeibundle = Application.dataPath + \"/Plugins/iOS/\" + bundlePathRelativeIOS;\n            Debug.LogFormat(\"XcodeBuildPostprocess:OnPostprocessBuild bundleName = {0}, bundlePathInUnity = {1}\", bundleName, path_aofeibundle);\n\n            AddBundleToProject(pbxProject, toTargrtGuid, bundleName, path_aofeibundle);\n            RemoveBundleFromProject(pbxProject, fromTargetGuid, \"Frameworks/Plugins/iOS/\" + bundlePathRelativeIOS);\n        }\n#endif\n    }\n```\n\n### Xcode 侧\n\n在打 ipa 包的流程中，Xcode 侧无需进行任何 plist，xcodeproj，工程资源文件/代码的修改。\n\n一般在接入 sdk 的过程中，我们仍会使用 Xcode 进行调试，例如在接入某 sdk 时，要求在 plist 中添加参数，那么可以先用 Unity 导出一个 Xcode 工程，在此 Xcode 工程上进行 plist 修改，再打真机包调试，无需重复从 Unity 重新导出工程。\n\n需要注意的是，在 Xcode 调试期间作出的任何 plist 改动，必须转化为 XcodeBuildPostprocess 的代码。在 Xcode 调试期间新增或修改的任何代码，也要拷贝回 Unity 的工程目录下。\n\n### 总结\n\n从本文可以看出，ipa 包体构建的绝大部分的配置操作都是在 Unity 侧实现的，这也就降低了不熟悉 iOS 开发的 Unity 游戏开发人员打 ipa 包的难度。虽然接入一些特殊功能的 sdk 无可避免地要写 native 端的代码，但通常 sdk 方会提供完整的接入代码甚至工程示例。为了方便管理，将 native 端的代码放在 Unity 工程内利于整体维护和项目组成员 review。在 Xcode 侧进行构建和分发只需要少量的点击操作，这个过程越简单，越方便以命令的形式集成至 CI/CD 流水线。\n\n例如按照本文介绍的方法接入 sdk，从 Unity 构建 Xcode 工程，再到 Xcode 打出 ipa 包只需要依次执行以下命令：\n\n1. Unity 打 Xcode 工程\n\n/Applications/Unity/Unity.app/Contents/MacOS/Unity  -batchmode -quit -nographics -executeMethod ProjectBuild.ExportXcodeProject\n\n1. 归档\n\nxcodebuild archive -archivePath /Users/user/build/mygame -project /Users/user/Documents/build/Unity-iPhone.xcodeproj -scheme Unity-iPhone\n\n1. 分发 adhoc\n\nxcodebuild -exportArchive -archivePath /Users/user/build/mygame.xcarchive -exportPath /Users/user/build -exportOptionsPlist /Users/user/User/ExportOptions_adhoc.plist\n\n1. 分发 dis\n\nxcodebuild -exportArchive -archivePath /Users/user/build/mygame.xcarchive -exportPath /Users/user/build -exportOptionsPlist /Users/user/User/ExportOptions_appstore.plist\n\n1. 清理 Xcode 工程\n\nxcodebuild clean -project /Users/user/Documents/build/Unity-iPhone.xcodeproj -scheme Unity-iPhone\n\n受项目复杂度和计算机性能影响，从 Unity 构建一个 ipa 包花费的时间有很大不同。例如一个普通的中型手游项目 + 高性能打包机，完整的出包时间会在 1 小时左右，其中 Unity 的游戏资源打包花费 30 分钟左右，导出 Xcode 工程花费 10 分钟左右，从 Xcode 构建出最终 ipa 包花费 10 分钟左右，杂项（进程启动，git 操作，日志归档，发送报告...）花费 10 分钟左右。\n","slug":"Unity 与 iOS 工程桥接介绍","published":1,"updated":"2024-02-02T06:19:10.509Z","_id":"clrafu6i1000f08vqhwo50fpz","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"Unity-侧\"><a href=\"#Unity-侧\" class=\"headerlink\" title=\"Unity 侧\"></a>Unity 侧</h3><h4 id=\"ipa-包体构建流程\"><a href=\"#ipa-包体构建流程\" class=\"headerlink\" title=\"ipa 包体构建流程\"></a>ipa 包体构建流程</h4><ol>\n<li>在 Mac 上启动 Unity，在 Unity 的 BuildSettings 界面选择 iOS 平台，点击 Build 按钮后即开始导出 XCode 工程。或调用 Unity 命令行工具完成此步操作。</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514334.png\" class=\"lazyload placeholder\" data-srcset=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514334.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"></p>\n<p>导出后的 Xcode 工程结构如下图</p>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514088.png\" class=\"lazyload placeholder\" data-srcset=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514088.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"></p>\n<p>2.双击 Unity-iPhone.xcodeproj，打开 Xcode，在 Xcode 顶部栏点击 Product&#x2F;Archive 开始构建档案。或调用 Xcode 命令行工具完成此步操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514353.png\" class=\"lazyload placeholder\" data-srcset=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514353.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"></p>\n<p>3.在 Xcode 顶部栏点击 Window&#x2F;Organizer 进行分发，根据出包需求选择不同的证书导出对应 ipa 安装包文件。或调用 Xcode 命令行工具完成此步操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514124.png\" class=\"lazyload placeholder\" data-srcset=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514124.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"></p>\n<p>最终导出的 ipa 文件和日志文件如下图</p>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514818.png\" class=\"lazyload placeholder\" data-srcset=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514818.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"></p>\n<p>总结：对于使用 Unity 开发的游戏，每次打包都相当于重新产生一个 Xcode 工程。当游戏的美术资源，代码文件，配置文件发生变更后，通常需要重新导出一份新的 Xcode 工程。</p>\n<h4 id=\"Unity-工程目录结构简介\"><a href=\"#Unity-工程目录结构简介\" class=\"headerlink\" title=\"Unity 工程目录结构简介\"></a>Unity 工程目录结构简介</h4><p>不同游戏的 Unity 目录结构不同，其中 Unity 对一些目录做了特殊定义，此类文件夹不能更名，否则 Unity 会识别不到。</p>\n<p>以下列举了一个 Unity 游戏工程的大概目录结构（加粗的为 Unity 特殊定义的目录名）</p>\n<p><strong>Assets</strong></p>\n<p><strong>Library</strong>  &#x2F;&#x2F;Unity 针对 Assets 下的文件生成的适合自身读写的中间文件</p>\n<p><strong>Packages</strong>  &#x2F;&#x2F;存放 Unity Package Manager 扩展包文件</p>\n<p><strong>ProjectSettings</strong>  &#x2F;&#x2F;存放 Unity 项目设置文件</p>\n<p><strong>Temp</strong>  &#x2F;&#x2F;存放临时文件，随 Unity 进程关闭被清空</p>\n<h4 id=\"创建桥接文件\"><a href=\"#创建桥接文件\" class=\"headerlink\" title=\"创建桥接文件\"></a>创建桥接文件</h4><p>1.在 <strong>Assets&#x2F;Plugins&#x2F;iOS</strong> 目录下创建以下文件（文件名称随意）</p>\n<p>2.编辑 MyAppController.h（属于各 Unity 项目的通用做法，网上有很多示例）</p>\n<p>注意点：</p>\n<p>（1）必须继承自 UnityAppController</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  MyAppController.h</span></span><br><span class=\"line\"><span class=\"comment\">//  Unity-iPhone</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> MyAppController_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MyAppController_h</span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;UnityAppController.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">@interface MyAppController : UnityAppController</span><br><span class=\"line\">- (NSString*)BOOLToNSString:(BOOL)val;</span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">/* MyAppController_h */</span></span></span><br></pre></td></tr></table></figure>\n\n<p>3.编辑 MyAppController.mm（也属于各 Unity 项目的通用做法，网上有很多示例）</p>\n<p>注意点：</p>\n<p>（1）最后一行必须写 IMPL_APP_CONTROLLER_SUBCLASS，这是 Unity 提供的宏。Unity 通过这个宏知道要使用我们定制的 MyAppController 而不是使用默认的 UnityAppController。</p>\n<p>（2）新建的函数必须在对应的头文件里提前声明</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  MyAppController.mm</span></span><br><span class=\"line\"><span class=\"comment\">//  Unity-iPhone</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;MyAppController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;UnityAppController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;SDK/SDK.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;UnityInterface.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">@implementation MyAppController</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//注册app生命周期函数，调用对应的sdk代码</span></span><br><span class=\"line\"><span class=\"comment\">//例如重载程序启动成功之后自动调用的方法</span></span><br><span class=\"line\">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123;</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] addObserver:self selector:@<span class=\"built_in\">selector</span>(paySuc:) name:kPaySuccNotification object:nil];</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] addObserver:self selector:@<span class=\"built_in\">selector</span>(payFail:) name:kPayErrorNotification object:nil];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [[SDK instance] application:application didFinishLaunchingWithOptions:launchOptions];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//也可以写自己开发的代码，BOOL转NSString*，函数需要提前在MyAppController.h声明</span></span><br><span class=\"line\">- (NSString*) BOOLToNSString:(BOOL)val</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(val == <span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123; <span class=\"keyword\">return</span> @<span class=\"string\">&quot;true&quot;</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> @<span class=\"string\">&quot;false&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"type\">void</span>)paySuc:(NSNotification *)notify</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(logToggle)</span><br><span class=\"line\">    &#123; <span class=\"built_in\">NSLog</span>(@<span class=\"string\">&quot;paySuc:%@&quot;</span>, notify.object); &#125;</span><br><span class=\"line\">    NSString *str =  [notify.object description];</span><br><span class=\"line\">    <span class=\"type\">char</span>* arg0 = (<span class=\"type\">char</span>*)[[NSString stringWithFormat:@<span class=\"string\">&quot;paySuc#%@&quot;</span>, str] cStringUsingEncoding:NSUTF8StringEncoding];</span><br><span class=\"line\">    <span class=\"built_in\">UnitySendMessage</span>(<span class=\"string\">&quot;IosMessageReceiver&quot;</span>, <span class=\"string\">&quot;Call&quot;</span>, arg0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"type\">void</span>)payFail:(NSNotification *)notify</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(logToggle)</span><br><span class=\"line\">    &#123; <span class=\"built_in\">NSLog</span>(@<span class=\"string\">&quot;payFail:%@&quot;</span>,notify.object); &#125;</span><br><span class=\"line\">    NSString *str =  [notify.object description];</span><br><span class=\"line\">    <span class=\"type\">char</span>* arg0 = (<span class=\"type\">char</span>*)[[NSString stringWithFormat:@<span class=\"string\">&quot;payFail#%@&quot;</span>, str] cStringUsingEncoding:NSUTF8StringEncoding];</span><br><span class=\"line\">    <span class=\"built_in\">UnitySendMessage</span>(<span class=\"string\">&quot;IosMessageReceiver&quot;</span>, <span class=\"string\">&quot;Call&quot;</span>, arg0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"function\">end</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">IMPL_APP_CONTROLLER_SUBCLASS</span><span class=\"params\">(MyAppController)</span></span>;<span class=\"comment\">//*以MyAppController为启动项</span></span><br></pre></td></tr></table></figure>\n\n<p>4.编辑 NativeCallProxy.h</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  NativeCallProxy.h</span></span><br><span class=\"line\"><span class=\"comment\">//  Unity-iPhone</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> NativeCallProxy_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> NativeCallProxy_h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;NativeCallProxy.h&quot;</span></span></span><br><span class=\"line\">@protocol NativeCallsProtocol</span><br><span class=\"line\"></span><br><span class=\"line\">@required</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">__attribute__ ((<span class=\"built_in\">visibility</span>(<span class=\"string\">&quot;default&quot;</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">@interface FrameworkLibAPI : NSObject</span><br><span class=\"line\"><span class=\"comment\">// call it any time after UnityFrameworkLoad to set object implementing NativeCallsProtocol methods</span></span><br><span class=\"line\">+(<span class=\"type\">void</span>) registerAPIforNativeCalls:(id&lt;NativeCallsProtocol&gt;) aApi;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> BOOL logToggle;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">@interface NativeCallProxy : NSObject</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">/* NativeCallProxy_h */</span></span></span><br></pre></td></tr></table></figure>\n\n<p>5.编辑 NativeCallProxy.mm</p>\n<p>注意点：</p>\n<p>(1)被 C#调用的代码必须用 extern “C”包围</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  NativeCallProxy.m</span></span><br><span class=\"line\"><span class=\"comment\">//  Unity-iPhone</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;NativeCallProxy.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;MyAppController.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">@implementation FrameworkLibAPI</span><br><span class=\"line\"></span><br><span class=\"line\">id&lt;NativeCallsProtocol&gt; api = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">+(<span class=\"type\">void</span>) registerAPIforNativeCalls:(id&lt;NativeCallsProtocol&gt;) aApi</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    api = aApi;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL logToggle = <span class=\"literal\">true</span>;         <span class=\"comment\">//全局变量：日志开关</span></span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">&quot;C&quot;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">invokeMethod</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *method, <span class=\"type\">const</span> <span class=\"type\">char</span> *arg0)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">makeStringCopy</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* string)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">pay</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* data)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">toggleLog</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *data)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">invokeMethod</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *method, <span class=\"type\">const</span> <span class=\"type\">char</span> *arg0)</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    NSString *methodStr = [NSString stringWithUTF8String:method];</span><br><span class=\"line\">    NSString *arg0Str = [NSString stringWithUTF8String:arg0];</span><br><span class=\"line\">    <span class=\"type\">char</span>* returnChar = (<span class=\"type\">char</span>*)<span class=\"built_in\">malloc</span>(<span class=\"number\">1024</span> * <span class=\"built_in\">sizeof</span>(<span class=\"type\">char</span>));</span><br><span class=\"line\">    <span class=\"built_in\">strncpy</span>(returnChar, <span class=\"string\">&quot;&quot;</span>, <span class=\"number\">1024</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(method, <span class=\"string\">&quot;pay&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">pay</span>(arg0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(method, <span class=\"string\">&quot;toggleLog&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">toggleLog</span>(arg0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"type\">char</span>*)[[NSString stringWithFormat:@<span class=\"string\">&quot;[invokeMethod] method missing:%@&quot;</span>, methodStr] cStringUsingEncoding:NSUTF8StringEncoding];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">toggleLog</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    NSString *string = [NSString stringWithUTF8String:data];</span><br><span class=\"line\">    logToggle = [string isEqualToString:@<span class=\"string\">&quot;1&quot;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">pay</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    NSString *string = [NSString stringWithUTF8String:data];</span><br><span class=\"line\">    NSArray *array = [string componentsSeparatedByString:@<span class=\"string\">&quot;,&quot;</span>];</span><br><span class=\"line\">    PayParams *params = [PayParams <span class=\"keyword\">new</span>];</span><br><span class=\"line\">    params.roleID = [array objectAtIndex:<span class=\"number\">0</span>];</span><br><span class=\"line\">    params.orderID = [array objectAtIndex:<span class=\"number\">1</span>];</span><br><span class=\"line\">    params.price = @([[array objectAtIndex:<span class=\"number\">2</span>] floatValue]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    [[SDK instance] pay:params];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(logToggle)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(@<span class=\"string\">&quot;invoke pay interface success. roleId = %@, orderID = %@, price = %@&quot;</span>, params.roleID, params.orderID, params.price);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">makeStringCopy</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">makeStringCopy</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* string)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(string == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span>* res = (<span class=\"type\">char</span>*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">strlen</span>(string)+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(res, string);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@implementation NativeCallProxy</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n\n<p>6.在 Assets&#x2F;Scripts 目录下创建以下文件（文件名称随意）</p>\n<p>SdkBridge_iOS.cs  &#x2F;&#x2F;调用 C 代码的 C#文件</p>\n<p>IosMessageReceiver.cs  &#x2F;&#x2F;接收 iOS 代码发送的消息</p>\n<p>7.编辑 SdkBridge_iOS.cs</p>\n<p>注意点：</p>\n<p>（1）invokeMethod 必须用 UNITY_IOS 宏包围，并且与 NativeCallProxy.mm 内的 invokeMethod 完全同名，参数一致（C#的 string 对应 C 的 char*）</p>\n<p>（2）invokeMethod 必须加 extern 关键字，并且加[DllImport(“__Internal”)]特性标签</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Runtime.InteropServices;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SdkBridge_iOS</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\">        [<span class=\"meta\">DllImport(<span class=\"string\">&quot;__Internal&quot;</span>)</span>] <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">extern</span> <span class=\"built_in\">string</span> <span class=\"title\">invokeMethod</span>(<span class=\"params\"><span class=\"built_in\">string</span> method, <span class=\"built_in\">string</span> arg0</span>)</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Init</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GameObject go = <span class=\"keyword\">new</span> GameObject(<span class=\"string\">&quot;IosMessageReceiver&quot;</span>);</span><br><span class=\"line\">            go.AddComponent&lt;IosMessageReceiver&gt;();</span><br><span class=\"line\">            IosMessageReceiver.Event_paySuc += IosMessageReceiver_Event_paySuc;</span><br><span class=\"line\">            IosMessageReceiver.Event_payFail += IosMessageReceiver_Event_payFail;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">InvokeMethod</span>(<span class=\"params\"><span class=\"built_in\">string</span> method, <span class=\"built_in\">string</span> arg0</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;ready invoke method: &#123;0&#125;, arg0: &#123;1&#125;&quot;</span>, method, arg0);</span><br><span class=\"line\">            <span class=\"built_in\">string</span> returnVal = invokeMethod(method, arg0);</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;got return value: &#123;0&#125;&quot;</span>, returnVal);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> returnVal;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Pay</span>(<span class=\"params\"><span class=\"built_in\">float</span> price, <span class=\"built_in\">string</span> orderId, <span class=\"built_in\">string</span> roleId</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            sb.Append(roleId).Append(<span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">            sb.Append(orderId).Append(<span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">            sb.Append(price);</span><br><span class=\"line\">            <span class=\"built_in\">string</span> arg0 = sb.ToString();</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;pay. arg0 = &#123;0&#125;&quot;</span>, arg0); </span><br><span class=\"line\">            InvokeMethod(<span class=\"string\">&quot;pay&quot;</span>, arg0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">IosMessageReceiver_Event_payFail</span>(<span class=\"params\"><span class=\"built_in\">string</span> obj</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;Received payFail. arg = &#123;0&#125;&quot;</span>, obj);</span><br><span class=\"line\">            <span class=\"comment\">//向游戏内发送支付失败消息</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">IosMessageReceiver_Event_paySuc</span>(<span class=\"params\"><span class=\"built_in\">string</span> obj</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;Received paySuc. arg = &#123;0&#125;&quot;</span>, obj);</span><br><span class=\"line\">            <span class=\"comment\">//向游戏内发送支付成功消息</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>8.编辑 IosMessageReceiver.cs</p>\n<p>注意点：</p>\n<p>（1）Call 方法名必须与 MyAppController.mm 的 Call 函数名一致，参数也必须一致。</p>\n<p>（2）IosMessageReceiver.cs 被实例化至 Unity 的场景中的哪个 GameObject 节点下，就要把这个 GameObject 的全路径填到 MyAppController.mm 的 UnitySendMessage 函数的第一个参数内。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Reflection;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">IosMessageReceiver</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">event</span> Action&lt;<span class=\"built_in\">string</span>&gt; Event_paySuc;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">event</span> Action&lt;<span class=\"built_in\">string</span>&gt; Event_payFail;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//invoked by C</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Call</span>(<span class=\"params\"><span class=\"built_in\">string</span> arg0</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;[IosMessageReceiver] received arg0:&#123;0&#125;&quot;</span>, arg0);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(arg0))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Debug.LogError(<span class=\"string\">&quot;[IosMessageReceiver] arg0 is empty.&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">string</span>[] args = arg0.Split(<span class=\"string\">&#x27;#&#x27;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">string</span> method = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"built_in\">object</span>[] parameters = <span class=\"keyword\">new</span> <span class=\"built_in\">object</span>[args.Length - <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (args.Length &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i &lt; args.Length; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    parameters[i - <span class=\"number\">1</span>] = args[i];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            MethodInfo methodInfo = <span class=\"keyword\">this</span>.GetType().GetMethod(method, BindingFlags.Instance | BindingFlags.NonPublic);</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (parameters.Length == <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    methodInfo.Invoke(<span class=\"keyword\">this</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    methodInfo.Invoke(<span class=\"keyword\">this</span>, parameters);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (TargetInvocationException e)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Debug.LogErrorFormat(<span class=\"string\">&quot;[IosMessageReceiver] &#123;0&#125;&quot;</span>, e.Message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">paySuc</span>(<span class=\"params\"><span class=\"built_in\">string</span> arg0</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Event_paySuc?.Invoke(arg0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">payFail</span>(<span class=\"params\"><span class=\"built_in\">string</span> arg0</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Event_payFail?.Invoke(arg0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<p>（1）每次 Unity 导出 Xcode 工程后 UnityAppController 都会被复位成模版自动生成的代码，Unity 通过 IMPL_APP_CONTROLLER_SUBCLASS 帮我们解决了想要扩展 UnityAppController 代码的需求。</p>\n<p>（2）在 C#侧使用 string invokeMethod(string arg0)可以完成大部分情况下的 C#到 C 的通信，在 C 侧使用 UnitySendMessage 可以实现 C 到 C#的通信。</p>\n<h4 id=\"在-Unity-设置-Xcode-工程参数\"><a href=\"#在-Unity-设置-Xcode-工程参数\" class=\"headerlink\" title=\"在 Unity 设置 Xcode 工程参数\"></a>在 Unity 设置 Xcode 工程参数</h4><p>可直接在 Unity 编辑器内设置一部分 Xcodeproj 参数，剩下的部分只能通过代码设置。</p>\n<ol>\n<li>Unity 的 ProjectSettings 可以设置项目层面的参数。</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515516.png\" class=\"lazyload placeholder\" data-srcset=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515516.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"></p>\n<ol>\n<li>在 Unity 内选中*.framework 文件，可以设置依赖的其它 framework。</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515023.png\" class=\"lazyload placeholder\" data-srcset=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515023.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"></p>\n<ol>\n<li>选中*.mm 文件，可以填写编译选项</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515486.png\" class=\"lazyload placeholder\" data-srcset=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515486.png\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\"></p>\n<p>以上是能通过 Unity 编辑器直接设置的部分，接下来是使用代码挂接 Unity 的打包后处理钩子函数实现更多参数注入。</p>\n<p>在 Assets&#x2F;Scripts&#x2F;Editor 文件夹下创建 XcodeBuildPostprocess.cs（名字随意）</p>\n<p>下面的代码示例了如何使用 UnityAPI 对 Xcode 工程进行修改。</p>\n<p>注意点：</p>\n<p>（1）方法必须声明为 static 类型，且添加 PostProcessBuildAttribute 特性。Unity 会在打 Xcode 工程的尾声阶段（Xcode 工程已被完整导出）调用所有带该特性标签的方法。</p>\n<p>（2）该代码文件必须放在 Editor 文件夹下，或者其路径中必须包含 Editor，例如 Assets&#x2F;Scripts&#x2F;Editor。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.IO;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor.iOS.Xcode;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor.Callbacks;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">XcodeBuildPostprocess</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\">        [<span class=\"meta\">PostProcessBuildAttribute(100)</span>]</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPostprocessBuild</span>(<span class=\"params\">BuildTarget buildTarget, <span class=\"built_in\">string</span> pathToBuiltProject</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// BuildTarget需为iOS</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (buildTarget != BuildTarget.iOS)</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"comment\">//pathToBuiltProject示例  /Users/user/Documents/build</span></span><br><span class=\"line\">            Debug.Log(<span class=\"string\">&quot;XcodeBuildPostprocess:OnPostprocessBuild start, pathToBuiltProject = &quot;</span> + pathToBuiltProject);</span><br><span class=\"line\">            <span class=\"comment\">// 初始化</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> projectPath = pathToBuiltProject + <span class=\"string\">&quot;/Unity-iPhone.xcodeproj/project.pbxproj&quot;</span>;</span><br><span class=\"line\">            PBXProject pbxProject = <span class=\"keyword\">new</span> PBXProject();</span><br><span class=\"line\">            pbxProject.ReadFromFile(projectPath);</span><br><span class=\"line\">            <span class=\"built_in\">string</span> projectGuid = pbxProject.ProjectGuid();</span><br><span class=\"line\">            <span class=\"built_in\">string</span> unityIphoneGuid = pbxProject.GetUnityMainTargetGuid();</span><br><span class=\"line\">            <span class=\"built_in\">string</span> unityFrameworkGuid = pbxProject.GetUnityFrameworkTargetGuid();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 添加flag</span></span><br><span class=\"line\">            pbxProject.AddBuildProperty(unityFrameworkGuid, <span class=\"string\">&quot;OTHER_LDFLAGS&quot;</span>, <span class=\"string\">&quot;-ObjC&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 关闭Bitcode</span></span><br><span class=\"line\">            pbxProject.SetBuildProperty(unityFrameworkGuid, <span class=\"string\">&quot;ENABLE_BITCODE&quot;</span>, <span class=\"string\">&quot;NO&quot;</span>);</span><br><span class=\"line\">            pbxProject.SetBuildProperty(projectGuid, <span class=\"string\">&quot;ENABLE_BITCODE&quot;</span>, <span class=\"string\">&quot;NO&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//设置app名</span></span><br><span class=\"line\">            pbxProject.SetBuildProperty(projectGuid, <span class=\"string\">&quot;PRODUCT_NAME_APP&quot;</span>, <span class=\"string\">&quot;mygame&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//编译去除arm-v7</span></span><br><span class=\"line\">            <span class=\"comment\">// pbxProject.SetBuildProperty(projectGuid, &quot;VALID_ARCHS&quot;, &quot;arm64&quot;);</span></span><br><span class=\"line\">            <span class=\"comment\">// pbxProject.SetBuildProperty(projectGuid, &quot;VALID_ARCHS&quot;, &quot;arm64e&quot;);</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//设置DEBUG_INFORMATION_FORMAT</span></span><br><span class=\"line\">            <span class=\"comment\">//pbxProject.SetBuildProperty(projectGuid, &quot;DEBUG_INFORMATION_FORMAT&quot;, &quot;dwarf&quot;);</span></span><br><span class=\"line\">            <span class=\"comment\">//打开Enable Objective-C Exceptions</span></span><br><span class=\"line\">            pbxProject.SetBuildProperty(projectGuid, <span class=\"string\">&quot;GCC_ENABLE_OBJC_EXCEPTIONS&quot;</span>, <span class=\"string\">&quot;YES&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//添加lib       </span></span><br><span class=\"line\">            AddLibToProject(pbxProject, unityFrameworkGuid, <span class=\"string\">&quot;libc++.tbd&quot;</span>);</span><br><span class=\"line\">            AddLibToProject(pbxProject, unityFrameworkGuid, <span class=\"string\">&quot;libz.tbd&quot;</span>);</span><br><span class=\"line\">            AddLibToProject(pbxProject, unityFrameworkGuid, <span class=\"string\">&quot;libresolv.tbd&quot;</span>);</span><br><span class=\"line\">            AddLibToProject(pbxProject, unityFrameworkGuid, <span class=\"string\">&quot;libsqlite3.tbd&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//将.bundle从UnityFramework的Copy Bundle Resources转移到Unity-iPhone的Copy Bundle Resources下</span></span><br><span class=\"line\">            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, <span class=\"string\">&quot;whateverSdk.bundle&quot;</span>, <span class=\"string\">&quot;assets/jackSdk.bundle&quot;</span>);</span><br><span class=\"line\">            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, <span class=\"string\">&quot;TencentOpenApi_IOS_Bundle.bundle&quot;</span>, <span class=\"string\">&quot;UMSocial/SocialLibraries/QQ/QQSDK/TencentOpenApi_IOS_Bundle.bundle&quot;</span>);</span><br><span class=\"line\">            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, <span class=\"string\">&quot;WeiboSDK.bundle&quot;</span>, <span class=\"string\">&quot;UMSocial/SocialLibraries/Sina/SinaSDK/WeiboSDK.bundle&quot;</span>);</span><br><span class=\"line\">            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, <span class=\"string\">&quot;UMSocialSDKResources.bundle&quot;</span>, <span class=\"string\">&quot;UMSocial/UMSocialUI/UMSocialSDKResources.bundle&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//转移plist文件到Xcode工程</span></span><br><span class=\"line\">            AddFileToProject(pbxProject, unityIphoneGuid, <span class=\"string\">&quot;Frameworks/Plugins/iOS/whatever_data_list.plist&quot;</span>, Application.dataPath + <span class=\"string\">&quot;/Plugins/iOS/whatever_data_list.plist&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 应用修改</span></span><br><span class=\"line\">            File.WriteAllText(projectPath, pbxProject.WriteToString());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 修改Info.plist文件</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> plistPath = Path.Combine(pathToBuiltProject, <span class=\"string\">&quot;Info.plist&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> plist = <span class=\"keyword\">new</span> PlistDocument();</span><br><span class=\"line\">            plist.ReadFromFile(plistPath);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//plist植入sdk参数</span></span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;SDK_AppID&quot;</span>, <span class=\"string\">&quot;FFHkfDiesj3-sn2n79khf&quot;</span>);</span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;SDK_AppKEY&quot;</span>, <span class=\"string\">&quot;kDkctwv8FzkSFc63fvf-sSFhbM47Oas0dQfZf&quot;</span>);</span><br><span class=\"line\">            PlistElementArray plistArray = plist.root.CreateArray(<span class=\"string\">&quot;LSApplicationQueriesSchemes&quot;</span>);</span><br><span class=\"line\">            plistArray.AddString(<span class=\"string\">&quot;wechat&quot;</span>);</span><br><span class=\"line\">            plistArray.AddString(<span class=\"string\">&quot;mqq&quot;</span>);</span><br><span class=\"line\">            plistArray.AddString(<span class=\"string\">&quot;weibosdk&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//设置Info的URL Types （分享外链）</span></span><br><span class=\"line\">            PlistElementArray urlTypes = plist.root.CreateArray(<span class=\"string\">&quot;CFBundleURLTypes&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            PlistElementDict url1 = urlTypes.AddDict();</span><br><span class=\"line\">            url1.SetString(<span class=\"string\">&quot;CFBundleTypeRole&quot;</span>, <span class=\"string\">&quot;Editor&quot;</span>);</span><br><span class=\"line\">            PlistElementArray urlSchemes1 = url1.CreateArray(<span class=\"string\">&quot;CFBundleURLSchemes&quot;</span>);</span><br><span class=\"line\">            urlSchemes1.AddString(<span class=\"string\">&quot;tencent12345678&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            PlistElementDict url2 = urlTypes.AddDict();</span><br><span class=\"line\">            url2.SetString(<span class=\"string\">&quot;CFBundleTypeRole&quot;</span>, <span class=\"string\">&quot;Editor&quot;</span>);</span><br><span class=\"line\">            PlistElementArray urlSchemes2 = url2.CreateArray(<span class=\"string\">&quot;CFBundleURLSchemes&quot;</span>);</span><br><span class=\"line\">            urlSchemes2.AddString(<span class=\"string\">&quot;QQ99999&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//如果plist文件里没有下面的字段，则打开下面代码，若有则注释掉，无需重复添加</span></span><br><span class=\"line\">            <span class=\"comment\">//var dict = plist.root.CreateDict(&quot;App Transport Security Settings&quot;);</span></span><br><span class=\"line\">            <span class=\"comment\">//dict.SetBoolean(&quot;Allow Arbitrary Loads&quot;, true);</span></span><br><span class=\"line\"></span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;NSUserTrackingUsageDescription&quot;</span>, <span class=\"string\">&quot;此APP需要您同意才能使用数据收集功能，收集数据的作用是以便我们对您提供更好的游戏体验&quot;</span>);</span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;NSPhotoLibraryUsageDescription&quot;</span>, <span class=\"string\">&quot;此App需要您的同意才能访问相册&quot;</span>);</span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;NSPhotoLibraryAddUsageDescription&quot;</span>, <span class=\"string\">&quot;此App需要您的同意才能保存截屏图片&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//设置app在应用商店显示的语言</span></span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;CFBundleDevelopmentRegion&quot;</span>, <span class=\"string\">&quot;zh_CN&quot;</span>);</span><br><span class=\"line\">            PlistElementArray plistArray_bundleLocalization = plist.root.CreateArray(<span class=\"string\">&quot;CFBundleLocalizations&quot;</span>);</span><br><span class=\"line\">            plistArray_bundleLocalization.AddString(<span class=\"string\">&quot;zh_CN&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//添加Cpability</span></span><br><span class=\"line\">            ProjectCapabilityManager pcm = <span class=\"keyword\">new</span> ProjectCapabilityManager(projectPath, <span class=\"string\">&quot;Unity-iPhone.entitlements&quot;</span>, <span class=\"string\">&quot;Unity-iPhone&quot;</span>);</span><br><span class=\"line\">            pcm.AddAssociatedDomains(<span class=\"keyword\">new</span> <span class=\"built_in\">string</span>[] &#123; <span class=\"string\">&quot;applinks:mygame.links.com&quot;</span> &#125;);</span><br><span class=\"line\">            pcm.AddPushNotifications(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            pcm.WriteToFile();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 应用修改</span></span><br><span class=\"line\">            plist.WriteToFile(plistPath);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//添加lib方法</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddLibToProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> lib</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.AddFile(<span class=\"string\">&quot;usr/lib/&quot;</span> + lib, <span class=\"string\">&quot;Frameworks/&quot;</span> + lib, PBXSourceTree.Sdk);</span><br><span class=\"line\">            inst.AddFileToBuild(targetGuid, fileGuid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddLocalFrameworkToProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> fileName, <span class=\"built_in\">string</span> filePath</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.AddFile(filePath, <span class=\"string\">&quot;Frameworks/&quot;</span> + fileName, PBXSourceTree.Source);</span><br><span class=\"line\">            inst.AddFileToBuild(targetGuid, fileGuid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddFileToProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> filePathInXcodeProj, <span class=\"built_in\">string</span> filePathInUnityproj</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.AddFile(filePathInUnityproj, filePathInXcodeProj, PBXSourceTree.Source);</span><br><span class=\"line\">            inst.AddFileToBuild(targetGuid, fileGuid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddBundleToProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> fileName, <span class=\"built_in\">string</span> filePath</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.AddFile(filePath, fileName, PBXSourceTree.Source);</span><br><span class=\"line\">            inst.AddFileToBuild(targetGuid, fileGuid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">RemoveBundleFromProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> fileProjectPath</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.FindFileGuidByProjectPath(fileProjectPath);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (fileGuid == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Debug.LogErrorFormat(<span class=\"string\">&quot;RemoveBundleFromProject failed. fileProjectPath: &#123;0&#125;&quot;</span>, fileProjectPath);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                inst.RemoveFileFromBuild(targetGuid, fileGuid);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">MoveBundleTo</span>(<span class=\"params\">PBXProject pbxProject, <span class=\"built_in\">string</span> fromTargetGuid, <span class=\"built_in\">string</span> toTargrtGuid, <span class=\"built_in\">string</span> bundleName, <span class=\"built_in\">string</span> bundlePathRelativeIOS</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> path_aofeibundle = Application.dataPath + <span class=\"string\">&quot;/Plugins/iOS/&quot;</span> + bundlePathRelativeIOS;</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;XcodeBuildPostprocess:OnPostprocessBuild bundleName = &#123;0&#125;, bundlePathInUnity = &#123;1&#125;&quot;</span>, bundleName, path_aofeibundle);</span><br><span class=\"line\"></span><br><span class=\"line\">            AddBundleToProject(pbxProject, toTargrtGuid, bundleName, path_aofeibundle);</span><br><span class=\"line\">            RemoveBundleFromProject(pbxProject, fromTargetGuid, <span class=\"string\">&quot;Frameworks/Plugins/iOS/&quot;</span> + bundlePathRelativeIOS);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Xcode-侧\"><a href=\"#Xcode-侧\" class=\"headerlink\" title=\"Xcode 侧\"></a>Xcode 侧</h3><p>在打 ipa 包的流程中，Xcode 侧无需进行任何 plist，xcodeproj，工程资源文件&#x2F;代码的修改。</p>\n<p>一般在接入 sdk 的过程中，我们仍会使用 Xcode 进行调试，例如在接入某 sdk 时，要求在 plist 中添加参数，那么可以先用 Unity 导出一个 Xcode 工程，在此 Xcode 工程上进行 plist 修改，再打真机包调试，无需重复从 Unity 重新导出工程。</p>\n<p>需要注意的是，在 Xcode 调试期间作出的任何 plist 改动，必须转化为 XcodeBuildPostprocess 的代码。在 Xcode 调试期间新增或修改的任何代码，也要拷贝回 Unity 的工程目录下。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>从本文可以看出，ipa 包体构建的绝大部分的配置操作都是在 Unity 侧实现的，这也就降低了不熟悉 iOS 开发的 Unity 游戏开发人员打 ipa 包的难度。虽然接入一些特殊功能的 sdk 无可避免地要写 native 端的代码，但通常 sdk 方会提供完整的接入代码甚至工程示例。为了方便管理，将 native 端的代码放在 Unity 工程内利于整体维护和项目组成员 review。在 Xcode 侧进行构建和分发只需要少量的点击操作，这个过程越简单，越方便以命令的形式集成至 CI&#x2F;CD 流水线。</p>\n<p>例如按照本文介绍的方法接入 sdk，从 Unity 构建 Xcode 工程，再到 Xcode 打出 ipa 包只需要依次执行以下命令：</p>\n<ol>\n<li>Unity 打 Xcode 工程</li>\n</ol>\n<p>&#x2F;Applications&#x2F;Unity&#x2F;Unity.app&#x2F;Contents&#x2F;MacOS&#x2F;Unity  -batchmode -quit -nographics -executeMethod ProjectBuild.ExportXcodeProject</p>\n<ol>\n<li>归档</li>\n</ol>\n<p>xcodebuild archive -archivePath &#x2F;Users&#x2F;user&#x2F;build&#x2F;mygame -project &#x2F;Users&#x2F;user&#x2F;Documents&#x2F;build&#x2F;Unity-iPhone.xcodeproj -scheme Unity-iPhone</p>\n<ol>\n<li>分发 adhoc</li>\n</ol>\n<p>xcodebuild -exportArchive -archivePath &#x2F;Users&#x2F;user&#x2F;build&#x2F;mygame.xcarchive -exportPath &#x2F;Users&#x2F;user&#x2F;build -exportOptionsPlist &#x2F;Users&#x2F;user&#x2F;User&#x2F;ExportOptions_adhoc.plist</p>\n<ol>\n<li>分发 dis</li>\n</ol>\n<p>xcodebuild -exportArchive -archivePath &#x2F;Users&#x2F;user&#x2F;build&#x2F;mygame.xcarchive -exportPath &#x2F;Users&#x2F;user&#x2F;build -exportOptionsPlist &#x2F;Users&#x2F;user&#x2F;User&#x2F;ExportOptions_appstore.plist</p>\n<ol>\n<li>清理 Xcode 工程</li>\n</ol>\n<p>xcodebuild clean -project &#x2F;Users&#x2F;user&#x2F;Documents&#x2F;build&#x2F;Unity-iPhone.xcodeproj -scheme Unity-iPhone</p>\n<p>受项目复杂度和计算机性能影响，从 Unity 构建一个 ipa 包花费的时间有很大不同。例如一个普通的中型手游项目 + 高性能打包机，完整的出包时间会在 1 小时左右，其中 Unity 的游戏资源打包花费 30 分钟左右，导出 Xcode 工程花费 10 分钟左右，从 Xcode 构建出最终 ipa 包花费 10 分钟左右，杂项（进程启动，git 操作，日志归档，发送报告…）花费 10 分钟左右。</p>\n","site":{"data":{}},"more":"<h3 id=\"Unity-侧\"><a href=\"#Unity-侧\" class=\"headerlink\" title=\"Unity 侧\"></a>Unity 侧</h3><h4 id=\"ipa-包体构建流程\"><a href=\"#ipa-包体构建流程\" class=\"headerlink\" title=\"ipa 包体构建流程\"></a>ipa 包体构建流程</h4><ol>\n<li>在 Mac 上启动 Unity，在 Unity 的 BuildSettings 界面选择 iOS 平台，点击 Build 按钮后即开始导出 XCode 工程。或调用 Unity 命令行工具完成此步操作。</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514334.png\"></p>\n<p>导出后的 Xcode 工程结构如下图</p>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514088.png\"></p>\n<p>2.双击 Unity-iPhone.xcodeproj，打开 Xcode，在 Xcode 顶部栏点击 Product&#x2F;Archive 开始构建档案。或调用 Xcode 命令行工具完成此步操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514353.png\"></p>\n<p>3.在 Xcode 顶部栏点击 Window&#x2F;Organizer 进行分发，根据出包需求选择不同的证书导出对应 ipa 安装包文件。或调用 Xcode 命令行工具完成此步操作。</p>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514124.png\"></p>\n<p>最终导出的 ipa 文件和日志文件如下图</p>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091514818.png\"></p>\n<p>总结：对于使用 Unity 开发的游戏，每次打包都相当于重新产生一个 Xcode 工程。当游戏的美术资源，代码文件，配置文件发生变更后，通常需要重新导出一份新的 Xcode 工程。</p>\n<h4 id=\"Unity-工程目录结构简介\"><a href=\"#Unity-工程目录结构简介\" class=\"headerlink\" title=\"Unity 工程目录结构简介\"></a>Unity 工程目录结构简介</h4><p>不同游戏的 Unity 目录结构不同，其中 Unity 对一些目录做了特殊定义，此类文件夹不能更名，否则 Unity 会识别不到。</p>\n<p>以下列举了一个 Unity 游戏工程的大概目录结构（加粗的为 Unity 特殊定义的目录名）</p>\n<p><strong>Assets</strong></p>\n<p><strong>Library</strong>  &#x2F;&#x2F;Unity 针对 Assets 下的文件生成的适合自身读写的中间文件</p>\n<p><strong>Packages</strong>  &#x2F;&#x2F;存放 Unity Package Manager 扩展包文件</p>\n<p><strong>ProjectSettings</strong>  &#x2F;&#x2F;存放 Unity 项目设置文件</p>\n<p><strong>Temp</strong>  &#x2F;&#x2F;存放临时文件，随 Unity 进程关闭被清空</p>\n<h4 id=\"创建桥接文件\"><a href=\"#创建桥接文件\" class=\"headerlink\" title=\"创建桥接文件\"></a>创建桥接文件</h4><p>1.在 <strong>Assets&#x2F;Plugins&#x2F;iOS</strong> 目录下创建以下文件（文件名称随意）</p>\n<p>2.编辑 MyAppController.h（属于各 Unity 项目的通用做法，网上有很多示例）</p>\n<p>注意点：</p>\n<p>（1）必须继承自 UnityAppController</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  MyAppController.h</span></span><br><span class=\"line\"><span class=\"comment\">//  Unity-iPhone</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> MyAppController_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MyAppController_h</span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;UnityAppController.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">@interface MyAppController : UnityAppController</span><br><span class=\"line\">- (NSString*)BOOLToNSString:(BOOL)val;</span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">/* MyAppController_h */</span></span></span><br></pre></td></tr></table></figure>\n\n<p>3.编辑 MyAppController.mm（也属于各 Unity 项目的通用做法，网上有很多示例）</p>\n<p>注意点：</p>\n<p>（1）最后一行必须写 IMPL_APP_CONTROLLER_SUBCLASS，这是 Unity 提供的宏。Unity 通过这个宏知道要使用我们定制的 MyAppController 而不是使用默认的 UnityAppController。</p>\n<p>（2）新建的函数必须在对应的头文件里提前声明</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  MyAppController.mm</span></span><br><span class=\"line\"><span class=\"comment\">//  Unity-iPhone</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;MyAppController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;UnityAppController.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;SDK/SDK.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;UnityInterface.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">@implementation MyAppController</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//注册app生命周期函数，调用对应的sdk代码</span></span><br><span class=\"line\"><span class=\"comment\">//例如重载程序启动成功之后自动调用的方法</span></span><br><span class=\"line\">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123;</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] addObserver:self selector:@<span class=\"built_in\">selector</span>(paySuc:) name:kPaySuccNotification object:nil];</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] addObserver:self selector:@<span class=\"built_in\">selector</span>(payFail:) name:kPayErrorNotification object:nil];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [[SDK instance] application:application didFinishLaunchingWithOptions:launchOptions];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//也可以写自己开发的代码，BOOL转NSString*，函数需要提前在MyAppController.h声明</span></span><br><span class=\"line\">- (NSString*) BOOLToNSString:(BOOL)val</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(val == <span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123; <span class=\"keyword\">return</span> @<span class=\"string\">&quot;true&quot;</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> @<span class=\"string\">&quot;false&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"type\">void</span>)paySuc:(NSNotification *)notify</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(logToggle)</span><br><span class=\"line\">    &#123; <span class=\"built_in\">NSLog</span>(@<span class=\"string\">&quot;paySuc:%@&quot;</span>, notify.object); &#125;</span><br><span class=\"line\">    NSString *str =  [notify.object description];</span><br><span class=\"line\">    <span class=\"type\">char</span>* arg0 = (<span class=\"type\">char</span>*)[[NSString stringWithFormat:@<span class=\"string\">&quot;paySuc#%@&quot;</span>, str] cStringUsingEncoding:NSUTF8StringEncoding];</span><br><span class=\"line\">    <span class=\"built_in\">UnitySendMessage</span>(<span class=\"string\">&quot;IosMessageReceiver&quot;</span>, <span class=\"string\">&quot;Call&quot;</span>, arg0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"type\">void</span>)payFail:(NSNotification *)notify</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(logToggle)</span><br><span class=\"line\">    &#123; <span class=\"built_in\">NSLog</span>(@<span class=\"string\">&quot;payFail:%@&quot;</span>,notify.object); &#125;</span><br><span class=\"line\">    NSString *str =  [notify.object description];</span><br><span class=\"line\">    <span class=\"type\">char</span>* arg0 = (<span class=\"type\">char</span>*)[[NSString stringWithFormat:@<span class=\"string\">&quot;payFail#%@&quot;</span>, str] cStringUsingEncoding:NSUTF8StringEncoding];</span><br><span class=\"line\">    <span class=\"built_in\">UnitySendMessage</span>(<span class=\"string\">&quot;IosMessageReceiver&quot;</span>, <span class=\"string\">&quot;Call&quot;</span>, arg0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"function\">end</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">IMPL_APP_CONTROLLER_SUBCLASS</span><span class=\"params\">(MyAppController)</span></span>;<span class=\"comment\">//*以MyAppController为启动项</span></span><br></pre></td></tr></table></figure>\n\n<p>4.编辑 NativeCallProxy.h</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  NativeCallProxy.h</span></span><br><span class=\"line\"><span class=\"comment\">//  Unity-iPhone</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> NativeCallProxy_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> NativeCallProxy_h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;NativeCallProxy.h&quot;</span></span></span><br><span class=\"line\">@protocol NativeCallsProtocol</span><br><span class=\"line\"></span><br><span class=\"line\">@required</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">__attribute__ ((<span class=\"built_in\">visibility</span>(<span class=\"string\">&quot;default&quot;</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">@interface FrameworkLibAPI : NSObject</span><br><span class=\"line\"><span class=\"comment\">// call it any time after UnityFrameworkLoad to set object implementing NativeCallsProtocol methods</span></span><br><span class=\"line\">+(<span class=\"type\">void</span>) registerAPIforNativeCalls:(id&lt;NativeCallsProtocol&gt;) aApi;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> BOOL logToggle;</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\">@interface NativeCallProxy : NSObject</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">/* NativeCallProxy_h */</span></span></span><br></pre></td></tr></table></figure>\n\n<p>5.编辑 NativeCallProxy.mm</p>\n<p>注意点：</p>\n<p>(1)被 C#调用的代码必须用 extern “C”包围</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  NativeCallProxy.m</span></span><br><span class=\"line\"><span class=\"comment\">//  Unity-iPhone</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;NativeCallProxy.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;MyAppController.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">@implementation FrameworkLibAPI</span><br><span class=\"line\"></span><br><span class=\"line\">id&lt;NativeCallsProtocol&gt; api = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">+(<span class=\"type\">void</span>) registerAPIforNativeCalls:(id&lt;NativeCallsProtocol&gt;) aApi</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    api = aApi;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">BOOL logToggle = <span class=\"literal\">true</span>;         <span class=\"comment\">//全局变量：日志开关</span></span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">&quot;C&quot;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">invokeMethod</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *method, <span class=\"type\">const</span> <span class=\"type\">char</span> *arg0)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">makeStringCopy</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* string)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">pay</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* data)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">toggleLog</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *data)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">invokeMethod</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *method, <span class=\"type\">const</span> <span class=\"type\">char</span> *arg0)</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    NSString *methodStr = [NSString stringWithUTF8String:method];</span><br><span class=\"line\">    NSString *arg0Str = [NSString stringWithUTF8String:arg0];</span><br><span class=\"line\">    <span class=\"type\">char</span>* returnChar = (<span class=\"type\">char</span>*)<span class=\"built_in\">malloc</span>(<span class=\"number\">1024</span> * <span class=\"built_in\">sizeof</span>(<span class=\"type\">char</span>));</span><br><span class=\"line\">    <span class=\"built_in\">strncpy</span>(returnChar, <span class=\"string\">&quot;&quot;</span>, <span class=\"number\">1024</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(method, <span class=\"string\">&quot;pay&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">pay</span>(arg0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(method, <span class=\"string\">&quot;toggleLog&quot;</span>) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">toggleLog</span>(arg0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"type\">char</span>*)[[NSString stringWithFormat:@<span class=\"string\">&quot;[invokeMethod] method missing:%@&quot;</span>, methodStr] cStringUsingEncoding:NSUTF8StringEncoding];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">toggleLog</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    NSString *string = [NSString stringWithUTF8String:data];</span><br><span class=\"line\">    logToggle = [string isEqualToString:@<span class=\"string\">&quot;1&quot;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">pay</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *data)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    NSString *string = [NSString stringWithUTF8String:data];</span><br><span class=\"line\">    NSArray *array = [string componentsSeparatedByString:@<span class=\"string\">&quot;,&quot;</span>];</span><br><span class=\"line\">    PayParams *params = [PayParams <span class=\"keyword\">new</span>];</span><br><span class=\"line\">    params.roleID = [array objectAtIndex:<span class=\"number\">0</span>];</span><br><span class=\"line\">    params.orderID = [array objectAtIndex:<span class=\"number\">1</span>];</span><br><span class=\"line\">    params.price = @([[array objectAtIndex:<span class=\"number\">2</span>] floatValue]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    [[SDK instance] pay:params];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(logToggle)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(@<span class=\"string\">&quot;invoke pay interface success. roleId = %@, orderID = %@, price = %@&quot;</span>, params.roleID, params.orderID, params.price);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">makeStringCopy</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">char</span>* <span class=\"title\">makeStringCopy</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span>* string)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(string == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span>* res = (<span class=\"type\">char</span>*)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">strlen</span>(string)+<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(res, string);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@implementation NativeCallProxy</span><br><span class=\"line\"></span><br><span class=\"line\">@end</span><br></pre></td></tr></table></figure>\n\n<p>6.在 Assets&#x2F;Scripts 目录下创建以下文件（文件名称随意）</p>\n<p>SdkBridge_iOS.cs  &#x2F;&#x2F;调用 C 代码的 C#文件</p>\n<p>IosMessageReceiver.cs  &#x2F;&#x2F;接收 iOS 代码发送的消息</p>\n<p>7.编辑 SdkBridge_iOS.cs</p>\n<p>注意点：</p>\n<p>（1）invokeMethod 必须用 UNITY_IOS 宏包围，并且与 NativeCallProxy.mm 内的 invokeMethod 完全同名，参数一致（C#的 string 对应 C 的 char*）</p>\n<p>（2）invokeMethod 必须加 extern 关键字，并且加[DllImport(“__Internal”)]特性标签</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Runtime.InteropServices;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SdkBridge_iOS</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\">        [<span class=\"meta\">DllImport(<span class=\"string\">&quot;__Internal&quot;</span>)</span>] <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">extern</span> <span class=\"built_in\">string</span> <span class=\"title\">invokeMethod</span>(<span class=\"params\"><span class=\"built_in\">string</span> method, <span class=\"built_in\">string</span> arg0</span>)</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Init</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GameObject go = <span class=\"keyword\">new</span> GameObject(<span class=\"string\">&quot;IosMessageReceiver&quot;</span>);</span><br><span class=\"line\">            go.AddComponent&lt;IosMessageReceiver&gt;();</span><br><span class=\"line\">            IosMessageReceiver.Event_paySuc += IosMessageReceiver_Event_paySuc;</span><br><span class=\"line\">            IosMessageReceiver.Event_payFail += IosMessageReceiver_Event_payFail;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">InvokeMethod</span>(<span class=\"params\"><span class=\"built_in\">string</span> method, <span class=\"built_in\">string</span> arg0</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;ready invoke method: &#123;0&#125;, arg0: &#123;1&#125;&quot;</span>, method, arg0);</span><br><span class=\"line\">            <span class=\"built_in\">string</span> returnVal = invokeMethod(method, arg0);</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;got return value: &#123;0&#125;&quot;</span>, returnVal);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> returnVal;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Pay</span>(<span class=\"params\"><span class=\"built_in\">float</span> price, <span class=\"built_in\">string</span> orderId, <span class=\"built_in\">string</span> roleId</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            sb.Append(roleId).Append(<span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">            sb.Append(orderId).Append(<span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">            sb.Append(price);</span><br><span class=\"line\">            <span class=\"built_in\">string</span> arg0 = sb.ToString();</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;pay. arg0 = &#123;0&#125;&quot;</span>, arg0); </span><br><span class=\"line\">            InvokeMethod(<span class=\"string\">&quot;pay&quot;</span>, arg0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">IosMessageReceiver_Event_payFail</span>(<span class=\"params\"><span class=\"built_in\">string</span> obj</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;Received payFail. arg = &#123;0&#125;&quot;</span>, obj);</span><br><span class=\"line\">            <span class=\"comment\">//向游戏内发送支付失败消息</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">IosMessageReceiver_Event_paySuc</span>(<span class=\"params\"><span class=\"built_in\">string</span> obj</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;Received paySuc. arg = &#123;0&#125;&quot;</span>, obj);</span><br><span class=\"line\">            <span class=\"comment\">//向游戏内发送支付成功消息</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>8.编辑 IosMessageReceiver.cs</p>\n<p>注意点：</p>\n<p>（1）Call 方法名必须与 MyAppController.mm 的 Call 函数名一致，参数也必须一致。</p>\n<p>（2）IosMessageReceiver.cs 被实例化至 Unity 的场景中的哪个 GameObject 节点下，就要把这个 GameObject 的全路径填到 MyAppController.mm 的 UnitySendMessage 函数的第一个参数内。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Reflection;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">IosMessageReceiver</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">event</span> Action&lt;<span class=\"built_in\">string</span>&gt; Event_paySuc;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">event</span> Action&lt;<span class=\"built_in\">string</span>&gt; Event_payFail;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//invoked by C</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Call</span>(<span class=\"params\"><span class=\"built_in\">string</span> arg0</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;[IosMessageReceiver] received arg0:&#123;0&#125;&quot;</span>, arg0);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(arg0))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Debug.LogError(<span class=\"string\">&quot;[IosMessageReceiver] arg0 is empty.&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">string</span>[] args = arg0.Split(<span class=\"string\">&#x27;#&#x27;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">string</span> method = args[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"built_in\">object</span>[] parameters = <span class=\"keyword\">new</span> <span class=\"built_in\">object</span>[args.Length - <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (args.Length &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i &lt; args.Length; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    parameters[i - <span class=\"number\">1</span>] = args[i];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            MethodInfo methodInfo = <span class=\"keyword\">this</span>.GetType().GetMethod(method, BindingFlags.Instance | BindingFlags.NonPublic);</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (parameters.Length == <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    methodInfo.Invoke(<span class=\"keyword\">this</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    methodInfo.Invoke(<span class=\"keyword\">this</span>, parameters);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (TargetInvocationException e)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Debug.LogErrorFormat(<span class=\"string\">&quot;[IosMessageReceiver] &#123;0&#125;&quot;</span>, e.Message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">paySuc</span>(<span class=\"params\"><span class=\"built_in\">string</span> arg0</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Event_paySuc?.Invoke(arg0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">payFail</span>(<span class=\"params\"><span class=\"built_in\">string</span> arg0</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Event_payFail?.Invoke(arg0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<p>（1）每次 Unity 导出 Xcode 工程后 UnityAppController 都会被复位成模版自动生成的代码，Unity 通过 IMPL_APP_CONTROLLER_SUBCLASS 帮我们解决了想要扩展 UnityAppController 代码的需求。</p>\n<p>（2）在 C#侧使用 string invokeMethod(string arg0)可以完成大部分情况下的 C#到 C 的通信，在 C 侧使用 UnitySendMessage 可以实现 C 到 C#的通信。</p>\n<h4 id=\"在-Unity-设置-Xcode-工程参数\"><a href=\"#在-Unity-设置-Xcode-工程参数\" class=\"headerlink\" title=\"在 Unity 设置 Xcode 工程参数\"></a>在 Unity 设置 Xcode 工程参数</h4><p>可直接在 Unity 编辑器内设置一部分 Xcodeproj 参数，剩下的部分只能通过代码设置。</p>\n<ol>\n<li>Unity 的 ProjectSettings 可以设置项目层面的参数。</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515516.png\"></p>\n<ol>\n<li>在 Unity 内选中*.framework 文件，可以设置依赖的其它 framework。</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515023.png\"></p>\n<ol>\n<li>选中*.mm 文件，可以填写编译选项</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202401091515486.png\"></p>\n<p>以上是能通过 Unity 编辑器直接设置的部分，接下来是使用代码挂接 Unity 的打包后处理钩子函数实现更多参数注入。</p>\n<p>在 Assets&#x2F;Scripts&#x2F;Editor 文件夹下创建 XcodeBuildPostprocess.cs（名字随意）</p>\n<p>下面的代码示例了如何使用 UnityAPI 对 Xcode 工程进行修改。</p>\n<p>注意点：</p>\n<p>（1）方法必须声明为 static 类型，且添加 PostProcessBuildAttribute 特性。Unity 会在打 Xcode 工程的尾声阶段（Xcode 工程已被完整导出）调用所有带该特性标签的方法。</p>\n<p>（2）该代码文件必须放在 Editor 文件夹下，或者其路径中必须包含 Editor，例如 Assets&#x2F;Scripts&#x2F;Editor。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.IO;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor.iOS.Xcode;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEditor.Callbacks;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">XcodeBuildPostprocess</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> UNITY_IOS</span></span><br><span class=\"line\">        [<span class=\"meta\">PostProcessBuildAttribute(100)</span>]</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPostprocessBuild</span>(<span class=\"params\">BuildTarget buildTarget, <span class=\"built_in\">string</span> pathToBuiltProject</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// BuildTarget需为iOS</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (buildTarget != BuildTarget.iOS)</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"comment\">//pathToBuiltProject示例  /Users/user/Documents/build</span></span><br><span class=\"line\">            Debug.Log(<span class=\"string\">&quot;XcodeBuildPostprocess:OnPostprocessBuild start, pathToBuiltProject = &quot;</span> + pathToBuiltProject);</span><br><span class=\"line\">            <span class=\"comment\">// 初始化</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> projectPath = pathToBuiltProject + <span class=\"string\">&quot;/Unity-iPhone.xcodeproj/project.pbxproj&quot;</span>;</span><br><span class=\"line\">            PBXProject pbxProject = <span class=\"keyword\">new</span> PBXProject();</span><br><span class=\"line\">            pbxProject.ReadFromFile(projectPath);</span><br><span class=\"line\">            <span class=\"built_in\">string</span> projectGuid = pbxProject.ProjectGuid();</span><br><span class=\"line\">            <span class=\"built_in\">string</span> unityIphoneGuid = pbxProject.GetUnityMainTargetGuid();</span><br><span class=\"line\">            <span class=\"built_in\">string</span> unityFrameworkGuid = pbxProject.GetUnityFrameworkTargetGuid();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 添加flag</span></span><br><span class=\"line\">            pbxProject.AddBuildProperty(unityFrameworkGuid, <span class=\"string\">&quot;OTHER_LDFLAGS&quot;</span>, <span class=\"string\">&quot;-ObjC&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 关闭Bitcode</span></span><br><span class=\"line\">            pbxProject.SetBuildProperty(unityFrameworkGuid, <span class=\"string\">&quot;ENABLE_BITCODE&quot;</span>, <span class=\"string\">&quot;NO&quot;</span>);</span><br><span class=\"line\">            pbxProject.SetBuildProperty(projectGuid, <span class=\"string\">&quot;ENABLE_BITCODE&quot;</span>, <span class=\"string\">&quot;NO&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//设置app名</span></span><br><span class=\"line\">            pbxProject.SetBuildProperty(projectGuid, <span class=\"string\">&quot;PRODUCT_NAME_APP&quot;</span>, <span class=\"string\">&quot;mygame&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//编译去除arm-v7</span></span><br><span class=\"line\">            <span class=\"comment\">// pbxProject.SetBuildProperty(projectGuid, &quot;VALID_ARCHS&quot;, &quot;arm64&quot;);</span></span><br><span class=\"line\">            <span class=\"comment\">// pbxProject.SetBuildProperty(projectGuid, &quot;VALID_ARCHS&quot;, &quot;arm64e&quot;);</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//设置DEBUG_INFORMATION_FORMAT</span></span><br><span class=\"line\">            <span class=\"comment\">//pbxProject.SetBuildProperty(projectGuid, &quot;DEBUG_INFORMATION_FORMAT&quot;, &quot;dwarf&quot;);</span></span><br><span class=\"line\">            <span class=\"comment\">//打开Enable Objective-C Exceptions</span></span><br><span class=\"line\">            pbxProject.SetBuildProperty(projectGuid, <span class=\"string\">&quot;GCC_ENABLE_OBJC_EXCEPTIONS&quot;</span>, <span class=\"string\">&quot;YES&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//添加lib       </span></span><br><span class=\"line\">            AddLibToProject(pbxProject, unityFrameworkGuid, <span class=\"string\">&quot;libc++.tbd&quot;</span>);</span><br><span class=\"line\">            AddLibToProject(pbxProject, unityFrameworkGuid, <span class=\"string\">&quot;libz.tbd&quot;</span>);</span><br><span class=\"line\">            AddLibToProject(pbxProject, unityFrameworkGuid, <span class=\"string\">&quot;libresolv.tbd&quot;</span>);</span><br><span class=\"line\">            AddLibToProject(pbxProject, unityFrameworkGuid, <span class=\"string\">&quot;libsqlite3.tbd&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//将.bundle从UnityFramework的Copy Bundle Resources转移到Unity-iPhone的Copy Bundle Resources下</span></span><br><span class=\"line\">            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, <span class=\"string\">&quot;whateverSdk.bundle&quot;</span>, <span class=\"string\">&quot;assets/jackSdk.bundle&quot;</span>);</span><br><span class=\"line\">            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, <span class=\"string\">&quot;TencentOpenApi_IOS_Bundle.bundle&quot;</span>, <span class=\"string\">&quot;UMSocial/SocialLibraries/QQ/QQSDK/TencentOpenApi_IOS_Bundle.bundle&quot;</span>);</span><br><span class=\"line\">            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, <span class=\"string\">&quot;WeiboSDK.bundle&quot;</span>, <span class=\"string\">&quot;UMSocial/SocialLibraries/Sina/SinaSDK/WeiboSDK.bundle&quot;</span>);</span><br><span class=\"line\">            MoveBundleTo(pbxProject, unityFrameworkGuid, unityIphoneGuid, <span class=\"string\">&quot;UMSocialSDKResources.bundle&quot;</span>, <span class=\"string\">&quot;UMSocial/UMSocialUI/UMSocialSDKResources.bundle&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//转移plist文件到Xcode工程</span></span><br><span class=\"line\">            AddFileToProject(pbxProject, unityIphoneGuid, <span class=\"string\">&quot;Frameworks/Plugins/iOS/whatever_data_list.plist&quot;</span>, Application.dataPath + <span class=\"string\">&quot;/Plugins/iOS/whatever_data_list.plist&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 应用修改</span></span><br><span class=\"line\">            File.WriteAllText(projectPath, pbxProject.WriteToString());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 修改Info.plist文件</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> plistPath = Path.Combine(pathToBuiltProject, <span class=\"string\">&quot;Info.plist&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> plist = <span class=\"keyword\">new</span> PlistDocument();</span><br><span class=\"line\">            plist.ReadFromFile(plistPath);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//plist植入sdk参数</span></span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;SDK_AppID&quot;</span>, <span class=\"string\">&quot;FFHkfDiesj3-sn2n79khf&quot;</span>);</span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;SDK_AppKEY&quot;</span>, <span class=\"string\">&quot;kDkctwv8FzkSFc63fvf-sSFhbM47Oas0dQfZf&quot;</span>);</span><br><span class=\"line\">            PlistElementArray plistArray = plist.root.CreateArray(<span class=\"string\">&quot;LSApplicationQueriesSchemes&quot;</span>);</span><br><span class=\"line\">            plistArray.AddString(<span class=\"string\">&quot;wechat&quot;</span>);</span><br><span class=\"line\">            plistArray.AddString(<span class=\"string\">&quot;mqq&quot;</span>);</span><br><span class=\"line\">            plistArray.AddString(<span class=\"string\">&quot;weibosdk&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//设置Info的URL Types （分享外链）</span></span><br><span class=\"line\">            PlistElementArray urlTypes = plist.root.CreateArray(<span class=\"string\">&quot;CFBundleURLTypes&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            PlistElementDict url1 = urlTypes.AddDict();</span><br><span class=\"line\">            url1.SetString(<span class=\"string\">&quot;CFBundleTypeRole&quot;</span>, <span class=\"string\">&quot;Editor&quot;</span>);</span><br><span class=\"line\">            PlistElementArray urlSchemes1 = url1.CreateArray(<span class=\"string\">&quot;CFBundleURLSchemes&quot;</span>);</span><br><span class=\"line\">            urlSchemes1.AddString(<span class=\"string\">&quot;tencent12345678&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            PlistElementDict url2 = urlTypes.AddDict();</span><br><span class=\"line\">            url2.SetString(<span class=\"string\">&quot;CFBundleTypeRole&quot;</span>, <span class=\"string\">&quot;Editor&quot;</span>);</span><br><span class=\"line\">            PlistElementArray urlSchemes2 = url2.CreateArray(<span class=\"string\">&quot;CFBundleURLSchemes&quot;</span>);</span><br><span class=\"line\">            urlSchemes2.AddString(<span class=\"string\">&quot;QQ99999&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//如果plist文件里没有下面的字段，则打开下面代码，若有则注释掉，无需重复添加</span></span><br><span class=\"line\">            <span class=\"comment\">//var dict = plist.root.CreateDict(&quot;App Transport Security Settings&quot;);</span></span><br><span class=\"line\">            <span class=\"comment\">//dict.SetBoolean(&quot;Allow Arbitrary Loads&quot;, true);</span></span><br><span class=\"line\"></span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;NSUserTrackingUsageDescription&quot;</span>, <span class=\"string\">&quot;此APP需要您同意才能使用数据收集功能，收集数据的作用是以便我们对您提供更好的游戏体验&quot;</span>);</span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;NSPhotoLibraryUsageDescription&quot;</span>, <span class=\"string\">&quot;此App需要您的同意才能访问相册&quot;</span>);</span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;NSPhotoLibraryAddUsageDescription&quot;</span>, <span class=\"string\">&quot;此App需要您的同意才能保存截屏图片&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//设置app在应用商店显示的语言</span></span><br><span class=\"line\">            plist.root.SetString(<span class=\"string\">&quot;CFBundleDevelopmentRegion&quot;</span>, <span class=\"string\">&quot;zh_CN&quot;</span>);</span><br><span class=\"line\">            PlistElementArray plistArray_bundleLocalization = plist.root.CreateArray(<span class=\"string\">&quot;CFBundleLocalizations&quot;</span>);</span><br><span class=\"line\">            plistArray_bundleLocalization.AddString(<span class=\"string\">&quot;zh_CN&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//添加Cpability</span></span><br><span class=\"line\">            ProjectCapabilityManager pcm = <span class=\"keyword\">new</span> ProjectCapabilityManager(projectPath, <span class=\"string\">&quot;Unity-iPhone.entitlements&quot;</span>, <span class=\"string\">&quot;Unity-iPhone&quot;</span>);</span><br><span class=\"line\">            pcm.AddAssociatedDomains(<span class=\"keyword\">new</span> <span class=\"built_in\">string</span>[] &#123; <span class=\"string\">&quot;applinks:mygame.links.com&quot;</span> &#125;);</span><br><span class=\"line\">            pcm.AddPushNotifications(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            pcm.WriteToFile();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 应用修改</span></span><br><span class=\"line\">            plist.WriteToFile(plistPath);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//添加lib方法</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddLibToProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> lib</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.AddFile(<span class=\"string\">&quot;usr/lib/&quot;</span> + lib, <span class=\"string\">&quot;Frameworks/&quot;</span> + lib, PBXSourceTree.Sdk);</span><br><span class=\"line\">            inst.AddFileToBuild(targetGuid, fileGuid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddLocalFrameworkToProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> fileName, <span class=\"built_in\">string</span> filePath</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.AddFile(filePath, <span class=\"string\">&quot;Frameworks/&quot;</span> + fileName, PBXSourceTree.Source);</span><br><span class=\"line\">            inst.AddFileToBuild(targetGuid, fileGuid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddFileToProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> filePathInXcodeProj, <span class=\"built_in\">string</span> filePathInUnityproj</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.AddFile(filePathInUnityproj, filePathInXcodeProj, PBXSourceTree.Source);</span><br><span class=\"line\">            inst.AddFileToBuild(targetGuid, fileGuid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddBundleToProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> fileName, <span class=\"built_in\">string</span> filePath</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.AddFile(filePath, fileName, PBXSourceTree.Source);</span><br><span class=\"line\">            inst.AddFileToBuild(targetGuid, fileGuid);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">RemoveBundleFromProject</span>(<span class=\"params\">PBXProject inst, <span class=\"built_in\">string</span> targetGuid, <span class=\"built_in\">string</span> fileProjectPath</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> fileGuid = inst.FindFileGuidByProjectPath(fileProjectPath);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (fileGuid == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Debug.LogErrorFormat(<span class=\"string\">&quot;RemoveBundleFromProject failed. fileProjectPath: &#123;0&#125;&quot;</span>, fileProjectPath);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                inst.RemoveFileFromBuild(targetGuid, fileGuid);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">MoveBundleTo</span>(<span class=\"params\">PBXProject pbxProject, <span class=\"built_in\">string</span> fromTargetGuid, <span class=\"built_in\">string</span> toTargrtGuid, <span class=\"built_in\">string</span> bundleName, <span class=\"built_in\">string</span> bundlePathRelativeIOS</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">string</span> path_aofeibundle = Application.dataPath + <span class=\"string\">&quot;/Plugins/iOS/&quot;</span> + bundlePathRelativeIOS;</span><br><span class=\"line\">            Debug.LogFormat(<span class=\"string\">&quot;XcodeBuildPostprocess:OnPostprocessBuild bundleName = &#123;0&#125;, bundlePathInUnity = &#123;1&#125;&quot;</span>, bundleName, path_aofeibundle);</span><br><span class=\"line\"></span><br><span class=\"line\">            AddBundleToProject(pbxProject, toTargrtGuid, bundleName, path_aofeibundle);</span><br><span class=\"line\">            RemoveBundleFromProject(pbxProject, fromTargetGuid, <span class=\"string\">&quot;Frameworks/Plugins/iOS/&quot;</span> + bundlePathRelativeIOS);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Xcode-侧\"><a href=\"#Xcode-侧\" class=\"headerlink\" title=\"Xcode 侧\"></a>Xcode 侧</h3><p>在打 ipa 包的流程中，Xcode 侧无需进行任何 plist，xcodeproj，工程资源文件&#x2F;代码的修改。</p>\n<p>一般在接入 sdk 的过程中，我们仍会使用 Xcode 进行调试，例如在接入某 sdk 时，要求在 plist 中添加参数，那么可以先用 Unity 导出一个 Xcode 工程，在此 Xcode 工程上进行 plist 修改，再打真机包调试，无需重复从 Unity 重新导出工程。</p>\n<p>需要注意的是，在 Xcode 调试期间作出的任何 plist 改动，必须转化为 XcodeBuildPostprocess 的代码。在 Xcode 调试期间新增或修改的任何代码，也要拷贝回 Unity 的工程目录下。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>从本文可以看出，ipa 包体构建的绝大部分的配置操作都是在 Unity 侧实现的，这也就降低了不熟悉 iOS 开发的 Unity 游戏开发人员打 ipa 包的难度。虽然接入一些特殊功能的 sdk 无可避免地要写 native 端的代码，但通常 sdk 方会提供完整的接入代码甚至工程示例。为了方便管理，将 native 端的代码放在 Unity 工程内利于整体维护和项目组成员 review。在 Xcode 侧进行构建和分发只需要少量的点击操作，这个过程越简单，越方便以命令的形式集成至 CI&#x2F;CD 流水线。</p>\n<p>例如按照本文介绍的方法接入 sdk，从 Unity 构建 Xcode 工程，再到 Xcode 打出 ipa 包只需要依次执行以下命令：</p>\n<ol>\n<li>Unity 打 Xcode 工程</li>\n</ol>\n<p>&#x2F;Applications&#x2F;Unity&#x2F;Unity.app&#x2F;Contents&#x2F;MacOS&#x2F;Unity  -batchmode -quit -nographics -executeMethod ProjectBuild.ExportXcodeProject</p>\n<ol>\n<li>归档</li>\n</ol>\n<p>xcodebuild archive -archivePath &#x2F;Users&#x2F;user&#x2F;build&#x2F;mygame -project &#x2F;Users&#x2F;user&#x2F;Documents&#x2F;build&#x2F;Unity-iPhone.xcodeproj -scheme Unity-iPhone</p>\n<ol>\n<li>分发 adhoc</li>\n</ol>\n<p>xcodebuild -exportArchive -archivePath &#x2F;Users&#x2F;user&#x2F;build&#x2F;mygame.xcarchive -exportPath &#x2F;Users&#x2F;user&#x2F;build -exportOptionsPlist &#x2F;Users&#x2F;user&#x2F;User&#x2F;ExportOptions_adhoc.plist</p>\n<ol>\n<li>分发 dis</li>\n</ol>\n<p>xcodebuild -exportArchive -archivePath &#x2F;Users&#x2F;user&#x2F;build&#x2F;mygame.xcarchive -exportPath &#x2F;Users&#x2F;user&#x2F;build -exportOptionsPlist &#x2F;Users&#x2F;user&#x2F;User&#x2F;ExportOptions_appstore.plist</p>\n<ol>\n<li>清理 Xcode 工程</li>\n</ol>\n<p>xcodebuild clean -project &#x2F;Users&#x2F;user&#x2F;Documents&#x2F;build&#x2F;Unity-iPhone.xcodeproj -scheme Unity-iPhone</p>\n<p>受项目复杂度和计算机性能影响，从 Unity 构建一个 ipa 包花费的时间有很大不同。例如一个普通的中型手游项目 + 高性能打包机，完整的出包时间会在 1 小时左右，其中 Unity 的游戏资源打包花费 30 分钟左右，导出 Xcode 工程花费 10 分钟左右，从 Xcode 构建出最终 ipa 包花费 10 分钟左右，杂项（进程启动，git 操作，日志归档，发送报告…）花费 10 分钟左右。</p>\n"},{"title":"测试文档","author":"epya15","date":"2023-01-08T17:00:00.000Z","img":"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039263be09.jpg","excerpt":"","_content":"撒大声地\n","source":"_posts/测试文档.md","raw":"title: 测试文档\nauthor: epya15\ntags:\n\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 01:00:00\nimg: https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039263be09.jpg\nexcerpt: ''\n---\n撒大声地\n","slug":"测试文档","published":1,"updated":"2024-02-02T06:18:03.409Z","_id":"clrafu6ib002u08vqb4t1gt0v","comments":1,"layout":"post","photos":[],"link":"","content":"<p>撒大声地</p>\n","site":{"data":{}},"more":"<p>撒大声地</p>\n"},{"_content":"title: 对超过2G的apk重新进行4字节对齐并做v1+v2签名\nauthor: cypunberk.admin\ntags:\n  - Android\n\n  - 打包\n    categories:\n\n  - Android\n\n  - Unity\n    date: 2023-04-20 13:51:00\n    \n    img: https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039263be09.jpg\n\n###### 工具准备\n- zipalign2G.exe文件下载: <i class=\"fa fa-download\"></i> [zipalign2G.exe](https://download.csdn.net/download/liyingzai/13216149?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-8-13216149-blog-8109883.235%5Ev29%5Epc_relevant_default_base3&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-8-13216149-blog-8109883.235%5Ev29%5Epc_relevant_default_base3&utm_relevant_index=8) \n- apksigner.jar（一般位于AndroidSDK的build-tools文件夹内）\n- keystore文件，key-alias，key-password信息\n\n###### 操作步骤\n假设zipalign2G.exe，apksigner.jar，apk包，keystore的绝对路径位于D:\\\\\n1.对apk重新进行4字节对齐，命令如下  \n>D:\\zipalign2G.exe -f -v 4 D:\\input.apk D:\\output_aligned.apk  \n\n提示Verification succesful即为成功\n\n2.进行v1+v2签名，命令如下  \n>java -jar D:\\apksigner.jar sign --ks D:\\myapk.keystore --ks-key-alias myaliasname --ks-pass pass:12345678 --key-pass pass:12345678 --out D:\\output_signed.apk D:\\output_aligned.apk  \n\n3.通过以下命令验证是否签名成功  \n>java -jar D:\\apksigner.jar verify -v D:\\output_signed.apk  \n\n若出现  \n>Verifies  \n>Verified using v1 scheme (JAR signing): true  \n>Verified using v2 scheme (APK Signature Scheme v2): true  \n\n说明签名成功  \n\n此时的包就可以安装到Android 11版本以上的手机了。","source":"_posts/对超过2G的apk重新进行4字节对齐并做v1-v2签名.md","raw":"title: 对超过2G的apk重新进行4字节对齐并做v1+v2签名\nauthor: cypunberk.admin\ntags:\n  - Android\n\n  - 打包\n    categories:\n\n  - Android\n\n  - Unity\n    date: 2023-04-20 13:51:00\n    \n    img: https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039263be09.jpg\n\n###### 工具准备\n- zipalign2G.exe文件下载: <i class=\"fa fa-download\"></i> [zipalign2G.exe](https://download.csdn.net/download/liyingzai/13216149?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-8-13216149-blog-8109883.235%5Ev29%5Epc_relevant_default_base3&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-8-13216149-blog-8109883.235%5Ev29%5Epc_relevant_default_base3&utm_relevant_index=8) \n- apksigner.jar（一般位于AndroidSDK的build-tools文件夹内）\n- keystore文件，key-alias，key-password信息\n\n###### 操作步骤\n假设zipalign2G.exe，apksigner.jar，apk包，keystore的绝对路径位于D:\\\\\n1.对apk重新进行4字节对齐，命令如下  \n>D:\\zipalign2G.exe -f -v 4 D:\\input.apk D:\\output_aligned.apk  \n\n提示Verification succesful即为成功\n\n2.进行v1+v2签名，命令如下  \n>java -jar D:\\apksigner.jar sign --ks D:\\myapk.keystore --ks-key-alias myaliasname --ks-pass pass:12345678 --key-pass pass:12345678 --out D:\\output_signed.apk D:\\output_aligned.apk  \n\n3.通过以下命令验证是否签名成功  \n>java -jar D:\\apksigner.jar verify -v D:\\output_signed.apk  \n\n若出现  \n>Verifies  \n>Verified using v1 scheme (JAR signing): true  \n>Verified using v2 scheme (APK Signature Scheme v2): true  \n\n说明签名成功  \n\n此时的包就可以安装到Android 11版本以上的手机了。","slug":"对超过2G的apk重新进行4字节对齐并做v1-v2签名","published":1,"date":"2024-01-12T08:40:49.751Z","updated":"2024-02-02T06:20:16.246Z","_id":"clrafu6ib002z08vqbqzh0w4j","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>title: 对超过2G的apk重新进行4字节对齐并做v1+v2签名<br>author: cypunberk.admin<br>tags:</p>\n<ul>\n<li><p>Android</p>\n</li>\n<li><p>打包<br>categories:</p>\n</li>\n<li><p>Android</p>\n</li>\n<li><p>Unity<br>date: 2023-04-20 13:51:00</p>\n<p>img: <a href=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039263be09.jpg\">https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039263be09.jpg</a></p>\n</li>\n</ul>\n<h6 id=\"工具准备\"><a href=\"#工具准备\" class=\"headerlink\" title=\"工具准备\"></a>工具准备</h6><ul>\n<li>zipalign2G.exe文件下载: <i class=\"fa fa-download\"></i> <a href=\"https://download.csdn.net/download/liyingzai/13216149?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-8-13216149-blog-8109883.235%5Ev29%5Epc_relevant_default_base3&depth_1-utm_source=distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-8-13216149-blog-8109883.235%5Ev29%5Epc_relevant_default_base3&utm_relevant_index=8\">zipalign2G.exe</a> </li>\n<li>apksigner.jar（一般位于AndroidSDK的build-tools文件夹内）</li>\n<li>keystore文件，key-alias，key-password信息</li>\n</ul>\n<h6 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h6><p>假设zipalign2G.exe，apksigner.jar，apk包，keystore的绝对路径位于D:\\<br>1.对apk重新进行4字节对齐，命令如下  </p>\n<blockquote>\n<p>D:\\zipalign2G.exe -f -v 4 D:\\input.apk D:\\output_aligned.apk  </p>\n</blockquote>\n<p>提示Verification succesful即为成功</p>\n<p>2.进行v1+v2签名，命令如下  </p>\n<blockquote>\n<p>java -jar D:\\apksigner.jar sign –ks D:\\myapk.keystore –ks-key-alias myaliasname –ks-pass pass:12345678 –key-pass pass:12345678 –out D:\\output_signed.apk D:\\output_aligned.apk  </p>\n</blockquote>\n<p>3.通过以下命令验证是否签名成功  </p>\n<blockquote>\n<p>java -jar D:\\apksigner.jar verify -v D:\\output_signed.apk  </p>\n</blockquote>\n<p>若出现  </p>\n<blockquote>\n<p>Verifies<br>Verified using v1 scheme (JAR signing): true<br>Verified using v2 scheme (APK Signature Scheme v2): true  </p>\n</blockquote>\n<p>说明签名成功  </p>\n<p>此时的包就可以安装到Android 11版本以上的手机了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>title: 对超过2G的apk重新进行4字节对齐并做v1+v2签名<br>author: cypunberk.admin<br>tags:</p>\n<ul>\n<li><p>Android</p>\n</li>\n<li><p>打包<br>categories:</p>\n</li>\n<li><p>Android</p>\n</li>\n<li><p>Unity<br>date: 2023-04-20 13:51:00</p>\n<p>img: <a href=\"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039263be09.jpg\">https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/591039263be09.jpg</a></p>\n</li>\n</ul>\n<h6 id=\"工具准备\"><a href=\"#工具准备\" class=\"headerlink\" title=\"工具准备\"></a>工具准备</h6><ul>\n<li>zipalign2G.exe文件下载: <i class=\"fa fa-download\"></i> <a href=\"https://download.csdn.net/download/liyingzai/13216149?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-8-13216149-blog-8109883.235%5Ev29%5Epc_relevant_default_base3&depth_1-utm_source=distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-8-13216149-blog-8109883.235%5Ev29%5Epc_relevant_default_base3&utm_relevant_index=8\">zipalign2G.exe</a> </li>\n<li>apksigner.jar（一般位于AndroidSDK的build-tools文件夹内）</li>\n<li>keystore文件，key-alias，key-password信息</li>\n</ul>\n<h6 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h6><p>假设zipalign2G.exe，apksigner.jar，apk包，keystore的绝对路径位于D:\\<br>1.对apk重新进行4字节对齐，命令如下  </p>\n<blockquote>\n<p>D:\\zipalign2G.exe -f -v 4 D:\\input.apk D:\\output_aligned.apk  </p>\n</blockquote>\n<p>提示Verification succesful即为成功</p>\n<p>2.进行v1+v2签名，命令如下  </p>\n<blockquote>\n<p>java -jar D:\\apksigner.jar sign –ks D:\\myapk.keystore –ks-key-alias myaliasname –ks-pass pass:12345678 –key-pass pass:12345678 –out D:\\output_signed.apk D:\\output_aligned.apk  </p>\n</blockquote>\n<p>3.通过以下命令验证是否签名成功  </p>\n<blockquote>\n<p>java -jar D:\\apksigner.jar verify -v D:\\output_signed.apk  </p>\n</blockquote>\n<p>若出现  </p>\n<blockquote>\n<p>Verifies<br>Verified using v1 scheme (JAR signing): true<br>Verified using v2 scheme (APK Signature Scheme v2): true  </p>\n</blockquote>\n<p>说明签名成功  </p>\n<p>此时的包就可以安装到Android 11版本以上的手机了。</p>\n"},{"title":"Markdown常用语法","author":"epya15","date":"2023-01-09T07:00:00.000Z","img":"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/5910392d25805.jpg","excerpt":"Markdown语法","_content":"本文记录了书写博文时常用的Markdown语法和Html标签\n\nMarkdown官方文档：https://markdown.tw/  \nhttps://markdown.com.cn/basic-syntax/  \n推荐阅读：\nhttps://xuxiaoshi.gitee.io/Hexo%E9%97%AE%E9%A2%98-Hexo%E5%86%99%E4%BD%9C%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/\n本博客网站是基于Bamboo主题修改的，以下是Bamboo作者的Markdown语法博客，实现了很多额外的效果。\nhttps://yuang01.github.io/categories/%E5%89%8D%E7%AB%AF/\n\n\n## 文本\n### 单行文本  \n这是一行示例文本，没有任何语法规则。\n### 多行文本\n这是第一行，在本行结尾处键入2个空格再回车，即可开启第二行，只键入回车是不会换行的。  \n这是第二行。\n### 文本缩进与空格\n　本行采用了1个汉字的缩进，方法为在这句话前面键入一个**全角空格**。同样地，我们也可以键入多个全角空格实现多层次缩进。  \n　　　　本行采用了4个汉字（即8个字节）的缩进。在前方键入了4个全角空格。  \n　　　　在Markdown的语法中，半角空格无论连续打多少个，都只能产生1个空格，这和Word，记事本等软件的使用习惯截然不同。因此若想在文本中增加大量空隙，可以选择使用连续的全角空格。就　　像　　这　　样。  \n<span id=\"jump1\"></span>\n### 区块文本\n区块文本适用于展示诗歌，名言，代码等内容，语法为在文本段上下使用\\`\\`\\`包夹，例如：\n```\n　这是一段区块文本，能够拥有自己的框框，感觉这句话很重要。\n```\n此外，使用单个\\`包夹可以在一行文本内突出某些文字，例如`美丽且突出`的我\n### 标题文本\n在行首插入1到6个# ，各对应到标题1到6阶，例如：  \n```\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n需要注意的是，只有1到4级标题才会被文章目录收录。\n\n以下为Bamboo主题的定制标题样式，依赖额外js代码实现，不属于基础的Markdown语法：  \n```\n{% title h1, 这是一级标题 %}\n{% title h6, 这是六级标题, red %}\n{% titleB h5, 这是五级标题, #895546 %}\n```\n{% title h1, 这是一级标题 %}\n{% title h6, 这是六级标题, red %}\n{% titleB h5, 这是五级标题, #895546 %}  \n\n### 引用\n\n```\n>这是一个块引用\n>>这是一个二层块引用\n>\n>返回到第一层\n```\n\n>这是一个块引用\n>>这是一个二层块引用\n>\n>返回到第一层\n\n```\n>这是一个块引用\n>>这是一个二层块引用\n>这样无法返回到第一层\n```\n\n>这是一个块引用\n>>这是一个二层块引用\n>这样无法返回到第一层\n\n### 文本加粗，倾斜，上下标，删除线，下划线，大小号\n（MarkDown兼容HTML语言,可直接使用HTML的语法）  \n在Markdown中只需在文本前后打上星号,即可将包夹的文字**加粗**或*倾斜*：  \n```\n**想要加粗的内容**\n*想要倾斜的内容*\n```\n<sup>上标</sup>和<sub>下标</sub>的写法：\n```\n这是<sup>上标</sup>和<sub>下标</sub>\n```\n<s>删除线</s>和<u>下划线</u>的写法：\n```\n<s>删除线</s>和<u>下划线</u>\n```\n<small>小号文本</small> 正常文本 <big>大号文本</big>：\n```\n<small>小号文本</small> 正常文本 <big>大号文本</big>\n```\n文本大小号的标签可以嵌套，例如：\n```\n<big><big><big><big><big><big><big>超巨大号文本</big></big></big></big></big></big></big> \n```\n<big><big><big><big><big><big><big>超巨大号文本</big></big></big></big></big></big></big>   \n\n以下为不太常用到的文本修饰，属于Bamboo主题的定制样式，依赖额外js代码实现，不属于基础的Markdown语法：  \n```\n带 {% emp 着重号 %} 的文本\n带 {% wavy 波浪线 %} 的文本\n键盘样式的文本 {% kbd command %} + {% kbd D %}\n密码样式的文本：{% psw 这里没有验证码 %}\n<span id=\"jump1\"></span>\n```\n带 {% emp 着重号 %} 的文本  \n带 {% wavy 波浪线 %} 的文本  \n键盘样式的文本 {% kbd command %} + {% kbd D %}  \n密码样式的文本：{% psw 您的验证码为：**** %}  \n\n### 超链接\n\n[链接到百度](https://www.baidu.com)  \n[链接到站内页](/about/)  \n[网络图片](https://www.baidu.com/img/bd_logo1.png?where=super)  \n[站点icon](/medias/logo.jpg)  \n[跳转到页面内某一位置](#jump1)\n```\n[链接到百度](https://www.baidu.com)  \n[链接到站内页](/about/)\n[网络图片](https://www.baidu.com/img/bd_logo1.png?where=super)\n[站点icon](/medias/logo.jpg)\n[跳转到页面内某一位置](#jump1)\n注意，需要在跳转的目的地写上对应标签，jump1名字可自定义\n<span id=\"jump1\"></span>\n```\n\n### 分割线\n可以在一行中用三个或以上的星号、减号、下划线来建立一个分割线。例如：  \n我是分割线上面的文字\n***\n我是分割线下面的文字\n\n### 小图标\n\n想了解小图标更多使用方式，可参考以下教程：  \n[Font Awesome 图标](https://www.runoob.com/font-awesome/fontawesome-tutorial.html  )  \n\n\n```\n<i class=\"fa fa-pencil\"></i> 铅笔　\n<i class=\"fa fa-cloud-upload\"></i> 上传  \n<i class=\"fa fa-download\"></i> 下载　\n<i class=\"fa fa-download fa-lg\"></i> 下载变大 33%　\n<i class=\"fa fa-download fa-2x\" style=\"color:red;\"></i> 下载两倍大\n<i class=\"fa fa-refresh fa-spin\"></i>  fa-spin 类可以让图标旋转  \n<i class=\"fa fa-spinner fa-pulse\"></i> fa-pulse 类可以使图标以 8 步为周期进行旋转。\n```\n<i class=\"fa fa-pencil\"></i> 铅笔  \n<i class=\"fa fa-download\"></i> 下载　  \n<i class=\"fa fa-download fa-lg\"></i> 下载变大(33%)　  \n<i class=\"fa fa-download fa-2x\" style=\"color:red;\"></i> 下载两倍大且变成红色  \n<i class=\"fa fa-refresh fa-spin\"></i>  fa-spin 类可以让图标旋转  \n<i class=\"fa fa-spinner fa-pulse\"></i> fa-pulse 类可以使图标以 8 步为周期进行旋转。\n\n\n### 文本变色\n```\n<font color=\"red\">红色</font>\n<font color=\"#00D239\">绿色</font>  //00D239为十六进制RGB颜色代码，前两位为R，中间两位为G，后两位为B\n```\n<font color=\"red\">变成红色后，</font><font color=\"#00D239\">我又变成了绿色</font>\n### 文本底色\n添加文本底色可以模拟记号笔的效果：  \n```\n本文仅适合<font style=\"background: orange\">18岁以上</font>儿童观看\n```\n本文仅适合<font style=\"background: orange\">18岁以上</font>儿童观看\n### 特殊符号\n以下列出了一些特殊符号，可在博文中按需使用  \n\n▍▏➥→☛➨☑✔✘✚☷⊙●○⊕◎Θ⊙¤㊣㈱★☆◆◇◣◢◥▲▼⊿◤◥ ▷◁▶◀△◇◆▽▂▃▄▅▆▇██■▓□〓≡ ╝╚╔ ╗╬ ═ ╓ ╩ ┠ ┨┯ ┷┏┓┗┛┳⊥『』┌ ┐└ ┘∟↑↓→←↘↙┇┅ ﹉﹊﹍﹎╭ ╮╰ ╯∵∴‖︴﹏﹋﹌〖〗·≈～※∪∈の℡§∮ξ№∑⌒ζω＊≮≯ ＋－×÷±／＝∫∝ ∧∨∏‖∠≌∽Ψ〓￥〒￠￡♀♂√∩¤≡①②③④⑤⑥⑦⑧⑨⑩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇\n\n### 左右对齐，居中\n```\nMr.Cindy，你好：\n<center>这是居中的写法</center>\n<div style=\"text-align:right\">2023年1月23日</div>\n```\nMr.Cindy，你好：\n<center>这是居中的写法</center>\n<div style=\"text-align:right\">2023年1月23日</div>\n\n## 图表\n### 列表\n```\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n      - 第一项嵌套的第二个元素嵌套的第一个元素\n        -  第一项嵌套的第二个元素嵌套的第一个元素嵌套的第一个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n      - 第二项嵌套的第一个元素嵌套的第一个元素\n    - 第二项嵌套的第二元素\n```\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n      - 第一项嵌套的第二个元素嵌套的第一个元素\n        -  第一项嵌套的第二个元素嵌套的第一个元素嵌套的第一个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n      - 第二项嵌套的第一个元素嵌套的第一个元素\n    - 第二项嵌套的第二元素\n\n\n### 表格\n```\n|水果|颜色|甜度|价格|\n|---|:---:|:---|---:| \n|草莓|红色|★|160|\n|葡萄干|紫|★★★|5000|\n|默认对齐|居中|左对齐|右对齐|\n```\n|水果|颜色|甜度|价格|\n|---|:---:|:---|---:| \n|草莓|红色|★|160|\n|葡萄干|紫|★★★|5000|\n|默认对齐|居中|左对齐|右对齐|\n\n（在手机浏览器不生效？博主也发现了这个问题）\n\n### 选项卡\n```\n{% tabs tab-id %}\n<!-- tab 栏目1 -->\n栏目1的内容\n<!-- endtab -->\n<!-- tab 栏目2 -->\n栏目2的内容\n<!-- endtab -->\n{% endtabs %}\n```\n{% tabs tab-id %}\n<!-- tab 栏目1 -->\n栏目1的内容\n<!-- endtab -->\n<!-- tab 栏目2 -->\n栏目2的内容\n<!-- endtab -->\n{% endtabs %}\n\n### 时间线\n```\n{% timeline %}\n{% timenode 2021-01-01 [1.0.3 -> 1.0.3](https://github.com/yuang01/hexo-theme-bamboo) %}\n完成了工作A\n工作B继续延期\n{% endtimenode %}\n{% timenode 2020-08-15 [1.0.2 -> 1.0.2](https://github.com/yuang01/hexo-theme-bamboo) %}\n工作B决定延期\n{% endtimenode %}\n{% timenode 2020-08-08 [1.0.0 -> 1.0.0](https://github.com/yuang01/hexo-theme-bamboo) %}\n进行工作A\n进行工作B\n{% endtimenode %}\n{% endtimeline %}\n```\n{% timeline %}\n{% timenode 2021-01-01 [1.0.3 -> 1.0.3](https://github.com/yuang01/hexo-theme-bamboo) %}\n完成了工作A\n工作B继续延期\n{% endtimenode %}\n{% timenode 2020-08-15 [1.0.2 -> 1.0.2](https://github.com/yuang01/hexo-theme-bamboo) %}\n工作B决定延期\n{% endtimenode %}\n{% timenode 2020-08-08 [1.0.0 -> 1.0.0](https://github.com/yuang01/hexo-theme-bamboo) %}\n进行工作A\n进行工作B\n{% endtimenode %}\n{% endtimeline %}\n\n## 多媒体\n### 图片\n```\n<img src=\"https://www.baidu.com/img/bd_logo1.png?where=super\" width=\"50%\" height=\"50%\" /> \n```\n效果：\n<img src=\"https://www.baidu.com/img/bd_logo1.png?where=super\" width=\"50%\" height=\"50%\" /> \n\n\n### 网站小窗\n```\n<iframe name=\"斗鱼首页\" width=\"100%\" height=\"540px\" frameborder=\"0\" src=\"https://www.douyu.com/\"></iframe>\n```\n效果：\n<iframe name=\"斗鱼首页\" width=\"100%\" height=\"540px\" frameborder=\"0\" src=\"https://www.douyu.com/\"></iframe>  \n\n### 视频\n\n#### 引用视频源\n该方式引用视频无法在markdown编辑软件中实时预览\n```\n{% video  https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4 %}\n```\n效果：\n{% video  https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4 %}\n\n换用`<video>`标签的方式则可以实时预览  \n\n```\n<video width=\"480\" controls loop align-items: center src=\"https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4\" />\n```\n\n<video width=\"480\" controls loop align-items: center src=\"https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4\" />","source":"_posts/博客搭建/Markdown常用语法.md","raw":"title: Markdown常用语法\nauthor: epya15\ntags:\n\n  - 博客\ncategories:\n  - 博客搭建\ndate: 2023-01-09 15:00:00\nimg: https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/5910392d25805.jpg\nexcerpt: 'Markdown语法'\n---\n本文记录了书写博文时常用的Markdown语法和Html标签\n\nMarkdown官方文档：https://markdown.tw/  \nhttps://markdown.com.cn/basic-syntax/  \n推荐阅读：\nhttps://xuxiaoshi.gitee.io/Hexo%E9%97%AE%E9%A2%98-Hexo%E5%86%99%E4%BD%9C%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/\n本博客网站是基于Bamboo主题修改的，以下是Bamboo作者的Markdown语法博客，实现了很多额外的效果。\nhttps://yuang01.github.io/categories/%E5%89%8D%E7%AB%AF/\n\n\n## 文本\n### 单行文本  \n这是一行示例文本，没有任何语法规则。\n### 多行文本\n这是第一行，在本行结尾处键入2个空格再回车，即可开启第二行，只键入回车是不会换行的。  \n这是第二行。\n### 文本缩进与空格\n　本行采用了1个汉字的缩进，方法为在这句话前面键入一个**全角空格**。同样地，我们也可以键入多个全角空格实现多层次缩进。  \n　　　　本行采用了4个汉字（即8个字节）的缩进。在前方键入了4个全角空格。  \n　　　　在Markdown的语法中，半角空格无论连续打多少个，都只能产生1个空格，这和Word，记事本等软件的使用习惯截然不同。因此若想在文本中增加大量空隙，可以选择使用连续的全角空格。就　　像　　这　　样。  \n<span id=\"jump1\"></span>\n### 区块文本\n区块文本适用于展示诗歌，名言，代码等内容，语法为在文本段上下使用\\`\\`\\`包夹，例如：\n```\n　这是一段区块文本，能够拥有自己的框框，感觉这句话很重要。\n```\n此外，使用单个\\`包夹可以在一行文本内突出某些文字，例如`美丽且突出`的我\n### 标题文本\n在行首插入1到6个# ，各对应到标题1到6阶，例如：  \n```\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n```\n需要注意的是，只有1到4级标题才会被文章目录收录。\n\n以下为Bamboo主题的定制标题样式，依赖额外js代码实现，不属于基础的Markdown语法：  \n```\n{% title h1, 这是一级标题 %}\n{% title h6, 这是六级标题, red %}\n{% titleB h5, 这是五级标题, #895546 %}\n```\n{% title h1, 这是一级标题 %}\n{% title h6, 这是六级标题, red %}\n{% titleB h5, 这是五级标题, #895546 %}  \n\n### 引用\n\n```\n>这是一个块引用\n>>这是一个二层块引用\n>\n>返回到第一层\n```\n\n>这是一个块引用\n>>这是一个二层块引用\n>\n>返回到第一层\n\n```\n>这是一个块引用\n>>这是一个二层块引用\n>这样无法返回到第一层\n```\n\n>这是一个块引用\n>>这是一个二层块引用\n>这样无法返回到第一层\n\n### 文本加粗，倾斜，上下标，删除线，下划线，大小号\n（MarkDown兼容HTML语言,可直接使用HTML的语法）  \n在Markdown中只需在文本前后打上星号,即可将包夹的文字**加粗**或*倾斜*：  \n```\n**想要加粗的内容**\n*想要倾斜的内容*\n```\n<sup>上标</sup>和<sub>下标</sub>的写法：\n```\n这是<sup>上标</sup>和<sub>下标</sub>\n```\n<s>删除线</s>和<u>下划线</u>的写法：\n```\n<s>删除线</s>和<u>下划线</u>\n```\n<small>小号文本</small> 正常文本 <big>大号文本</big>：\n```\n<small>小号文本</small> 正常文本 <big>大号文本</big>\n```\n文本大小号的标签可以嵌套，例如：\n```\n<big><big><big><big><big><big><big>超巨大号文本</big></big></big></big></big></big></big> \n```\n<big><big><big><big><big><big><big>超巨大号文本</big></big></big></big></big></big></big>   \n\n以下为不太常用到的文本修饰，属于Bamboo主题的定制样式，依赖额外js代码实现，不属于基础的Markdown语法：  \n```\n带 {% emp 着重号 %} 的文本\n带 {% wavy 波浪线 %} 的文本\n键盘样式的文本 {% kbd command %} + {% kbd D %}\n密码样式的文本：{% psw 这里没有验证码 %}\n<span id=\"jump1\"></span>\n```\n带 {% emp 着重号 %} 的文本  \n带 {% wavy 波浪线 %} 的文本  \n键盘样式的文本 {% kbd command %} + {% kbd D %}  \n密码样式的文本：{% psw 您的验证码为：**** %}  \n\n### 超链接\n\n[链接到百度](https://www.baidu.com)  \n[链接到站内页](/about/)  \n[网络图片](https://www.baidu.com/img/bd_logo1.png?where=super)  \n[站点icon](/medias/logo.jpg)  \n[跳转到页面内某一位置](#jump1)\n```\n[链接到百度](https://www.baidu.com)  \n[链接到站内页](/about/)\n[网络图片](https://www.baidu.com/img/bd_logo1.png?where=super)\n[站点icon](/medias/logo.jpg)\n[跳转到页面内某一位置](#jump1)\n注意，需要在跳转的目的地写上对应标签，jump1名字可自定义\n<span id=\"jump1\"></span>\n```\n\n### 分割线\n可以在一行中用三个或以上的星号、减号、下划线来建立一个分割线。例如：  \n我是分割线上面的文字\n***\n我是分割线下面的文字\n\n### 小图标\n\n想了解小图标更多使用方式，可参考以下教程：  \n[Font Awesome 图标](https://www.runoob.com/font-awesome/fontawesome-tutorial.html  )  \n\n\n```\n<i class=\"fa fa-pencil\"></i> 铅笔　\n<i class=\"fa fa-cloud-upload\"></i> 上传  \n<i class=\"fa fa-download\"></i> 下载　\n<i class=\"fa fa-download fa-lg\"></i> 下载变大 33%　\n<i class=\"fa fa-download fa-2x\" style=\"color:red;\"></i> 下载两倍大\n<i class=\"fa fa-refresh fa-spin\"></i>  fa-spin 类可以让图标旋转  \n<i class=\"fa fa-spinner fa-pulse\"></i> fa-pulse 类可以使图标以 8 步为周期进行旋转。\n```\n<i class=\"fa fa-pencil\"></i> 铅笔  \n<i class=\"fa fa-download\"></i> 下载　  \n<i class=\"fa fa-download fa-lg\"></i> 下载变大(33%)　  \n<i class=\"fa fa-download fa-2x\" style=\"color:red;\"></i> 下载两倍大且变成红色  \n<i class=\"fa fa-refresh fa-spin\"></i>  fa-spin 类可以让图标旋转  \n<i class=\"fa fa-spinner fa-pulse\"></i> fa-pulse 类可以使图标以 8 步为周期进行旋转。\n\n\n### 文本变色\n```\n<font color=\"red\">红色</font>\n<font color=\"#00D239\">绿色</font>  //00D239为十六进制RGB颜色代码，前两位为R，中间两位为G，后两位为B\n```\n<font color=\"red\">变成红色后，</font><font color=\"#00D239\">我又变成了绿色</font>\n### 文本底色\n添加文本底色可以模拟记号笔的效果：  \n```\n本文仅适合<font style=\"background: orange\">18岁以上</font>儿童观看\n```\n本文仅适合<font style=\"background: orange\">18岁以上</font>儿童观看\n### 特殊符号\n以下列出了一些特殊符号，可在博文中按需使用  \n\n▍▏➥→☛➨☑✔✘✚☷⊙●○⊕◎Θ⊙¤㊣㈱★☆◆◇◣◢◥▲▼⊿◤◥ ▷◁▶◀△◇◆▽▂▃▄▅▆▇██■▓□〓≡ ╝╚╔ ╗╬ ═ ╓ ╩ ┠ ┨┯ ┷┏┓┗┛┳⊥『』┌ ┐└ ┘∟↑↓→←↘↙┇┅ ﹉﹊﹍﹎╭ ╮╰ ╯∵∴‖︴﹏﹋﹌〖〗·≈～※∪∈の℡§∮ξ№∑⌒ζω＊≮≯ ＋－×÷±／＝∫∝ ∧∨∏‖∠≌∽Ψ〓￥〒￠￡♀♂√∩¤≡①②③④⑤⑥⑦⑧⑨⑩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇\n\n### 左右对齐，居中\n```\nMr.Cindy，你好：\n<center>这是居中的写法</center>\n<div style=\"text-align:right\">2023年1月23日</div>\n```\nMr.Cindy，你好：\n<center>这是居中的写法</center>\n<div style=\"text-align:right\">2023年1月23日</div>\n\n## 图表\n### 列表\n```\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n      - 第一项嵌套的第二个元素嵌套的第一个元素\n        -  第一项嵌套的第二个元素嵌套的第一个元素嵌套的第一个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n      - 第二项嵌套的第一个元素嵌套的第一个元素\n    - 第二项嵌套的第二元素\n```\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n      - 第一项嵌套的第二个元素嵌套的第一个元素\n        -  第一项嵌套的第二个元素嵌套的第一个元素嵌套的第一个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n      - 第二项嵌套的第一个元素嵌套的第一个元素\n    - 第二项嵌套的第二元素\n\n\n### 表格\n```\n|水果|颜色|甜度|价格|\n|---|:---:|:---|---:| \n|草莓|红色|★|160|\n|葡萄干|紫|★★★|5000|\n|默认对齐|居中|左对齐|右对齐|\n```\n|水果|颜色|甜度|价格|\n|---|:---:|:---|---:| \n|草莓|红色|★|160|\n|葡萄干|紫|★★★|5000|\n|默认对齐|居中|左对齐|右对齐|\n\n（在手机浏览器不生效？博主也发现了这个问题）\n\n### 选项卡\n```\n{% tabs tab-id %}\n<!-- tab 栏目1 -->\n栏目1的内容\n<!-- endtab -->\n<!-- tab 栏目2 -->\n栏目2的内容\n<!-- endtab -->\n{% endtabs %}\n```\n{% tabs tab-id %}\n<!-- tab 栏目1 -->\n栏目1的内容\n<!-- endtab -->\n<!-- tab 栏目2 -->\n栏目2的内容\n<!-- endtab -->\n{% endtabs %}\n\n### 时间线\n```\n{% timeline %}\n{% timenode 2021-01-01 [1.0.3 -> 1.0.3](https://github.com/yuang01/hexo-theme-bamboo) %}\n完成了工作A\n工作B继续延期\n{% endtimenode %}\n{% timenode 2020-08-15 [1.0.2 -> 1.0.2](https://github.com/yuang01/hexo-theme-bamboo) %}\n工作B决定延期\n{% endtimenode %}\n{% timenode 2020-08-08 [1.0.0 -> 1.0.0](https://github.com/yuang01/hexo-theme-bamboo) %}\n进行工作A\n进行工作B\n{% endtimenode %}\n{% endtimeline %}\n```\n{% timeline %}\n{% timenode 2021-01-01 [1.0.3 -> 1.0.3](https://github.com/yuang01/hexo-theme-bamboo) %}\n完成了工作A\n工作B继续延期\n{% endtimenode %}\n{% timenode 2020-08-15 [1.0.2 -> 1.0.2](https://github.com/yuang01/hexo-theme-bamboo) %}\n工作B决定延期\n{% endtimenode %}\n{% timenode 2020-08-08 [1.0.0 -> 1.0.0](https://github.com/yuang01/hexo-theme-bamboo) %}\n进行工作A\n进行工作B\n{% endtimenode %}\n{% endtimeline %}\n\n## 多媒体\n### 图片\n```\n<img src=\"https://www.baidu.com/img/bd_logo1.png?where=super\" width=\"50%\" height=\"50%\" /> \n```\n效果：\n<img src=\"https://www.baidu.com/img/bd_logo1.png?where=super\" width=\"50%\" height=\"50%\" /> \n\n\n### 网站小窗\n```\n<iframe name=\"斗鱼首页\" width=\"100%\" height=\"540px\" frameborder=\"0\" src=\"https://www.douyu.com/\"></iframe>\n```\n效果：\n<iframe name=\"斗鱼首页\" width=\"100%\" height=\"540px\" frameborder=\"0\" src=\"https://www.douyu.com/\"></iframe>  \n\n### 视频\n\n#### 引用视频源\n该方式引用视频无法在markdown编辑软件中实时预览\n```\n{% video  https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4 %}\n```\n效果：\n{% video  https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4 %}\n\n换用`<video>`标签的方式则可以实时预览  \n\n```\n<video width=\"480\" controls loop align-items: center src=\"https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4\" />\n```\n\n<video width=\"480\" controls loop align-items: center src=\"https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4\" />","slug":"博客搭建/Markdown常用语法","published":1,"updated":"2024-02-02T06:17:21.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49c5sy00002ovq0eb2c0cp","content":"<p>本文记录了书写博文时常用的Markdown语法和Html标签</p>\n<p>Markdown官方文档：<a href=\"https://markdown.tw/\">https://markdown.tw/</a><br><a href=\"https://markdown.com.cn/basic-syntax/\">https://markdown.com.cn/basic-syntax/</a><br>推荐阅读：<br><a href=\"https://xuxiaoshi.gitee.io/Hexo%E9%97%AE%E9%A2%98-Hexo%E5%86%99%E4%BD%9C%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/\">https://xuxiaoshi.gitee.io/Hexo%E9%97%AE%E9%A2%98-Hexo%E5%86%99%E4%BD%9C%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/</a><br>本博客网站是基于Bamboo主题修改的，以下是Bamboo作者的Markdown语法博客，实现了很多额外的效果。<br><a href=\"https://yuang01.github.io/categories/%E5%89%8D%E7%AB%AF/\">https://yuang01.github.io/categories/%E5%89%8D%E7%AB%AF/</a></p>\n<h2 id=\"文本\"><a href=\"#文本\" class=\"headerlink\" title=\"文本\"></a>文本</h2><h3 id=\"单行文本\"><a href=\"#单行文本\" class=\"headerlink\" title=\"单行文本\"></a>单行文本</h3><p>这是一行示例文本，没有任何语法规则。</p>\n<h3 id=\"多行文本\"><a href=\"#多行文本\" class=\"headerlink\" title=\"多行文本\"></a>多行文本</h3><p>这是第一行，在本行结尾处键入2个空格再回车，即可开启第二行，只键入回车是不会换行的。<br>这是第二行。</p>\n<h3 id=\"文本缩进与空格\"><a href=\"#文本缩进与空格\" class=\"headerlink\" title=\"文本缩进与空格\"></a>文本缩进与空格</h3><p>　本行采用了1个汉字的缩进，方法为在这句话前面键入一个<strong>全角空格</strong>。同样地，我们也可以键入多个全角空格实现多层次缩进。<br>　　　　本行采用了4个汉字（即8个字节）的缩进。在前方键入了4个全角空格。<br>　　　　在Markdown的语法中，半角空格无论连续打多少个，都只能产生1个空格，这和Word，记事本等软件的使用习惯截然不同。因此若想在文本中增加大量空隙，可以选择使用连续的全角空格。就　　像　　这　　样。<br><span id=\"jump1\"></span></p>\n<h3 id=\"区块文本\"><a href=\"#区块文本\" class=\"headerlink\" title=\"区块文本\"></a>区块文本</h3><p>区块文本适用于展示诗歌，名言，代码等内容，语法为在文本段上下使用```包夹，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　这是一段区块文本，能够拥有自己的框框，感觉这句话很重要。</span><br></pre></td></tr></table></figure>\n<p>此外，使用单个`包夹可以在一行文本内突出某些文字，例如<code>美丽且突出</code>的我</p>\n<h3 id=\"标题文本\"><a href=\"#标题文本\" class=\"headerlink\" title=\"标题文本\"></a>标题文本</h3><p>在行首插入1到6个# ，各对应到标题1到6阶，例如：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这是一级标题</span><br><span class=\"line\">## 这是二级标题</span><br><span class=\"line\">### 这是三级标题</span><br><span class=\"line\">#### 这是四级标题</span><br><span class=\"line\">##### 这是五级标题</span><br><span class=\"line\">###### 这是六级标题</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，只有1到4级标题才会被文章目录收录。</p>\n<p>以下为Bamboo主题的定制标题样式，依赖额外js代码实现，不属于基础的Markdown语法：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% title h1, 这是一级标题 %&#125;</span><br><span class=\"line\">&#123;% title h6, 这是六级标题, red %&#125;</span><br><span class=\"line\">&#123;% titleB h5, 这是五级标题, #895546 %&#125;</span><br></pre></td></tr></table></figure>\n<h1 class=\"bamboo-h \" id=\"这是一级标题48s44fupiw8\">这是一级标题</h1><br/>\n<h6 class=\"bamboo-h red\" id=\"这是六级标题m9doxt2d1k\">这是六级标题</h6><br/>\n<h5 class=\"bamboo-h-b\" id=\"这是五级标题1hy9b07ms3q\" style=\"color:#895546!important\">这是五级标题</h5><div></div>  \n\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是一个块引用</span><br><span class=\"line\">&gt;&gt;这是一个二层块引用</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt;返回到第一层</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这是一个块引用</p>\n<blockquote>\n<p>这是一个二层块引用</p>\n</blockquote>\n<p>返回到第一层</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是一个块引用</span><br><span class=\"line\">&gt;&gt;这是一个二层块引用</span><br><span class=\"line\">&gt;这样无法返回到第一层</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这是一个块引用</p>\n<blockquote>\n<p>这是一个二层块引用<br>这样无法返回到第一层</p>\n</blockquote>\n</blockquote>\n<h3 id=\"文本加粗，倾斜，上下标，删除线，下划线，大小号\"><a href=\"#文本加粗，倾斜，上下标，删除线，下划线，大小号\" class=\"headerlink\" title=\"文本加粗，倾斜，上下标，删除线，下划线，大小号\"></a>文本加粗，倾斜，上下标，删除线，下划线，大小号</h3><p>（MarkDown兼容HTML语言,可直接使用HTML的语法）<br>在Markdown中只需在文本前后打上星号,即可将包夹的文字<strong>加粗</strong>或<em>倾斜</em>：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**想要加粗的内容**</span><br><span class=\"line\">*想要倾斜的内容*</span><br></pre></td></tr></table></figure>\n<p><sup>上标</sup>和<sub>下标</sub>的写法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是&lt;sup&gt;上标&lt;/sup&gt;和&lt;sub&gt;下标&lt;/sub&gt;</span><br></pre></td></tr></table></figure>\n<p><s>删除线</s>和<u>下划线</u>的写法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;s&gt;删除线&lt;/s&gt;和&lt;u&gt;下划线&lt;/u&gt;</span><br></pre></td></tr></table></figure>\n<p><small>小号文本</small> 正常文本 <big>大号文本</big>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;small&gt;小号文本&lt;/small&gt; 正常文本 &lt;big&gt;大号文本&lt;/big&gt;</span><br></pre></td></tr></table></figure>\n<p>文本大小号的标签可以嵌套，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;超巨大号文本&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt; </span><br></pre></td></tr></table></figure>\n<p><big><big><big><big><big><big><big>超巨大号文本</big></big></big></big></big></big></big>   </p>\n<p>以下为不太常用到的文本修饰，属于Bamboo主题的定制样式，依赖额外js代码实现，不属于基础的Markdown语法：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class=\"line\">带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class=\"line\">键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class=\"line\">密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br><span class=\"line\">&lt;span id=&quot;jump1&quot;&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<p>带 <emp>着重号</emp> 的文本<br>带 <wavy>波浪线</wavy> 的文本<br>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd><br>密码样式的文本：<psw>您的验证码为：****</psw>  </p>\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><p><a href=\"https://www.baidu.com/\">链接到百度</a><br><a href=\"/about/\">链接到站内页</a><br><a href=\"https://www.baidu.com/img/bd_logo1.png?where=super\">网络图片</a><br><a href=\"/medias/logo.jpg\">站点icon</a><br><a href=\"#jump1\">跳转到页面内某一位置</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[链接到百度](https://www.baidu.com)  </span><br><span class=\"line\">[链接到站内页](/about/)</span><br><span class=\"line\">[网络图片](https://www.baidu.com/img/bd_logo1.png?where=super)</span><br><span class=\"line\">[站点icon](/medias/logo.jpg)</span><br><span class=\"line\">[跳转到页面内某一位置](#jump1)</span><br><span class=\"line\">注意，需要在跳转的目的地写上对应标签，jump1名字可自定义</span><br><span class=\"line\">&lt;span id=&quot;jump1&quot;&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><p>可以在一行中用三个或以上的星号、减号、下划线来建立一个分割线。例如：<br>我是分割线上面的文字</p>\n<hr>\n<p>我是分割线下面的文字</p>\n<h3 id=\"小图标\"><a href=\"#小图标\" class=\"headerlink\" title=\"小图标\"></a>小图标</h3><p>想了解小图标更多使用方式，可参考以下教程：<br><a href=\"https://www.runoob.com/font-awesome/fontawesome-tutorial.html\">Font Awesome 图标</a>  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;i class=&quot;fa fa-pencil&quot;&gt;&lt;/i&gt; 铅笔　</span><br><span class=\"line\">&lt;i class=&quot;fa fa-cloud-upload&quot;&gt;&lt;/i&gt; 上传  </span><br><span class=\"line\">&lt;i class=&quot;fa fa-download&quot;&gt;&lt;/i&gt; 下载　</span><br><span class=\"line\">&lt;i class=&quot;fa fa-download fa-lg&quot;&gt;&lt;/i&gt; 下载变大 33%　</span><br><span class=\"line\">&lt;i class=&quot;fa fa-download fa-2x&quot; style=&quot;color:red;&quot;&gt;&lt;/i&gt; 下载两倍大</span><br><span class=\"line\">&lt;i class=&quot;fa fa-refresh fa-spin&quot;&gt;&lt;/i&gt;  fa-spin 类可以让图标旋转  </span><br><span class=\"line\">&lt;i class=&quot;fa fa-spinner fa-pulse&quot;&gt;&lt;/i&gt; fa-pulse 类可以使图标以 8 步为周期进行旋转。</span><br></pre></td></tr></table></figure>\n<p><i class=\"fa fa-pencil\"></i> 铅笔<br><i class=\"fa fa-download\"></i> 下载　<br><i class=\"fa fa-download fa-lg\"></i> 下载变大(33%)　<br><i class=\"fa fa-download fa-2x\" style=\"color:red;\"></i> 下载两倍大且变成红色<br><i class=\"fa fa-refresh fa-spin\"></i>  fa-spin 类可以让图标旋转<br><i class=\"fa fa-spinner fa-pulse\"></i> fa-pulse 类可以使图标以 8 步为周期进行旋转。</p>\n<h3 id=\"文本变色\"><a href=\"#文本变色\" class=\"headerlink\" title=\"文本变色\"></a>文本变色</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font color=&quot;red&quot;&gt;红色&lt;/font&gt;</span><br><span class=\"line\">&lt;font color=&quot;#00D239&quot;&gt;绿色&lt;/font&gt;  //00D239为十六进制RGB颜色代码，前两位为R，中间两位为G，后两位为B</span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">变成红色后，</font><font color=\"#00D239\">我又变成了绿色</font></p>\n<h3 id=\"文本底色\"><a href=\"#文本底色\" class=\"headerlink\" title=\"文本底色\"></a>文本底色</h3><p>添加文本底色可以模拟记号笔的效果：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本文仅适合&lt;font style=&quot;background: orange&quot;&gt;18岁以上&lt;/font&gt;儿童观看</span><br></pre></td></tr></table></figure>\n<p>本文仅适合<font style=\"background: orange\">18岁以上</font>儿童观看</p>\n<h3 id=\"特殊符号\"><a href=\"#特殊符号\" class=\"headerlink\" title=\"特殊符号\"></a>特殊符号</h3><p>以下列出了一些特殊符号，可在博文中按需使用  </p>\n<p>▍▏➥→☛➨☑✔✘✚☷⊙●○⊕◎Θ⊙¤㊣㈱★☆◆◇◣◢◥▲▼⊿◤◥ ▷◁▶◀△◇◆▽▂▃▄▅▆▇██■▓□〓≡ ╝╚╔ ╗╬ ═ ╓ ╩ ┠ ┨┯ ┷┏┓┗┛┳⊥『』┌ ┐└ ┘∟↑↓→←↘↙┇┅ ﹉﹊﹍﹎╭ ╮╰ ╯∵∴‖︴﹏﹋﹌〖〗·≈～※∪∈の℡§∮ξ№∑⌒ζω＊≮≯ ＋－×÷±／＝∫∝ ∧∨∏‖∠≌∽Ψ〓￥〒￠￡♀♂√∩¤≡①②③④⑤⑥⑦⑧⑨⑩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇</p>\n<h3 id=\"左右对齐，居中\"><a href=\"#左右对齐，居中\" class=\"headerlink\" title=\"左右对齐，居中\"></a>左右对齐，居中</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mr.Cindy，你好：</span><br><span class=\"line\">&lt;center&gt;这是居中的写法&lt;/center&gt;</span><br><span class=\"line\">&lt;div style=&quot;text-align:right&quot;&gt;2023年1月23日&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>Mr.Cindy，你好：</p>\n<center>这是居中的写法</center>\n<div style=\"text-align:right\">2023年1月23日</div>\n\n<h2 id=\"图表\"><a href=\"#图表\" class=\"headerlink\" title=\"图表\"></a>图表</h2><h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 第一项：</span><br><span class=\"line\">    - 第一项嵌套的第一个元素</span><br><span class=\"line\">    - 第一项嵌套的第二个元素</span><br><span class=\"line\">      - 第一项嵌套的第二个元素嵌套的第一个元素</span><br><span class=\"line\">        -  第一项嵌套的第二个元素嵌套的第一个元素嵌套的第一个元素</span><br><span class=\"line\">2. 第二项：</span><br><span class=\"line\">    - 第二项嵌套的第一个元素</span><br><span class=\"line\">      - 第二项嵌套的第一个元素嵌套的第一个元素</span><br><span class=\"line\">    - 第二项嵌套的第二元素</span><br></pre></td></tr></table></figure>\n<ol>\n<li>第一项：<ul>\n<li>第一项嵌套的第一个元素</li>\n<li>第一项嵌套的第二个元素<ul>\n<li>第一项嵌套的第二个元素嵌套的第一个元素<ul>\n<li>第一项嵌套的第二个元素嵌套的第一个元素嵌套的第一个元素</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>第二项：<ul>\n<li>第二项嵌套的第一个元素<ul>\n<li>第二项嵌套的第一个元素嵌套的第一个元素</li>\n</ul>\n</li>\n<li>第二项嵌套的第二元素</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|水果|颜色|甜度|价格|</span><br><span class=\"line\">|---|:---:|:---|---:| </span><br><span class=\"line\">|草莓|红色|★|160|</span><br><span class=\"line\">|葡萄干|紫|★★★|5000|</span><br><span class=\"line\">|默认对齐|居中|左对齐|右对齐|</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>水果</th>\n<th align=\"center\">颜色</th>\n<th align=\"left\">甜度</th>\n<th align=\"right\">价格</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>草莓</td>\n<td align=\"center\">红色</td>\n<td align=\"left\">★</td>\n<td align=\"right\">160</td>\n</tr>\n<tr>\n<td>葡萄干</td>\n<td align=\"center\">紫</td>\n<td align=\"left\">★★★</td>\n<td align=\"right\">5000</td>\n</tr>\n<tr>\n<td>默认对齐</td>\n<td align=\"center\">居中</td>\n<td align=\"left\">左对齐</td>\n<td align=\"right\">右对齐</td>\n</tr>\n</tbody></table>\n<p>（在手机浏览器不生效？博主也发现了这个问题）</p>\n<h3 id=\"选项卡\"><a href=\"#选项卡\" class=\"headerlink\" title=\"选项卡\"></a>选项卡</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% tabs tab-id %&#125;</span><br><span class=\"line\">&lt;!-- tab 栏目1 --&gt;</span><br><span class=\"line\">栏目1的内容</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&lt;!-- tab 栏目2 --&gt;</span><br><span class=\"line\">栏目2的内容</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"tabs\" id=\"tab-id\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#tab-id-1\">栏目1</a></li><li class=\"tab\"><a class=\"#tab-id-2\">栏目2</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-id-1\"><p>栏目1的内容</p></div><div class=\"tab-pane\" id=\"tab-id-2\"><p>栏目2的内容</p></div></div></div>\n\n<h3 id=\"时间线\"><a href=\"#时间线\" class=\"headerlink\" title=\"时间线\"></a>时间线</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% timeline %&#125;</span><br><span class=\"line\">&#123;% timenode 2021-01-01 [1.0.3 -&gt; 1.0.3](https://github.com/yuang01/hexo-theme-bamboo) %&#125;</span><br><span class=\"line\">完成了工作A</span><br><span class=\"line\">工作B继续延期</span><br><span class=\"line\">&#123;% endtimenode %&#125;</span><br><span class=\"line\">&#123;% timenode 2020-08-15 [1.0.2 -&gt; 1.0.2](https://github.com/yuang01/hexo-theme-bamboo) %&#125;</span><br><span class=\"line\">工作B决定延期</span><br><span class=\"line\">&#123;% endtimenode %&#125;</span><br><span class=\"line\">&#123;% timenode 2020-08-08 [1.0.0 -&gt; 1.0.0](https://github.com/yuang01/hexo-theme-bamboo) %&#125;</span><br><span class=\"line\">进行工作A</span><br><span class=\"line\">进行工作B</span><br><span class=\"line\">&#123;% endtimenode %&#125;</span><br><span class=\"line\">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"timeline\"><div class=\"timenode\"><div class=\"meta\"><p><p>2021-01-01 <a href=\"https://github.com/yuang01/hexo-theme-bamboo\">1.0.3 -&gt; 1.0.3</a></p>\n</p></div><div class=\"body\"><p>完成了工作A<br>工作B继续延期</p></div></div>\n<div class=\"timenode\"><div class=\"meta\"><p><p>2020-08-15 <a href=\"https://github.com/yuang01/hexo-theme-bamboo\">1.0.2 -&gt; 1.0.2</a></p>\n</p></div><div class=\"body\"><p>工作B决定延期</p></div></div>\n<div class=\"timenode\"><div class=\"meta\"><p><p>2020-08-08 <a href=\"https://github.com/yuang01/hexo-theme-bamboo\">1.0.0 -&gt; 1.0.0</a></p>\n</p></div><div class=\"body\"><p>进行工作A<br>进行工作B</p></div></div></div>\n\n<h2 id=\"多媒体\"><a href=\"#多媒体\" class=\"headerlink\" title=\"多媒体\"></a>多媒体</h2><h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;https://www.baidu.com/img/bd_logo1.png?where=super&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt; </span><br></pre></td></tr></table></figure>\n<p>效果：<br><img src=\"https://www.baidu.com/img/bd_logo1.png?where=super\" class=\"lazyload placeholder\" data-srcset=\"https://www.baidu.com/img/bd_logo1.png?where=super\" srcset=\"https://img-blog.csdnimg.cn/img_convert/44f00537358e467d63aa3ea2652ab005.gif\" width=\"50%\" height=\"50%\" /> </p>\n<h3 id=\"网站小窗\"><a href=\"#网站小窗\" class=\"headerlink\" title=\"网站小窗\"></a>网站小窗</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;iframe name=&quot;斗鱼首页&quot; width=&quot;100%&quot; height=&quot;540px&quot; frameborder=&quot;0&quot; src=&quot;https://www.douyu.com/&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<iframe name=\"斗鱼首页\" width=\"100%\" height=\"540px\" frameborder=\"0\" src=\"https://www.douyu.com/\"></iframe>  \n\n<h3 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h3><h4 id=\"引用视频源\"><a href=\"#引用视频源\" class=\"headerlink\" title=\"引用视频源\"></a>引用视频源</h4><p>该方式引用视频无法在markdown编辑软件中实时预览</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% video  https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4 %&#125;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<div class=\"video\"><video controls preload><source src='https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n\n<p>换用<code>&lt;video&gt;</code>标签的方式则可以实时预览  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video width=&quot;480&quot; controls loop align-items: center src=&quot;https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4&quot; /&gt;</span><br></pre></td></tr></table></figure>\n\n<video width=\"480\" controls loop align-items: center src=\"https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4\" />","site":{"data":{}},"more":"<p>本文记录了书写博文时常用的Markdown语法和Html标签</p>\n<p>Markdown官方文档：<a href=\"https://markdown.tw/\">https://markdown.tw/</a><br><a href=\"https://markdown.com.cn/basic-syntax/\">https://markdown.com.cn/basic-syntax/</a><br>推荐阅读：<br><a href=\"https://xuxiaoshi.gitee.io/Hexo%E9%97%AE%E9%A2%98-Hexo%E5%86%99%E4%BD%9C%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/\">https://xuxiaoshi.gitee.io/Hexo%E9%97%AE%E9%A2%98-Hexo%E5%86%99%E4%BD%9C%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97/</a><br>本博客网站是基于Bamboo主题修改的，以下是Bamboo作者的Markdown语法博客，实现了很多额外的效果。<br><a href=\"https://yuang01.github.io/categories/%E5%89%8D%E7%AB%AF/\">https://yuang01.github.io/categories/%E5%89%8D%E7%AB%AF/</a></p>\n<h2 id=\"文本\"><a href=\"#文本\" class=\"headerlink\" title=\"文本\"></a>文本</h2><h3 id=\"单行文本\"><a href=\"#单行文本\" class=\"headerlink\" title=\"单行文本\"></a>单行文本</h3><p>这是一行示例文本，没有任何语法规则。</p>\n<h3 id=\"多行文本\"><a href=\"#多行文本\" class=\"headerlink\" title=\"多行文本\"></a>多行文本</h3><p>这是第一行，在本行结尾处键入2个空格再回车，即可开启第二行，只键入回车是不会换行的。<br>这是第二行。</p>\n<h3 id=\"文本缩进与空格\"><a href=\"#文本缩进与空格\" class=\"headerlink\" title=\"文本缩进与空格\"></a>文本缩进与空格</h3><p>　本行采用了1个汉字的缩进，方法为在这句话前面键入一个<strong>全角空格</strong>。同样地，我们也可以键入多个全角空格实现多层次缩进。<br>　　　　本行采用了4个汉字（即8个字节）的缩进。在前方键入了4个全角空格。<br>　　　　在Markdown的语法中，半角空格无论连续打多少个，都只能产生1个空格，这和Word，记事本等软件的使用习惯截然不同。因此若想在文本中增加大量空隙，可以选择使用连续的全角空格。就　　像　　这　　样。<br><span id=\"jump1\"></span></p>\n<h3 id=\"区块文本\"><a href=\"#区块文本\" class=\"headerlink\" title=\"区块文本\"></a>区块文本</h3><p>区块文本适用于展示诗歌，名言，代码等内容，语法为在文本段上下使用```包夹，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　这是一段区块文本，能够拥有自己的框框，感觉这句话很重要。</span><br></pre></td></tr></table></figure>\n<p>此外，使用单个`包夹可以在一行文本内突出某些文字，例如<code>美丽且突出</code>的我</p>\n<h3 id=\"标题文本\"><a href=\"#标题文本\" class=\"headerlink\" title=\"标题文本\"></a>标题文本</h3><p>在行首插入1到6个# ，各对应到标题1到6阶，例如：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这是一级标题</span><br><span class=\"line\">## 这是二级标题</span><br><span class=\"line\">### 这是三级标题</span><br><span class=\"line\">#### 这是四级标题</span><br><span class=\"line\">##### 这是五级标题</span><br><span class=\"line\">###### 这是六级标题</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，只有1到4级标题才会被文章目录收录。</p>\n<p>以下为Bamboo主题的定制标题样式，依赖额外js代码实现，不属于基础的Markdown语法：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% title h1, 这是一级标题 %&#125;</span><br><span class=\"line\">&#123;% title h6, 这是六级标题, red %&#125;</span><br><span class=\"line\">&#123;% titleB h5, 这是五级标题, #895546 %&#125;</span><br></pre></td></tr></table></figure>\n<h1 class=\"bamboo-h \" id=\"这是一级标题48s44fupiw8\">这是一级标题</h1><br/>\n<h6 class=\"bamboo-h red\" id=\"这是六级标题m9doxt2d1k\">这是六级标题</h6><br/>\n<h5 class=\"bamboo-h-b\" id=\"这是五级标题1hy9b07ms3q\" style=\"color:#895546!important\">这是五级标题</h5><div></div>  \n\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是一个块引用</span><br><span class=\"line\">&gt;&gt;这是一个二层块引用</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt;返回到第一层</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这是一个块引用</p>\n<blockquote>\n<p>这是一个二层块引用</p>\n</blockquote>\n<p>返回到第一层</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是一个块引用</span><br><span class=\"line\">&gt;&gt;这是一个二层块引用</span><br><span class=\"line\">&gt;这样无法返回到第一层</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这是一个块引用</p>\n<blockquote>\n<p>这是一个二层块引用<br>这样无法返回到第一层</p>\n</blockquote>\n</blockquote>\n<h3 id=\"文本加粗，倾斜，上下标，删除线，下划线，大小号\"><a href=\"#文本加粗，倾斜，上下标，删除线，下划线，大小号\" class=\"headerlink\" title=\"文本加粗，倾斜，上下标，删除线，下划线，大小号\"></a>文本加粗，倾斜，上下标，删除线，下划线，大小号</h3><p>（MarkDown兼容HTML语言,可直接使用HTML的语法）<br>在Markdown中只需在文本前后打上星号,即可将包夹的文字<strong>加粗</strong>或<em>倾斜</em>：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**想要加粗的内容**</span><br><span class=\"line\">*想要倾斜的内容*</span><br></pre></td></tr></table></figure>\n<p><sup>上标</sup>和<sub>下标</sub>的写法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是&lt;sup&gt;上标&lt;/sup&gt;和&lt;sub&gt;下标&lt;/sub&gt;</span><br></pre></td></tr></table></figure>\n<p><s>删除线</s>和<u>下划线</u>的写法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;s&gt;删除线&lt;/s&gt;和&lt;u&gt;下划线&lt;/u&gt;</span><br></pre></td></tr></table></figure>\n<p><small>小号文本</small> 正常文本 <big>大号文本</big>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;small&gt;小号文本&lt;/small&gt; 正常文本 &lt;big&gt;大号文本&lt;/big&gt;</span><br></pre></td></tr></table></figure>\n<p>文本大小号的标签可以嵌套，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;&lt;big&gt;超巨大号文本&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt;&lt;/big&gt; </span><br></pre></td></tr></table></figure>\n<p><big><big><big><big><big><big><big>超巨大号文本</big></big></big></big></big></big></big>   </p>\n<p>以下为不太常用到的文本修饰，属于Bamboo主题的定制样式，依赖额外js代码实现，不属于基础的Markdown语法：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class=\"line\">带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class=\"line\">键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class=\"line\">密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br><span class=\"line\">&lt;span id=&quot;jump1&quot;&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<p>带 <emp>着重号</emp> 的文本<br>带 <wavy>波浪线</wavy> 的文本<br>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd><br>密码样式的文本：<psw>您的验证码为：****</psw>  </p>\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><p><a href=\"https://www.baidu.com/\">链接到百度</a><br><a href=\"/about/\">链接到站内页</a><br><a href=\"https://www.baidu.com/img/bd_logo1.png?where=super\">网络图片</a><br><a href=\"/medias/logo.jpg\">站点icon</a><br><a href=\"#jump1\">跳转到页面内某一位置</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[链接到百度](https://www.baidu.com)  </span><br><span class=\"line\">[链接到站内页](/about/)</span><br><span class=\"line\">[网络图片](https://www.baidu.com/img/bd_logo1.png?where=super)</span><br><span class=\"line\">[站点icon](/medias/logo.jpg)</span><br><span class=\"line\">[跳转到页面内某一位置](#jump1)</span><br><span class=\"line\">注意，需要在跳转的目的地写上对应标签，jump1名字可自定义</span><br><span class=\"line\">&lt;span id=&quot;jump1&quot;&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><p>可以在一行中用三个或以上的星号、减号、下划线来建立一个分割线。例如：<br>我是分割线上面的文字</p>\n<hr>\n<p>我是分割线下面的文字</p>\n<h3 id=\"小图标\"><a href=\"#小图标\" class=\"headerlink\" title=\"小图标\"></a>小图标</h3><p>想了解小图标更多使用方式，可参考以下教程：<br><a href=\"https://www.runoob.com/font-awesome/fontawesome-tutorial.html\">Font Awesome 图标</a>  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;i class=&quot;fa fa-pencil&quot;&gt;&lt;/i&gt; 铅笔　</span><br><span class=\"line\">&lt;i class=&quot;fa fa-cloud-upload&quot;&gt;&lt;/i&gt; 上传  </span><br><span class=\"line\">&lt;i class=&quot;fa fa-download&quot;&gt;&lt;/i&gt; 下载　</span><br><span class=\"line\">&lt;i class=&quot;fa fa-download fa-lg&quot;&gt;&lt;/i&gt; 下载变大 33%　</span><br><span class=\"line\">&lt;i class=&quot;fa fa-download fa-2x&quot; style=&quot;color:red;&quot;&gt;&lt;/i&gt; 下载两倍大</span><br><span class=\"line\">&lt;i class=&quot;fa fa-refresh fa-spin&quot;&gt;&lt;/i&gt;  fa-spin 类可以让图标旋转  </span><br><span class=\"line\">&lt;i class=&quot;fa fa-spinner fa-pulse&quot;&gt;&lt;/i&gt; fa-pulse 类可以使图标以 8 步为周期进行旋转。</span><br></pre></td></tr></table></figure>\n<p><i class=\"fa fa-pencil\"></i> 铅笔<br><i class=\"fa fa-download\"></i> 下载　<br><i class=\"fa fa-download fa-lg\"></i> 下载变大(33%)　<br><i class=\"fa fa-download fa-2x\" style=\"color:red;\"></i> 下载两倍大且变成红色<br><i class=\"fa fa-refresh fa-spin\"></i>  fa-spin 类可以让图标旋转<br><i class=\"fa fa-spinner fa-pulse\"></i> fa-pulse 类可以使图标以 8 步为周期进行旋转。</p>\n<h3 id=\"文本变色\"><a href=\"#文本变色\" class=\"headerlink\" title=\"文本变色\"></a>文本变色</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font color=&quot;red&quot;&gt;红色&lt;/font&gt;</span><br><span class=\"line\">&lt;font color=&quot;#00D239&quot;&gt;绿色&lt;/font&gt;  //00D239为十六进制RGB颜色代码，前两位为R，中间两位为G，后两位为B</span><br></pre></td></tr></table></figure>\n<p><font color=\"red\">变成红色后，</font><font color=\"#00D239\">我又变成了绿色</font></p>\n<h3 id=\"文本底色\"><a href=\"#文本底色\" class=\"headerlink\" title=\"文本底色\"></a>文本底色</h3><p>添加文本底色可以模拟记号笔的效果：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本文仅适合&lt;font style=&quot;background: orange&quot;&gt;18岁以上&lt;/font&gt;儿童观看</span><br></pre></td></tr></table></figure>\n<p>本文仅适合<font style=\"background: orange\">18岁以上</font>儿童观看</p>\n<h3 id=\"特殊符号\"><a href=\"#特殊符号\" class=\"headerlink\" title=\"特殊符号\"></a>特殊符号</h3><p>以下列出了一些特殊符号，可在博文中按需使用  </p>\n<p>▍▏➥→☛➨☑✔✘✚☷⊙●○⊕◎Θ⊙¤㊣㈱★☆◆◇◣◢◥▲▼⊿◤◥ ▷◁▶◀△◇◆▽▂▃▄▅▆▇██■▓□〓≡ ╝╚╔ ╗╬ ═ ╓ ╩ ┠ ┨┯ ┷┏┓┗┛┳⊥『』┌ ┐└ ┘∟↑↓→←↘↙┇┅ ﹉﹊﹍﹎╭ ╮╰ ╯∵∴‖︴﹏﹋﹌〖〗·≈～※∪∈の℡§∮ξ№∑⌒ζω＊≮≯ ＋－×÷±／＝∫∝ ∧∨∏‖∠≌∽Ψ〓￥〒￠￡♀♂√∩¤≡①②③④⑤⑥⑦⑧⑨⑩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇</p>\n<h3 id=\"左右对齐，居中\"><a href=\"#左右对齐，居中\" class=\"headerlink\" title=\"左右对齐，居中\"></a>左右对齐，居中</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mr.Cindy，你好：</span><br><span class=\"line\">&lt;center&gt;这是居中的写法&lt;/center&gt;</span><br><span class=\"line\">&lt;div style=&quot;text-align:right&quot;&gt;2023年1月23日&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>Mr.Cindy，你好：</p>\n<center>这是居中的写法</center>\n<div style=\"text-align:right\">2023年1月23日</div>\n\n<h2 id=\"图表\"><a href=\"#图表\" class=\"headerlink\" title=\"图表\"></a>图表</h2><h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 第一项：</span><br><span class=\"line\">    - 第一项嵌套的第一个元素</span><br><span class=\"line\">    - 第一项嵌套的第二个元素</span><br><span class=\"line\">      - 第一项嵌套的第二个元素嵌套的第一个元素</span><br><span class=\"line\">        -  第一项嵌套的第二个元素嵌套的第一个元素嵌套的第一个元素</span><br><span class=\"line\">2. 第二项：</span><br><span class=\"line\">    - 第二项嵌套的第一个元素</span><br><span class=\"line\">      - 第二项嵌套的第一个元素嵌套的第一个元素</span><br><span class=\"line\">    - 第二项嵌套的第二元素</span><br></pre></td></tr></table></figure>\n<ol>\n<li>第一项：<ul>\n<li>第一项嵌套的第一个元素</li>\n<li>第一项嵌套的第二个元素<ul>\n<li>第一项嵌套的第二个元素嵌套的第一个元素<ul>\n<li>第一项嵌套的第二个元素嵌套的第一个元素嵌套的第一个元素</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>第二项：<ul>\n<li>第二项嵌套的第一个元素<ul>\n<li>第二项嵌套的第一个元素嵌套的第一个元素</li>\n</ul>\n</li>\n<li>第二项嵌套的第二元素</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|水果|颜色|甜度|价格|</span><br><span class=\"line\">|---|:---:|:---|---:| </span><br><span class=\"line\">|草莓|红色|★|160|</span><br><span class=\"line\">|葡萄干|紫|★★★|5000|</span><br><span class=\"line\">|默认对齐|居中|左对齐|右对齐|</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>水果</th>\n<th align=\"center\">颜色</th>\n<th align=\"left\">甜度</th>\n<th align=\"right\">价格</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>草莓</td>\n<td align=\"center\">红色</td>\n<td align=\"left\">★</td>\n<td align=\"right\">160</td>\n</tr>\n<tr>\n<td>葡萄干</td>\n<td align=\"center\">紫</td>\n<td align=\"left\">★★★</td>\n<td align=\"right\">5000</td>\n</tr>\n<tr>\n<td>默认对齐</td>\n<td align=\"center\">居中</td>\n<td align=\"left\">左对齐</td>\n<td align=\"right\">右对齐</td>\n</tr>\n</tbody></table>\n<p>（在手机浏览器不生效？博主也发现了这个问题）</p>\n<h3 id=\"选项卡\"><a href=\"#选项卡\" class=\"headerlink\" title=\"选项卡\"></a>选项卡</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% tabs tab-id %&#125;</span><br><span class=\"line\">&lt;!-- tab 栏目1 --&gt;</span><br><span class=\"line\">栏目1的内容</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&lt;!-- tab 栏目2 --&gt;</span><br><span class=\"line\">栏目2的内容</span><br><span class=\"line\">&lt;!-- endtab --&gt;</span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"tabs\" id=\"tab-id\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#tab-id-1\">栏目1</a></li><li class=\"tab\"><a class=\"#tab-id-2\">栏目2</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-id-1\"><p>栏目1的内容</p></div><div class=\"tab-pane\" id=\"tab-id-2\"><p>栏目2的内容</p></div></div></div>\n\n<h3 id=\"时间线\"><a href=\"#时间线\" class=\"headerlink\" title=\"时间线\"></a>时间线</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% timeline %&#125;</span><br><span class=\"line\">&#123;% timenode 2021-01-01 [1.0.3 -&gt; 1.0.3](https://github.com/yuang01/hexo-theme-bamboo) %&#125;</span><br><span class=\"line\">完成了工作A</span><br><span class=\"line\">工作B继续延期</span><br><span class=\"line\">&#123;% endtimenode %&#125;</span><br><span class=\"line\">&#123;% timenode 2020-08-15 [1.0.2 -&gt; 1.0.2](https://github.com/yuang01/hexo-theme-bamboo) %&#125;</span><br><span class=\"line\">工作B决定延期</span><br><span class=\"line\">&#123;% endtimenode %&#125;</span><br><span class=\"line\">&#123;% timenode 2020-08-08 [1.0.0 -&gt; 1.0.0](https://github.com/yuang01/hexo-theme-bamboo) %&#125;</span><br><span class=\"line\">进行工作A</span><br><span class=\"line\">进行工作B</span><br><span class=\"line\">&#123;% endtimenode %&#125;</span><br><span class=\"line\">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"timeline\"><div class=\"timenode\"><div class=\"meta\"><p><p>2021-01-01 <a href=\"https://github.com/yuang01/hexo-theme-bamboo\">1.0.3 -&gt; 1.0.3</a></p>\n</p></div><div class=\"body\"><p>完成了工作A<br>工作B继续延期</p></div></div>\n<div class=\"timenode\"><div class=\"meta\"><p><p>2020-08-15 <a href=\"https://github.com/yuang01/hexo-theme-bamboo\">1.0.2 -&gt; 1.0.2</a></p>\n</p></div><div class=\"body\"><p>工作B决定延期</p></div></div>\n<div class=\"timenode\"><div class=\"meta\"><p><p>2020-08-08 <a href=\"https://github.com/yuang01/hexo-theme-bamboo\">1.0.0 -&gt; 1.0.0</a></p>\n</p></div><div class=\"body\"><p>进行工作A<br>进行工作B</p></div></div></div>\n\n<h2 id=\"多媒体\"><a href=\"#多媒体\" class=\"headerlink\" title=\"多媒体\"></a>多媒体</h2><h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;https://www.baidu.com/img/bd_logo1.png?where=super&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt; </span><br></pre></td></tr></table></figure>\n<p>效果：<br><img src=\"https://www.baidu.com/img/bd_logo1.png?where=super\" width=\"50%\" height=\"50%\" /> </p>\n<h3 id=\"网站小窗\"><a href=\"#网站小窗\" class=\"headerlink\" title=\"网站小窗\"></a>网站小窗</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;iframe name=&quot;斗鱼首页&quot; width=&quot;100%&quot; height=&quot;540px&quot; frameborder=&quot;0&quot; src=&quot;https://www.douyu.com/&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<iframe name=\"斗鱼首页\" width=\"100%\" height=\"540px\" frameborder=\"0\" src=\"https://www.douyu.com/\"></iframe>  \n\n<h3 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h3><h4 id=\"引用视频源\"><a href=\"#引用视频源\" class=\"headerlink\" title=\"引用视频源\"></a>引用视频源</h4><p>该方式引用视频无法在markdown编辑软件中实时预览</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% video  https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4 %&#125;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<div class=\"video\"><video controls preload><source src='https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>\n\n<p>换用<code>&lt;video&gt;</code>标签的方式则可以实时预览  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video width=&quot;480&quot; controls loop align-items: center src=&quot;https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4&quot; /&gt;</span><br></pre></td></tr></table></figure>\n\n<video width=\"480\" controls loop align-items: center src=\"https://assets.mixkit.co/videos/preview/mixkit-down-the-river-in-a-bamboo-canoe-6804-large.mp4\" />"},{"title":"往期封面2023/02/07 沙特猫","author":"epya15","img":"https://i.328888.xyz/2023/02/08/rQNjH.jpeg","date":"2023-02-07T15:17:00.000Z","excerpt":"它的父母是流浪猫，但它是家猫。","_content":"沙特猫影集精选  \n{% video /images/coverres_20230207_01.mp4 %}  \n  \n{% video /images/coverres_20230207_02.mp4 %}  \n  \n{% video /images/coverres_20230207_03.mp4 %}  \n  \n{% video /images/coverres_20230207_04.mp4 %}  \n  \n{% video /images/cover_20230207.mp4 %}  ","source":"_posts/封面/往期封面2023_02_07 沙特猫.md","raw":"title: 往期封面2023/02/07 沙特猫\nauthor: epya15\ntags:\n  - 生活\ncategories:\n  - 往期封面\nimg: https://i.328888.xyz/2023/02/08/rQNjH.jpeg\ndate: 2023-02-07 23:17:00\nexcerpt: '它的父母是流浪猫，但它是家猫。'\n---\n沙特猫影集精选  \n{% video /images/coverres_20230207_01.mp4 %}  \n  \n{% video /images/coverres_20230207_02.mp4 %}  \n  \n{% video /images/coverres_20230207_03.mp4 %}  \n  \n{% video /images/coverres_20230207_04.mp4 %}  \n  \n{% video /images/cover_20230207.mp4 %}  ","slug":"封面/往期封面2023_02_07 沙特猫","published":1,"updated":"2024-01-12T09:14:32.873Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49c5t200012ovqcjvdai2c","content":"<p>沙特猫影集精选  </p>\n<div class=\"video\"><video controls preload><source src='/images/coverres_20230207_01.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  \n<div class=\"video\"><video controls preload><source src='/images/coverres_20230207_02.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  \n<div class=\"video\"><video controls preload><source src='/images/coverres_20230207_03.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  \n<div class=\"video\"><video controls preload><source src='/images/coverres_20230207_04.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  \n<div class=\"video\"><video controls preload><source src='/images/cover_20230207.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  ","site":{"data":{}},"more":"<p>沙特猫影集精选  </p>\n<div class=\"video\"><video controls preload><source src='/images/coverres_20230207_01.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  \n<div class=\"video\"><video controls preload><source src='/images/coverres_20230207_02.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  \n<div class=\"video\"><video controls preload><source src='/images/coverres_20230207_03.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  \n<div class=\"video\"><video controls preload><source src='/images/coverres_20230207_04.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  \n<div class=\"video\"><video controls preload><source src='/images/cover_20230207.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div>  "},{"title":"云服务器搭建博客网站全套流程（浓缩版）","author":"epya15","date":"2024-02-01T08:00:00.000Z","img":"https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202402021405279.jpg","excerpt":"不涉及概念解释，主要记录具体操作，以及写博文全套工具链用法","_content":"### 1.配置安全组\n\n租用云服务器，安装centOS 7系统，配置安全组，放开【入方向规则】指定或全部端口以正常安装宝塔运维工具\n\n### 2.安装宝塔\n\n使用在线安装或者键入命令\n\n> yum install -y wget && wget -O install.sh https://download.bt.cn/install/install_6.0.sh && sh install.sh ed8484bec\n\n### 3.安装Nginx\n\n//一键安装全部依赖\n\n> yum -y install gcc zlib zlib-devel pcre-devel opensslopenssl-devel\n\n//创建一个Nginx文件夹\n\n> cd /usr/local\n> mkdir nginx\n> cd nginx\n\n//下载tar包\n\n> wget http://nginx.org/download/nginx-1.13.7.tar.gz\n>\n> tar -xvf nginx-1.13.7.tar.gz\n\n//进入nginx目录\n\n> cd /usr/local/nginx\n\n//进入目录（以实际安装版本号为准）\n\n> cd nginx-1.13.7\n\n//执行命令考虑到后续安装ssl证书 添加两个模块\n\n> ./configure --with-http_stub_status_module --with-http_ssl_module\n\n//执行make命令\n\n> make\n\n//执行make install命令\n\n> make install\n\n//nginx安装完毕后，为了今后使用方便，将nginx配置到环境变量\n\n> echo 'export PATH=/usr/local/nginx/sbin:$PATH' >> /etc/profile\n\n//并使其生效\n\n> source /etc/profile\n\n//接下来直接输入nginx -v,看看环境变量有没有配置成功\n\n> nginx -v\n\n修改/usr/local/nginx/conf/nginx.conf\n\n将里面的地址改为网站目录位置\n\n主要修改的部分（示例）\n\n> location / {\n> \troot   /www/wwwroot/cpblog-hexo/public;\n> \tindex  index.html index.htm;\n> }\n>\n> #防盗链设置，只允许自己网站访问自己的多媒体资源\n> location ~*\\.(png|jpg|jpeg|gif|mp4){\n> \troot /www/wwwroot/epya15.fun;\n> \tvalid_referers none blocked www.epya15.fun epya15.fun;\n> \tif ($invalid_referer) {\n> \t\t#return 403;    #可以返回403，盗链网页显示的是一个裂开的图\n> \t\trewrite ^/ /images/invalid_referer_tip.png break;  #返回一个自己定制的图片\n> \t}\n> }\n\n### 4.配置防火墙\n\n//查看防火墙开启状态\n\n> systemctl status firewalld\n\n//开启防火墙，没有任何提示则为开启成功\n\n> systemctl start firewalld\n\n//如果要关闭防火墙设置,可能通过systemctl stop firewalld这条指令来关闭该功能,没有任何提示则关闭成功\n\n> systemctl stop firewalld\n\n//永久开启80端口\n\n> firewall-cmd --permanent --zone=public --add-port=80/tcp --permanent\n\n//查看80端口是否开启\n\n> firewall-cmd --permanent --query-port=80/tcp\n\n//重启防火墙\n\n> firewall-cmd --reload\n\n在云服武器上ping 百度看看能不能ping通，在其它电脑上ping云服务器看看能不能ping通\n\n### 5.云服务器安装git及ssh免密\n\n云服务器只负责拉取，不负责推送。\n\n先安装git\n\n> yum –y install git\n\n键入git指令验证是否安装成功\n\n新建文件夹作为网站根目录\n\n> mkdir www/wwwroot\n>\n> chmod 777 www/wwwroot\n\n生成ssh密钥\n\n> ssh-keygen -t ecdsa -b 521 -C 'yourmailaddress@gmail.com' -f ~/.ssh/id_ecdsa\n\n连按3次回车\n\n接着提取公钥\n\n> cat ~/.ssh/id_ecdsa.pub\n\n将公钥填到github的ssh列表中（在网页端配置，具体过程略）\n\n输入\n\n> ssh -T git@github.com\n\n提示Successfully即为完成配置\n\n进入www/wwwroot目录，克隆自己的git仓库，本地仓库名比如为cpblog\n\n> git clone git@github.com:xxxxxxx/xxxxxx.github.io.git cpblog\n\n\n\n### 6.本地环境安装\n\n本地电脑环境简介\n\n（Windows系统，需要git，nodejs，hexo，不需要Nginx）\n\n#### 装git\n\n本地也需安装git，主要负责内容推送，具体过程可参考互联网，本文略\n\ngit可视化工具可使用GitExtension（Windows）或SourceTree（mac）\n\n#### 装nodejs\n\n(为避免执行cmd权限不足，最好不要装到C盘，建议路径 D:\\nodejs，且放开这个目录的用户访问权限)\n\nhttps://nodejs.org/en/\n\n在 nodejs 文件夹中新建两个空文件夹node_cache、node_global，执行\n\n> npm config set prefix \"D:\\nodejs\\node_global\"\n> npm config set cache \"D:\\nodejs\\node_cache\"\n\n#### 装hexo\n\n> npm install -g hexo-cli\n\n配置hexo到环境变量PATH中\n\nD:\\nodejs\\node_global\n\nD盘新建目录D:\\cpblog-hexo\n\n在这个目录下执行Git Bash，执行以下命令\n\n> npm install -g hexo-cli\n> hexo g\n> hexo s\n\n然后在浏览器输入http://localhost:4000/\n\n看能不能看见网页\n\n### 7.部署自动化\n\n最终效果：本地写文 -> <u>上传github -> 云服务器拉新git -> 刷新网站</u>\n\n下划线的部分均通过自动化命令实现\n\n主体思想：本地持有全套hexo工程+hexo环境，服务器有全套hexo工程，本地使用hexo g生成网页，将产生的修改全部推送到git上，再调用服务器的git命令进行拉取\n\n#### 设置本地免密操作服务器git命令\n\n将本地电脑的.ssh/id_rsa.pub的内容粘贴至服务器的/root/.ssh/authorized_keys文件中，这个文件可以粘贴多个key，换行即可\n\n#### 云服务器开放shell目录\n\n在本地操作\n\n在cpblog-hexo的git工程下创建shell文件夹，进入shell文件夹新建两个脚本文件deploy-server.sh和deploy.sh\n\ndeploy-server.sh内容如下\n\n> #服务器拉新\n> cd /www/wwwroot/cpblog-hexo\n> git reset --hard\n> git clean -df\n> git pull\n\ndeploy.sh内容如下\n\n> #本地进行hexo发布 -> 上传至git -> 远端服务器拉新\n>\n> echo \"===================  Step1  < hexo generate >  ===================\"\n> cd D:\\cpblog-hexo\n> #hexo clean\n> hexo g\n>\n> echo \"===================  Step2  < local git push >  ===================\"\n> git pull\n> git add -A\n> git commit -m \"conventional update by deploy.sh\"\n> git push\n>\n> echo \"===================  Step3  < server git pull >  ===================\"\n> ssh root@服务器ip地址 bash /www/wwwroot/cpblog-hexo/shell/deploy-server.sh\n>\n> echo \"===================           Finished           ===================\"\n\n\n\ndeploy.sh的作用：由本地调用，实现网站一键生成和部署\n\ndeploy-server.sh的作用：由deploy.sh内部调用，实际发生在服务器端，用于拉新git\n\n\n\n因为本地脚本会调用服务器的deploy-server.sh，所以现在要去云服务器，给shell目录赋予777权限\n\n> chmod 777 /www/wwwroot/cpblog-hexo/shell\n\n#### 最佳实践\n\n本地写一篇文章，放在D:\\cpblog-hexo\\source\\\\_posts路径下\n\n双击deploy.sh执行部署\n\n执行完毕后，就会发现网页刷新了\n\n### 8.写文工具链\n\nTypora + PicGo + github 实现最舒服的图片引用姿势\n\nTypora支持mac和Windows，但要收费（淘宝80元一个激活码）\n\nPicGo用于上传图片到github，相当于用github当图床\n\nTypora 和PicGo有很好的适性，只要拖拽一张图片到Typora里，就能自动上传到github\n\n\n\n最后提供一个飞书云文档转markdown工具\nhttps://feishu2md.onrender.com/  ","source":"_posts/博客搭建/云服务器搭建博客网站全套流程.md","raw":"title: 云服务器搭建博客网站全套流程（浓缩版）\nauthor: epya15\ntags:\n\n  - 博客\ncategories: []\ndate: 2024-02-01 16:00:00\nimg: https://raw.githubusercontent.com/oO0OoOo/cpblog-hexo/main/source/images/202402021405279.jpg\nexcerpt: '不涉及概念解释，主要记录具体操作，以及写博文全套工具链用法'\n\n---\n### 1.配置安全组\n\n租用云服务器，安装centOS 7系统，配置安全组，放开【入方向规则】指定或全部端口以正常安装宝塔运维工具\n\n### 2.安装宝塔\n\n使用在线安装或者键入命令\n\n> yum install -y wget && wget -O install.sh https://download.bt.cn/install/install_6.0.sh && sh install.sh ed8484bec\n\n### 3.安装Nginx\n\n//一键安装全部依赖\n\n> yum -y install gcc zlib zlib-devel pcre-devel opensslopenssl-devel\n\n//创建一个Nginx文件夹\n\n> cd /usr/local\n> mkdir nginx\n> cd nginx\n\n//下载tar包\n\n> wget http://nginx.org/download/nginx-1.13.7.tar.gz\n>\n> tar -xvf nginx-1.13.7.tar.gz\n\n//进入nginx目录\n\n> cd /usr/local/nginx\n\n//进入目录（以实际安装版本号为准）\n\n> cd nginx-1.13.7\n\n//执行命令考虑到后续安装ssl证书 添加两个模块\n\n> ./configure --with-http_stub_status_module --with-http_ssl_module\n\n//执行make命令\n\n> make\n\n//执行make install命令\n\n> make install\n\n//nginx安装完毕后，为了今后使用方便，将nginx配置到环境变量\n\n> echo 'export PATH=/usr/local/nginx/sbin:$PATH' >> /etc/profile\n\n//并使其生效\n\n> source /etc/profile\n\n//接下来直接输入nginx -v,看看环境变量有没有配置成功\n\n> nginx -v\n\n修改/usr/local/nginx/conf/nginx.conf\n\n将里面的地址改为网站目录位置\n\n主要修改的部分（示例）\n\n> location / {\n> \troot   /www/wwwroot/cpblog-hexo/public;\n> \tindex  index.html index.htm;\n> }\n>\n> #防盗链设置，只允许自己网站访问自己的多媒体资源\n> location ~*\\.(png|jpg|jpeg|gif|mp4){\n> \troot /www/wwwroot/epya15.fun;\n> \tvalid_referers none blocked www.epya15.fun epya15.fun;\n> \tif ($invalid_referer) {\n> \t\t#return 403;    #可以返回403，盗链网页显示的是一个裂开的图\n> \t\trewrite ^/ /images/invalid_referer_tip.png break;  #返回一个自己定制的图片\n> \t}\n> }\n\n### 4.配置防火墙\n\n//查看防火墙开启状态\n\n> systemctl status firewalld\n\n//开启防火墙，没有任何提示则为开启成功\n\n> systemctl start firewalld\n\n//如果要关闭防火墙设置,可能通过systemctl stop firewalld这条指令来关闭该功能,没有任何提示则关闭成功\n\n> systemctl stop firewalld\n\n//永久开启80端口\n\n> firewall-cmd --permanent --zone=public --add-port=80/tcp --permanent\n\n//查看80端口是否开启\n\n> firewall-cmd --permanent --query-port=80/tcp\n\n//重启防火墙\n\n> firewall-cmd --reload\n\n在云服武器上ping 百度看看能不能ping通，在其它电脑上ping云服务器看看能不能ping通\n\n### 5.云服务器安装git及ssh免密\n\n云服务器只负责拉取，不负责推送。\n\n先安装git\n\n> yum –y install git\n\n键入git指令验证是否安装成功\n\n新建文件夹作为网站根目录\n\n> mkdir www/wwwroot\n>\n> chmod 777 www/wwwroot\n\n生成ssh密钥\n\n> ssh-keygen -t ecdsa -b 521 -C 'yourmailaddress@gmail.com' -f ~/.ssh/id_ecdsa\n\n连按3次回车\n\n接着提取公钥\n\n> cat ~/.ssh/id_ecdsa.pub\n\n将公钥填到github的ssh列表中（在网页端配置，具体过程略）\n\n输入\n\n> ssh -T git@github.com\n\n提示Successfully即为完成配置\n\n进入www/wwwroot目录，克隆自己的git仓库，本地仓库名比如为cpblog\n\n> git clone git@github.com:xxxxxxx/xxxxxx.github.io.git cpblog\n\n\n\n### 6.本地环境安装\n\n本地电脑环境简介\n\n（Windows系统，需要git，nodejs，hexo，不需要Nginx）\n\n#### 装git\n\n本地也需安装git，主要负责内容推送，具体过程可参考互联网，本文略\n\ngit可视化工具可使用GitExtension（Windows）或SourceTree（mac）\n\n#### 装nodejs\n\n(为避免执行cmd权限不足，最好不要装到C盘，建议路径 D:\\nodejs，且放开这个目录的用户访问权限)\n\nhttps://nodejs.org/en/\n\n在 nodejs 文件夹中新建两个空文件夹node_cache、node_global，执行\n\n> npm config set prefix \"D:\\nodejs\\node_global\"\n> npm config set cache \"D:\\nodejs\\node_cache\"\n\n#### 装hexo\n\n> npm install -g hexo-cli\n\n配置hexo到环境变量PATH中\n\nD:\\nodejs\\node_global\n\nD盘新建目录D:\\cpblog-hexo\n\n在这个目录下执行Git Bash，执行以下命令\n\n> npm install -g hexo-cli\n> hexo g\n> hexo s\n\n然后在浏览器输入http://localhost:4000/\n\n看能不能看见网页\n\n### 7.部署自动化\n\n最终效果：本地写文 -> <u>上传github -> 云服务器拉新git -> 刷新网站</u>\n\n下划线的部分均通过自动化命令实现\n\n主体思想：本地持有全套hexo工程+hexo环境，服务器有全套hexo工程，本地使用hexo g生成网页，将产生的修改全部推送到git上，再调用服务器的git命令进行拉取\n\n#### 设置本地免密操作服务器git命令\n\n将本地电脑的.ssh/id_rsa.pub的内容粘贴至服务器的/root/.ssh/authorized_keys文件中，这个文件可以粘贴多个key，换行即可\n\n#### 云服务器开放shell目录\n\n在本地操作\n\n在cpblog-hexo的git工程下创建shell文件夹，进入shell文件夹新建两个脚本文件deploy-server.sh和deploy.sh\n\ndeploy-server.sh内容如下\n\n> #服务器拉新\n> cd /www/wwwroot/cpblog-hexo\n> git reset --hard\n> git clean -df\n> git pull\n\ndeploy.sh内容如下\n\n> #本地进行hexo发布 -> 上传至git -> 远端服务器拉新\n>\n> echo \"===================  Step1  < hexo generate >  ===================\"\n> cd D:\\cpblog-hexo\n> #hexo clean\n> hexo g\n>\n> echo \"===================  Step2  < local git push >  ===================\"\n> git pull\n> git add -A\n> git commit -m \"conventional update by deploy.sh\"\n> git push\n>\n> echo \"===================  Step3  < server git pull >  ===================\"\n> ssh root@服务器ip地址 bash /www/wwwroot/cpblog-hexo/shell/deploy-server.sh\n>\n> echo \"===================           Finished           ===================\"\n\n\n\ndeploy.sh的作用：由本地调用，实现网站一键生成和部署\n\ndeploy-server.sh的作用：由deploy.sh内部调用，实际发生在服务器端，用于拉新git\n\n\n\n因为本地脚本会调用服务器的deploy-server.sh，所以现在要去云服务器，给shell目录赋予777权限\n\n> chmod 777 /www/wwwroot/cpblog-hexo/shell\n\n#### 最佳实践\n\n本地写一篇文章，放在D:\\cpblog-hexo\\source\\\\_posts路径下\n\n双击deploy.sh执行部署\n\n执行完毕后，就会发现网页刷新了\n\n### 8.写文工具链\n\nTypora + PicGo + github 实现最舒服的图片引用姿势\n\nTypora支持mac和Windows，但要收费（淘宝80元一个激活码）\n\nPicGo用于上传图片到github，相当于用github当图床\n\nTypora 和PicGo有很好的适性，只要拖拽一张图片到Typora里，就能自动上传到github\n\n\n\n最后提供一个飞书云文档转markdown工具\nhttps://feishu2md.onrender.com/  ","slug":"博客搭建/云服务器搭建博客网站全套流程","published":1,"updated":"2024-02-02T06:05:56.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49c5t300032ovqc57t6918","content":"<h3 id=\"1-配置安全组\"><a href=\"#1-配置安全组\" class=\"headerlink\" title=\"1.配置安全组\"></a>1.配置安全组</h3><p>租用云服务器，安装centOS 7系统，配置安全组，放开【入方向规则】指定或全部端口以正常安装宝塔运维工具</p>\n<h3 id=\"2-安装宝塔\"><a href=\"#2-安装宝塔\" class=\"headerlink\" title=\"2.安装宝塔\"></a>2.安装宝塔</h3><p>使用在线安装或者键入命令</p>\n<blockquote>\n<p>yum install -y wget &amp;&amp; wget -O install.sh <a href=\"https://download.bt.cn/install/install_6.0.sh\">https://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh ed8484bec</p>\n</blockquote>\n<h3 id=\"3-安装Nginx\"><a href=\"#3-安装Nginx\" class=\"headerlink\" title=\"3.安装Nginx\"></a>3.安装Nginx</h3><p>&#x2F;&#x2F;一键安装全部依赖</p>\n<blockquote>\n<p>yum -y install gcc zlib zlib-devel pcre-devel opensslopenssl-devel</p>\n</blockquote>\n<p>&#x2F;&#x2F;创建一个Nginx文件夹</p>\n<blockquote>\n<p>cd &#x2F;usr&#x2F;local<br>mkdir nginx<br>cd nginx</p>\n</blockquote>\n<p>&#x2F;&#x2F;下载tar包</p>\n<blockquote>\n<p>wget <a href=\"http://nginx.org/download/nginx-1.13.7.tar.gz\">http://nginx.org/download/nginx-1.13.7.tar.gz</a></p>\n<p>tar -xvf nginx-1.13.7.tar.gz</p>\n</blockquote>\n<p>&#x2F;&#x2F;进入nginx目录</p>\n<blockquote>\n<p>cd &#x2F;usr&#x2F;local&#x2F;nginx</p>\n</blockquote>\n<p>&#x2F;&#x2F;进入目录（以实际安装版本号为准）</p>\n<blockquote>\n<p>cd nginx-1.13.7</p>\n</blockquote>\n<p>&#x2F;&#x2F;执行命令考虑到后续安装ssl证书 添加两个模块</p>\n<blockquote>\n<p>.&#x2F;configure –with-http_stub_status_module –with-http_ssl_module</p>\n</blockquote>\n<p>&#x2F;&#x2F;执行make命令</p>\n<blockquote>\n<p>make</p>\n</blockquote>\n<p>&#x2F;&#x2F;执行make install命令</p>\n<blockquote>\n<p>make install</p>\n</blockquote>\n<p>&#x2F;&#x2F;nginx安装完毕后，为了今后使用方便，将nginx配置到环境变量</p>\n<blockquote>\n<p>echo ‘export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin:$PATH’ &gt;&gt; &#x2F;etc&#x2F;profile</p>\n</blockquote>\n<p>&#x2F;&#x2F;并使其生效</p>\n<blockquote>\n<p>source &#x2F;etc&#x2F;profile</p>\n</blockquote>\n<p>&#x2F;&#x2F;接下来直接输入nginx -v,看看环境变量有没有配置成功</p>\n<blockquote>\n<p>nginx -v</p>\n</blockquote>\n<p>修改&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</p>\n<p>将里面的地址改为网站目录位置</p>\n<p>主要修改的部分（示例）</p>\n<blockquote>\n<p>location &#x2F; {<br>    root   &#x2F;www&#x2F;wwwroot&#x2F;cpblog-hexo&#x2F;public;<br>    index  index.html index.htm;<br>}</p>\n<p>#防盗链设置，只允许自己网站访问自己的多媒体资源<br>location ~*.(png|jpg|jpeg|gif|mp4){<br>    root &#x2F;www&#x2F;wwwroot&#x2F;epya15.fun;<br>    valid_referers none blocked <a href=\"http://www.epya15.fun/\">www.epya15.fun</a> epya15.fun;<br>    if ($invalid_referer) {<br>        #return 403;    #可以返回403，盗链网页显示的是一个裂开的图<br>        rewrite ^&#x2F; &#x2F;images&#x2F;invalid_referer_tip.png break;  #返回一个自己定制的图片<br>    }<br>}</p>\n</blockquote>\n<h3 id=\"4-配置防火墙\"><a href=\"#4-配置防火墙\" class=\"headerlink\" title=\"4.配置防火墙\"></a>4.配置防火墙</h3><p>&#x2F;&#x2F;查看防火墙开启状态</p>\n<blockquote>\n<p>systemctl status firewalld</p>\n</blockquote>\n<p>&#x2F;&#x2F;开启防火墙，没有任何提示则为开启成功</p>\n<blockquote>\n<p>systemctl start firewalld</p>\n</blockquote>\n<p>&#x2F;&#x2F;如果要关闭防火墙设置,可能通过systemctl stop firewalld这条指令来关闭该功能,没有任何提示则关闭成功</p>\n<blockquote>\n<p>systemctl stop firewalld</p>\n</blockquote>\n<p>&#x2F;&#x2F;永久开启80端口</p>\n<blockquote>\n<p>firewall-cmd –permanent –zone&#x3D;public –add-port&#x3D;80&#x2F;tcp –permanent</p>\n</blockquote>\n<p>&#x2F;&#x2F;查看80端口是否开启</p>\n<blockquote>\n<p>firewall-cmd –permanent –query-port&#x3D;80&#x2F;tcp</p>\n</blockquote>\n<p>&#x2F;&#x2F;重启防火墙</p>\n<blockquote>\n<p>firewall-cmd –reload</p>\n</blockquote>\n<p>在云服武器上ping 百度看看能不能ping通，在其它电脑上ping云服务器看看能不能ping通</p>\n<h3 id=\"5-云服务器安装git及ssh免密\"><a href=\"#5-云服务器安装git及ssh免密\" class=\"headerlink\" title=\"5.云服务器安装git及ssh免密\"></a>5.云服务器安装git及ssh免密</h3><p>云服务器只负责拉取，不负责推送。</p>\n<p>先安装git</p>\n<blockquote>\n<p>yum –y install git</p>\n</blockquote>\n<p>键入git指令验证是否安装成功</p>\n<p>新建文件夹作为网站根目录</p>\n<blockquote>\n<p>mkdir www&#x2F;wwwroot</p>\n<p>chmod 777 www&#x2F;wwwroot</p>\n</blockquote>\n<p>生成ssh密钥</p>\n<blockquote>\n<p>ssh-keygen -t ecdsa -b 521 -C ‘<a href=\"mailto:&#121;&#x6f;&#117;&#x72;&#x6d;&#97;&#x69;&#108;&#97;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;\">&#121;&#x6f;&#117;&#x72;&#x6d;&#97;&#x69;&#108;&#97;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;</a>‘ -f ~&#x2F;.ssh&#x2F;id_ecdsa</p>\n</blockquote>\n<p>连按3次回车</p>\n<p>接着提取公钥</p>\n<blockquote>\n<p>cat ~&#x2F;.ssh&#x2F;id_ecdsa.pub</p>\n</blockquote>\n<p>将公钥填到github的ssh列表中（在网页端配置，具体过程略）</p>\n<p>输入</p>\n<blockquote>\n<p>ssh -T <a href=\"mailto:&#x67;&#105;&#x74;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;\">&#x67;&#105;&#x74;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n<p>提示Successfully即为完成配置</p>\n<p>进入www&#x2F;wwwroot目录，克隆自己的git仓库，本地仓库名比如为cpblog</p>\n<blockquote>\n<p>git clone <a href=\"mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;\">&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;</a>:xxxxxxx&#x2F;xxxxxx.github.io.git cpblog</p>\n</blockquote>\n<h3 id=\"6-本地环境安装\"><a href=\"#6-本地环境安装\" class=\"headerlink\" title=\"6.本地环境安装\"></a>6.本地环境安装</h3><p>本地电脑环境简介</p>\n<p>（Windows系统，需要git，nodejs，hexo，不需要Nginx）</p>\n<h4 id=\"装git\"><a href=\"#装git\" class=\"headerlink\" title=\"装git\"></a>装git</h4><p>本地也需安装git，主要负责内容推送，具体过程可参考互联网，本文略</p>\n<p>git可视化工具可使用GitExtension（Windows）或SourceTree（mac）</p>\n<h4 id=\"装nodejs\"><a href=\"#装nodejs\" class=\"headerlink\" title=\"装nodejs\"></a>装nodejs</h4><p>(为避免执行cmd权限不足，最好不要装到C盘，建议路径 D:\\nodejs，且放开这个目录的用户访问权限)</p>\n<p><a href=\"https://nodejs.org/en/\">https://nodejs.org/en/</a></p>\n<p>在 nodejs 文件夹中新建两个空文件夹node_cache、node_global，执行</p>\n<blockquote>\n<p>npm config set prefix “D:\\nodejs\\node_global”<br>npm config set cache “D:\\nodejs\\node_cache”</p>\n</blockquote>\n<h4 id=\"装hexo\"><a href=\"#装hexo\" class=\"headerlink\" title=\"装hexo\"></a>装hexo</h4><blockquote>\n<p>npm install -g hexo-cli</p>\n</blockquote>\n<p>配置hexo到环境变量PATH中</p>\n<p>D:\\nodejs\\node_global</p>\n<p>D盘新建目录D:\\cpblog-hexo</p>\n<p>在这个目录下执行Git Bash，执行以下命令</p>\n<blockquote>\n<p>npm install -g hexo-cli<br>hexo g<br>hexo s</p>\n</blockquote>\n<p>然后在浏览器输入<a href=\"http://localhost:4000/\">http://localhost:4000/</a></p>\n<p>看能不能看见网页</p>\n<h3 id=\"7-部署自动化\"><a href=\"#7-部署自动化\" class=\"headerlink\" title=\"7.部署自动化\"></a>7.部署自动化</h3><p>最终效果：本地写文 -&gt; <u>上传github -&gt; 云服务器拉新git -&gt; 刷新网站</u></p>\n<p>下划线的部分均通过自动化命令实现</p>\n<p>主体思想：本地持有全套hexo工程+hexo环境，服务器有全套hexo工程，本地使用hexo g生成网页，将产生的修改全部推送到git上，再调用服务器的git命令进行拉取</p>\n<h4 id=\"设置本地免密操作服务器git命令\"><a href=\"#设置本地免密操作服务器git命令\" class=\"headerlink\" title=\"设置本地免密操作服务器git命令\"></a>设置本地免密操作服务器git命令</h4><p>将本地电脑的.ssh&#x2F;id_rsa.pub的内容粘贴至服务器的&#x2F;root&#x2F;.ssh&#x2F;authorized_keys文件中，这个文件可以粘贴多个key，换行即可</p>\n<h4 id=\"云服务器开放shell目录\"><a href=\"#云服务器开放shell目录\" class=\"headerlink\" title=\"云服务器开放shell目录\"></a>云服务器开放shell目录</h4><p>在本地操作</p>\n<p>在cpblog-hexo的git工程下创建shell文件夹，进入shell文件夹新建两个脚本文件deploy-server.sh和deploy.sh</p>\n<p>deploy-server.sh内容如下</p>\n<blockquote>\n<p>#服务器拉新<br>cd &#x2F;www&#x2F;wwwroot&#x2F;cpblog-hexo<br>git reset –hard<br>git clean -df<br>git pull</p>\n</blockquote>\n<p>deploy.sh内容如下</p>\n<blockquote>\n<p>#本地进行hexo发布 -&gt; 上传至git -&gt; 远端服务器拉新</p>\n<p>echo “&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;  Step1  &lt; hexo generate &gt;  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”<br>cd D:\\cpblog-hexo<br>#hexo clean<br>hexo g</p>\n<p>echo “&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;  Step2  &lt; local git push &gt;  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”<br>git pull<br>git add -A<br>git commit -m “conventional update by deploy.sh”<br>git push</p>\n<p>echo “&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;  Step3  &lt; server git pull &gt;  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”<br>ssh root@服务器ip地址 bash &#x2F;www&#x2F;wwwroot&#x2F;cpblog-hexo&#x2F;shell&#x2F;deploy-server.sh</p>\n<p>echo “&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;           Finished           &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”</p>\n</blockquote>\n<p>deploy.sh的作用：由本地调用，实现网站一键生成和部署</p>\n<p>deploy-server.sh的作用：由deploy.sh内部调用，实际发生在服务器端，用于拉新git</p>\n<p>因为本地脚本会调用服务器的deploy-server.sh，所以现在要去云服务器，给shell目录赋予777权限</p>\n<blockquote>\n<p>chmod 777 &#x2F;www&#x2F;wwwroot&#x2F;cpblog-hexo&#x2F;shell</p>\n</blockquote>\n<h4 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h4><p>本地写一篇文章，放在D:\\cpblog-hexo\\source\\_posts路径下</p>\n<p>双击deploy.sh执行部署</p>\n<p>执行完毕后，就会发现网页刷新了</p>\n<h3 id=\"8-写文工具链\"><a href=\"#8-写文工具链\" class=\"headerlink\" title=\"8.写文工具链\"></a>8.写文工具链</h3><p>Typora + PicGo + github 实现最舒服的图片引用姿势</p>\n<p>Typora支持mac和Windows，但要收费（淘宝80元一个激活码）</p>\n<p>PicGo用于上传图片到github，相当于用github当图床</p>\n<p>Typora 和PicGo有很好的适性，只要拖拽一张图片到Typora里，就能自动上传到github</p>\n<p>最后提供一个飞书云文档转markdown工具<br><a href=\"https://feishu2md.onrender.com/\">https://feishu2md.onrender.com/</a>  </p>\n","site":{"data":{}},"more":"<h3 id=\"1-配置安全组\"><a href=\"#1-配置安全组\" class=\"headerlink\" title=\"1.配置安全组\"></a>1.配置安全组</h3><p>租用云服务器，安装centOS 7系统，配置安全组，放开【入方向规则】指定或全部端口以正常安装宝塔运维工具</p>\n<h3 id=\"2-安装宝塔\"><a href=\"#2-安装宝塔\" class=\"headerlink\" title=\"2.安装宝塔\"></a>2.安装宝塔</h3><p>使用在线安装或者键入命令</p>\n<blockquote>\n<p>yum install -y wget &amp;&amp; wget -O install.sh <a href=\"https://download.bt.cn/install/install_6.0.sh\">https://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh ed8484bec</p>\n</blockquote>\n<h3 id=\"3-安装Nginx\"><a href=\"#3-安装Nginx\" class=\"headerlink\" title=\"3.安装Nginx\"></a>3.安装Nginx</h3><p>&#x2F;&#x2F;一键安装全部依赖</p>\n<blockquote>\n<p>yum -y install gcc zlib zlib-devel pcre-devel opensslopenssl-devel</p>\n</blockquote>\n<p>&#x2F;&#x2F;创建一个Nginx文件夹</p>\n<blockquote>\n<p>cd &#x2F;usr&#x2F;local<br>mkdir nginx<br>cd nginx</p>\n</blockquote>\n<p>&#x2F;&#x2F;下载tar包</p>\n<blockquote>\n<p>wget <a href=\"http://nginx.org/download/nginx-1.13.7.tar.gz\">http://nginx.org/download/nginx-1.13.7.tar.gz</a></p>\n<p>tar -xvf nginx-1.13.7.tar.gz</p>\n</blockquote>\n<p>&#x2F;&#x2F;进入nginx目录</p>\n<blockquote>\n<p>cd &#x2F;usr&#x2F;local&#x2F;nginx</p>\n</blockquote>\n<p>&#x2F;&#x2F;进入目录（以实际安装版本号为准）</p>\n<blockquote>\n<p>cd nginx-1.13.7</p>\n</blockquote>\n<p>&#x2F;&#x2F;执行命令考虑到后续安装ssl证书 添加两个模块</p>\n<blockquote>\n<p>.&#x2F;configure –with-http_stub_status_module –with-http_ssl_module</p>\n</blockquote>\n<p>&#x2F;&#x2F;执行make命令</p>\n<blockquote>\n<p>make</p>\n</blockquote>\n<p>&#x2F;&#x2F;执行make install命令</p>\n<blockquote>\n<p>make install</p>\n</blockquote>\n<p>&#x2F;&#x2F;nginx安装完毕后，为了今后使用方便，将nginx配置到环境变量</p>\n<blockquote>\n<p>echo ‘export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin:$PATH’ &gt;&gt; &#x2F;etc&#x2F;profile</p>\n</blockquote>\n<p>&#x2F;&#x2F;并使其生效</p>\n<blockquote>\n<p>source &#x2F;etc&#x2F;profile</p>\n</blockquote>\n<p>&#x2F;&#x2F;接下来直接输入nginx -v,看看环境变量有没有配置成功</p>\n<blockquote>\n<p>nginx -v</p>\n</blockquote>\n<p>修改&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</p>\n<p>将里面的地址改为网站目录位置</p>\n<p>主要修改的部分（示例）</p>\n<blockquote>\n<p>location &#x2F; {<br>    root   &#x2F;www&#x2F;wwwroot&#x2F;cpblog-hexo&#x2F;public;<br>    index  index.html index.htm;<br>}</p>\n<p>#防盗链设置，只允许自己网站访问自己的多媒体资源<br>location ~*.(png|jpg|jpeg|gif|mp4){<br>    root &#x2F;www&#x2F;wwwroot&#x2F;epya15.fun;<br>    valid_referers none blocked <a href=\"http://www.epya15.fun/\">www.epya15.fun</a> epya15.fun;<br>    if ($invalid_referer) {<br>        #return 403;    #可以返回403，盗链网页显示的是一个裂开的图<br>        rewrite ^&#x2F; &#x2F;images&#x2F;invalid_referer_tip.png break;  #返回一个自己定制的图片<br>    }<br>}</p>\n</blockquote>\n<h3 id=\"4-配置防火墙\"><a href=\"#4-配置防火墙\" class=\"headerlink\" title=\"4.配置防火墙\"></a>4.配置防火墙</h3><p>&#x2F;&#x2F;查看防火墙开启状态</p>\n<blockquote>\n<p>systemctl status firewalld</p>\n</blockquote>\n<p>&#x2F;&#x2F;开启防火墙，没有任何提示则为开启成功</p>\n<blockquote>\n<p>systemctl start firewalld</p>\n</blockquote>\n<p>&#x2F;&#x2F;如果要关闭防火墙设置,可能通过systemctl stop firewalld这条指令来关闭该功能,没有任何提示则关闭成功</p>\n<blockquote>\n<p>systemctl stop firewalld</p>\n</blockquote>\n<p>&#x2F;&#x2F;永久开启80端口</p>\n<blockquote>\n<p>firewall-cmd –permanent –zone&#x3D;public –add-port&#x3D;80&#x2F;tcp –permanent</p>\n</blockquote>\n<p>&#x2F;&#x2F;查看80端口是否开启</p>\n<blockquote>\n<p>firewall-cmd –permanent –query-port&#x3D;80&#x2F;tcp</p>\n</blockquote>\n<p>&#x2F;&#x2F;重启防火墙</p>\n<blockquote>\n<p>firewall-cmd –reload</p>\n</blockquote>\n<p>在云服武器上ping 百度看看能不能ping通，在其它电脑上ping云服务器看看能不能ping通</p>\n<h3 id=\"5-云服务器安装git及ssh免密\"><a href=\"#5-云服务器安装git及ssh免密\" class=\"headerlink\" title=\"5.云服务器安装git及ssh免密\"></a>5.云服务器安装git及ssh免密</h3><p>云服务器只负责拉取，不负责推送。</p>\n<p>先安装git</p>\n<blockquote>\n<p>yum –y install git</p>\n</blockquote>\n<p>键入git指令验证是否安装成功</p>\n<p>新建文件夹作为网站根目录</p>\n<blockquote>\n<p>mkdir www&#x2F;wwwroot</p>\n<p>chmod 777 www&#x2F;wwwroot</p>\n</blockquote>\n<p>生成ssh密钥</p>\n<blockquote>\n<p>ssh-keygen -t ecdsa -b 521 -C ‘<a href=\"mailto:&#121;&#x6f;&#117;&#x72;&#x6d;&#97;&#x69;&#108;&#97;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;\">&#121;&#x6f;&#117;&#x72;&#x6d;&#97;&#x69;&#108;&#97;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;</a>‘ -f ~&#x2F;.ssh&#x2F;id_ecdsa</p>\n</blockquote>\n<p>连按3次回车</p>\n<p>接着提取公钥</p>\n<blockquote>\n<p>cat ~&#x2F;.ssh&#x2F;id_ecdsa.pub</p>\n</blockquote>\n<p>将公钥填到github的ssh列表中（在网页端配置，具体过程略）</p>\n<p>输入</p>\n<blockquote>\n<p>ssh -T <a href=\"mailto:&#x67;&#105;&#x74;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;\">&#x67;&#105;&#x74;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n<p>提示Successfully即为完成配置</p>\n<p>进入www&#x2F;wwwroot目录，克隆自己的git仓库，本地仓库名比如为cpblog</p>\n<blockquote>\n<p>git clone <a href=\"mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;\">&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;</a>:xxxxxxx&#x2F;xxxxxx.github.io.git cpblog</p>\n</blockquote>\n<h3 id=\"6-本地环境安装\"><a href=\"#6-本地环境安装\" class=\"headerlink\" title=\"6.本地环境安装\"></a>6.本地环境安装</h3><p>本地电脑环境简介</p>\n<p>（Windows系统，需要git，nodejs，hexo，不需要Nginx）</p>\n<h4 id=\"装git\"><a href=\"#装git\" class=\"headerlink\" title=\"装git\"></a>装git</h4><p>本地也需安装git，主要负责内容推送，具体过程可参考互联网，本文略</p>\n<p>git可视化工具可使用GitExtension（Windows）或SourceTree（mac）</p>\n<h4 id=\"装nodejs\"><a href=\"#装nodejs\" class=\"headerlink\" title=\"装nodejs\"></a>装nodejs</h4><p>(为避免执行cmd权限不足，最好不要装到C盘，建议路径 D:\\nodejs，且放开这个目录的用户访问权限)</p>\n<p><a href=\"https://nodejs.org/en/\">https://nodejs.org/en/</a></p>\n<p>在 nodejs 文件夹中新建两个空文件夹node_cache、node_global，执行</p>\n<blockquote>\n<p>npm config set prefix “D:\\nodejs\\node_global”<br>npm config set cache “D:\\nodejs\\node_cache”</p>\n</blockquote>\n<h4 id=\"装hexo\"><a href=\"#装hexo\" class=\"headerlink\" title=\"装hexo\"></a>装hexo</h4><blockquote>\n<p>npm install -g hexo-cli</p>\n</blockquote>\n<p>配置hexo到环境变量PATH中</p>\n<p>D:\\nodejs\\node_global</p>\n<p>D盘新建目录D:\\cpblog-hexo</p>\n<p>在这个目录下执行Git Bash，执行以下命令</p>\n<blockquote>\n<p>npm install -g hexo-cli<br>hexo g<br>hexo s</p>\n</blockquote>\n<p>然后在浏览器输入<a href=\"http://localhost:4000/\">http://localhost:4000/</a></p>\n<p>看能不能看见网页</p>\n<h3 id=\"7-部署自动化\"><a href=\"#7-部署自动化\" class=\"headerlink\" title=\"7.部署自动化\"></a>7.部署自动化</h3><p>最终效果：本地写文 -&gt; <u>上传github -&gt; 云服务器拉新git -&gt; 刷新网站</u></p>\n<p>下划线的部分均通过自动化命令实现</p>\n<p>主体思想：本地持有全套hexo工程+hexo环境，服务器有全套hexo工程，本地使用hexo g生成网页，将产生的修改全部推送到git上，再调用服务器的git命令进行拉取</p>\n<h4 id=\"设置本地免密操作服务器git命令\"><a href=\"#设置本地免密操作服务器git命令\" class=\"headerlink\" title=\"设置本地免密操作服务器git命令\"></a>设置本地免密操作服务器git命令</h4><p>将本地电脑的.ssh&#x2F;id_rsa.pub的内容粘贴至服务器的&#x2F;root&#x2F;.ssh&#x2F;authorized_keys文件中，这个文件可以粘贴多个key，换行即可</p>\n<h4 id=\"云服务器开放shell目录\"><a href=\"#云服务器开放shell目录\" class=\"headerlink\" title=\"云服务器开放shell目录\"></a>云服务器开放shell目录</h4><p>在本地操作</p>\n<p>在cpblog-hexo的git工程下创建shell文件夹，进入shell文件夹新建两个脚本文件deploy-server.sh和deploy.sh</p>\n<p>deploy-server.sh内容如下</p>\n<blockquote>\n<p>#服务器拉新<br>cd &#x2F;www&#x2F;wwwroot&#x2F;cpblog-hexo<br>git reset –hard<br>git clean -df<br>git pull</p>\n</blockquote>\n<p>deploy.sh内容如下</p>\n<blockquote>\n<p>#本地进行hexo发布 -&gt; 上传至git -&gt; 远端服务器拉新</p>\n<p>echo “&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;  Step1  &lt; hexo generate &gt;  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”<br>cd D:\\cpblog-hexo<br>#hexo clean<br>hexo g</p>\n<p>echo “&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;  Step2  &lt; local git push &gt;  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”<br>git pull<br>git add -A<br>git commit -m “conventional update by deploy.sh”<br>git push</p>\n<p>echo “&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;  Step3  &lt; server git pull &gt;  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”<br>ssh root@服务器ip地址 bash &#x2F;www&#x2F;wwwroot&#x2F;cpblog-hexo&#x2F;shell&#x2F;deploy-server.sh</p>\n<p>echo “&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;           Finished           &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;”</p>\n</blockquote>\n<p>deploy.sh的作用：由本地调用，实现网站一键生成和部署</p>\n<p>deploy-server.sh的作用：由deploy.sh内部调用，实际发生在服务器端，用于拉新git</p>\n<p>因为本地脚本会调用服务器的deploy-server.sh，所以现在要去云服务器，给shell目录赋予777权限</p>\n<blockquote>\n<p>chmod 777 &#x2F;www&#x2F;wwwroot&#x2F;cpblog-hexo&#x2F;shell</p>\n</blockquote>\n<h4 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h4><p>本地写一篇文章，放在D:\\cpblog-hexo\\source\\_posts路径下</p>\n<p>双击deploy.sh执行部署</p>\n<p>执行完毕后，就会发现网页刷新了</p>\n<h3 id=\"8-写文工具链\"><a href=\"#8-写文工具链\" class=\"headerlink\" title=\"8.写文工具链\"></a>8.写文工具链</h3><p>Typora + PicGo + github 实现最舒服的图片引用姿势</p>\n<p>Typora支持mac和Windows，但要收费（淘宝80元一个激活码）</p>\n<p>PicGo用于上传图片到github，相当于用github当图床</p>\n<p>Typora 和PicGo有很好的适性，只要拖拽一张图片到Typora里，就能自动上传到github</p>\n<p>最后提供一个飞书云文档转markdown工具<br><a href=\"https://feishu2md.onrender.com/\">https://feishu2md.onrender.com/</a>  </p>\n"},{"title":"往期封面2023/01/18 熊猫兔珍贵影像资料","author":"epya15","img":"/images/cover_rebbitbg.jpg","date":"2023-01-17T17:05:00.000Z","_content":"\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit01.mp4\" />  \n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit02.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit03.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit04.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit05.mp4\" />  \n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit06.mp4\" />  \n\n","source":"_posts/封面/往期封面2023-01-18 熊猫兔珍贵影像资料.md","raw":"title: 往期封面2023/01/18 熊猫兔珍贵影像资料\nauthor: epya15\ntags:\n  - 生活\ncategories:\n  - 往期封面\nimg: /images/cover_rebbitbg.jpg\ndate: 2023-01-18 01:05:00\n\n---\n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit01.mp4\" />  \n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit02.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit03.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit04.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit05.mp4\" />  \n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit06.mp4\" />  \n\n","slug":"封面/往期封面2023-01-18 熊猫兔珍贵影像资料","published":1,"updated":"2024-02-02T05:53:16.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49c5t300052ovq1hqh73fz","content":"<video width=\"540\" controls loop src=\"/images/histcover1_rabbit01.mp4\" />  \n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit02.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit03.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit04.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit05.mp4\" />  \n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit06.mp4\" />  \n\n","site":{"data":{}},"excerpt":"","more":"<video width=\"540\" controls loop src=\"/images/histcover1_rabbit01.mp4\" />  \n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit02.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit03.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit04.mp4\" />  \n\n<video width=\"270\" controls loop src=\"/images/histcover1_rabbit05.mp4\" />  \n\n<video width=\"540\" controls loop src=\"/images/histcover1_rabbit06.mp4\" />  \n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clrafu6hv000108vqh7ckcy87","category_id":"clrafu6hy000408vqfw9agw6t","_id":"clrafu6i2000j08vqhvi16wx0"},{"post_id":"clrafu6hz000708vq6kje5r72","category_id":"clrafu6hy000408vqfw9agw6t","_id":"clrafu6i4000o08vqc3ppa5im"},{"post_id":"clrafu6i1000f08vqhwo50fpz","category_id":"clrafu6i5000u08vq1hhjdbjp","_id":"clrafu6i7001c08vqfk2l77ah"},{"post_id":"clrafu6hz000908vq0uw9fcd2","category_id":"clrafu6i2000i08vqg65ud7po","_id":"clrafu6i9002208vqbj59fodv"},{"post_id":"clrafu6hz000908vq0uw9fcd2","category_id":"clrafu6i7001d08vq4qcp0yrb","_id":"clrafu6i9002508vqduegdd8x"},{"post_id":"clrafu6ib002u08vqb4t1gt0v","category_id":"clrafu6i4000q08vqfnsudvco","_id":"clrafu6ic003008vqgioxdnip"},{"post_id":"cls49c5sy00002ovq0eb2c0cp","category_id":"clrafu6i4000q08vqfnsudvco","_id":"cls49c5t400062ovqdjvh4oa7"},{"post_id":"cls49c5t200012ovqcjvdai2c","category_id":"clrafu6ib002v08vq9m3tg8c2","_id":"cls49c5t400082ovqcgvz878c"},{"post_id":"cls49c5t300052ovq1hqh73fz","category_id":"clrafu6ib002v08vq9m3tg8c2","_id":"cls49c5t4000a2ovqe9tr59qa"}],"PostTag":[{"post_id":"clrafu6hv000108vqh7ckcy87","tag_id":"clrafu6hy000508vq5iq9fkco","_id":"clrafu6i3000m08vqaii70ad8"},{"post_id":"clrafu6hv000108vqh7ckcy87","tag_id":"clrafu6i0000d08vq0bos9qy3","_id":"clrafu6i4000p08vqg0p90uxz"},{"post_id":"clrafu6hz000708vq6kje5r72","tag_id":"clrafu6hy000508vq5iq9fkco","_id":"clrafu6i5000x08vq1vcte96g"},{"post_id":"clrafu6hz000708vq6kje5r72","tag_id":"clrafu6i4000r08vqh4os688k","_id":"clrafu6i5001008vq517x1mf0"},{"post_id":"clrafu6hz000908vq0uw9fcd2","tag_id":"clrafu6i5000v08vqdcan8p49","_id":"clrafu6i8001j08vqg4j23h2b"},{"post_id":"clrafu6hz000908vq0uw9fcd2","tag_id":"clrafu6i5001208vq0f65d5jq","_id":"clrafu6i8001n08vqgi2f25j3"},{"post_id":"clrafu6hz000908vq0uw9fcd2","tag_id":"clrafu6i6001a08vqaetud6wi","_id":"clrafu6i8001r08vq6i88dcuu"},{"post_id":"clrafu6i1000f08vqhwo50fpz","tag_id":"clrafu6i7001g08vq13ws4csb","_id":"clrafu6i9002308vq2r7t815x"},{"post_id":"clrafu6ib002u08vqb4t1gt0v","tag_id":"clrafu6i7001g08vq13ws4csb","_id":"clrafu6ib002y08vq74kc8flr"},{"post_id":"cls49c5sy00002ovq0eb2c0cp","tag_id":"clrafu6i7001g08vq13ws4csb","_id":"cls49c5t300022ovq8a29eupp"},{"post_id":"cls49c5t200012ovqcjvdai2c","tag_id":"clrafu6ib002w08vqe3vrhecg","_id":"cls49c5t300042ovqdb3c23re"},{"post_id":"cls49c5t300032ovqc57t6918","tag_id":"clrafu6i7001g08vq13ws4csb","_id":"cls49c5t400072ovq445fe7ru"},{"post_id":"cls49c5t300052ovq1hqh73fz","tag_id":"clrafu6ib002w08vqe3vrhecg","_id":"cls49c5t400092ovqgykoavlf"}],"Tag":[{"name":"视频","_id":"clrafu6hy000508vq5iq9fkco"},{"name":"无锡","_id":"clrafu6i0000d08vq0bos9qy3"},{"name":"杭州","_id":"clrafu6i4000r08vqh4os688k"},{"name":"Unity","_id":"clrafu6i5000v08vqdcan8p49"},{"name":"Android","_id":"clrafu6i5001208vq0f65d5jq"},{"name":"sdk","_id":"clrafu6i6001a08vqaetud6wi"},{"name":"博客","_id":"clrafu6i7001g08vq13ws4csb"},{"name":"生活","_id":"clrafu6ib002w08vqe3vrhecg"},{"name":"打包","_id":"clrafu6ic003508vq4byv5wo2"}]}}